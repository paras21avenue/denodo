# REQUIRES-PROPERTIES-FILE - # Do not remove this comment!
# 
# Generated with Denodo Platform 8.0 update 20220815.

#-------------------------------------------
# Denodo Export
#
# URI: //dnd-lb-vdp-ea3e32fe-0a56-474d-93d5-832da0a1e8d8.eastus.cloudapp.azure.com:9999/datafederation
# Database(s): datafederation
# Date: Dec 14, 2022, 5:49:49 AM UTC
#-------------------------------------------


# 0 ====================================================================

# #######################################
# DATABASE
# #######################################
CREATE OR REPLACE DATABASE datafederation '';

CONNECT DATABASE datafederation;

# #######################################
# FOLDERS
# #######################################
CREATE OR REPLACE FOLDER '/1 - Connectivity' ;

CREATE OR REPLACE FOLDER '/1 - connectivity/1 - data sources' ;

CREATE OR REPLACE FOLDER '/1 - connectivity/2 - base views' ;

CREATE OR REPLACE FOLDER '/1 - connectivity/2 - base views/new' ;

CREATE OR REPLACE FOLDER '/2 - Logical Model' ;

CREATE OR REPLACE FOLDER '/3 - Integration' ;

CREATE OR REPLACE FOLDER '/3 - integration/api1' ;

CREATE OR REPLACE FOLDER '/3 - integration/api1/archive' ;

CREATE OR REPLACE FOLDER '/3 - integration/api1/archive/api1-latest' ;

CREATE OR REPLACE FOLDER '/3 - integration/api1/archive/V2.0' ;

CREATE OR REPLACE FOLDER '/3 - integration/api1/archive/V2.1' ;

CREATE OR REPLACE FOLDER '/3 - integration/api2' ;

CREATE OR REPLACE FOLDER '/3 - integration/api2/archive' ;

CREATE OR REPLACE FOLDER '/3 - integration/api2/newdesign' ;

CREATE OR REPLACE FOLDER '/3 - integration/api2/v2.0' ;

CREATE OR REPLACE FOLDER '/3 - integration/api3' ;

CREATE OR REPLACE FOLDER '/3 - integration/api3/archive' ;

CREATE OR REPLACE FOLDER '/3 - integration/api3/postgres' ;

CREATE OR REPLACE FOLDER '/3 - integration/api3/V 1.0' ;

CREATE OR REPLACE FOLDER '/3 - integration/api4' ;

CREATE OR REPLACE FOLDER '/3 - integration/api4/V 1.0' ;

CREATE OR REPLACE FOLDER '/3 - integration/api4/V 2.0' ;

CREATE OR REPLACE FOLDER '/3 - integration/api5' ;

CREATE OR REPLACE FOLDER '/3 - integration/api6' ;

CREATE OR REPLACE FOLDER '/3 - integration/api6/v2.0' ;

CREATE OR REPLACE FOLDER '/4 - Business Views' ;

CREATE OR REPLACE FOLDER '/4 - business views/api1' ;

CREATE OR REPLACE FOLDER '/4 - business views/api2' ;

CREATE OR REPLACE FOLDER '/4 - business views/api3' ;

CREATE OR REPLACE FOLDER '/4 - business views/api4' ;

CREATE OR REPLACE FOLDER '/4 - business views/api5' ;

CREATE OR REPLACE FOLDER '/4 - business views/api6' ;

CREATE OR REPLACE FOLDER '/5 - Data services' ;

CREATE OR REPLACE FOLDER '/5 - data services/REST' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/api1' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/api2' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/api3' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/api4' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/api5' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/api6' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/api7' ;

CREATE OR REPLACE FOLDER '/5 - data services/rest/for_swagger' ;

CREATE OR REPLACE FOLDER '/5 - data services/SOAP' ;

CREATE OR REPLACE FOLDER '/6 - Associations' ;

CREATE OR REPLACE FOLDER '/henry' ;

CREATE OR REPLACE FOLDER '/henry/api4_vH' ;

CREATE OR REPLACE FOLDER '/tugce' ;

# #######################################
# LISTENERS JMS
# #######################################
# No listeners jms
# #######################################
# LISTENERS KAFKA
# #######################################
# No listeners kafka
# #######################################
# DATASOURCES
# #######################################
CREATE OR REPLACE DATASOURCE CUSTOM ds_dynamodb_almsit
    FOLDER = '/1 - connectivity/1 - data sources'
    CLASSNAME='com.denodo.connect.dynamodb.wrapper.DynamoDBQueryWrapper'
    JARS 'denodo-dynamodb-customwrapper'
    PARAMETERS (
      'Access Key ID' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_almsit.Access Key ID}',
      'Secret Access Key' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_almsit.Secret Access Key}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_almsit.Secret Access Key.encrypted},
      'Region' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_almsit.Region}'
    );

CREATE OR REPLACE DATASOURCE CUSTOM ds_dynamodb_dfdev
    FOLDER = '/1 - connectivity/1 - data sources'
    CLASSNAME='com.denodo.connect.dynamodb.wrapper.DynamoDBScanWrapper'
    JARS 'denodo-dynamodb-customwrapper'
    PARAMETERS (
      'Access Key ID' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev.Access Key ID}',
      'Secret Access Key' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev.Secret Access Key}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev.Secret Access Key.encrypted},
      'Region' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev.Region}'
    );

CREATE OR REPLACE DATASOURCE CUSTOM ds_dynamodb_dfdev_indexedquery
    FOLDER = '/1 - connectivity/1 - data sources'
    CLASSNAME='com.denodo.connect.dynamodb.wrapper.DynamoDBQueryWrapper'
    JARS 'denodo-dynamodb-customwrapper'
    PARAMETERS (
      'Access Key ID' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev_indexedquery.Access Key ID}',
      'Secret Access Key' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev_indexedquery.Secret Access Key}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev_indexedquery.Secret Access Key.encrypted},
      'Region' = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.custom.ds_dynamodb_dfdev_indexedquery.Region}'
    );

CREATE OR REPLACE DATASOURCE DF ds_csv_siteid_meterid
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE LOCAL 'LocalConnection' '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.df.ds_csv_siteid_meterid.ROUTE.LOCAL.PATH}' FILENAMEPATTERN = ''
    COLUMNDELIMITER = ','
    ENDOFLINEDELIMITER = '\n'
    HEADER = TRUE
    DESCRIPTION = 'ESS asset data from csv';

CREATE OR REPLACE DATASOURCE DF ds_csv_sitelist
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE LOCAL 'LocalConnection' '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.df.ds_csv_sitelist.ROUTE.LOCAL.PATH}' FILENAMEPATTERN = ''
    COLUMNDELIMITER = ','
    ENDOFLINEDELIMITER = '\n'
    HEADER = TRUE;

CREATE OR REPLACE DATASOURCE JDBC ds_product_attributes
    FOLDER = '/1 - connectivity/1 - data sources'
    DRIVERCLASSNAME = 'org.postgresql.Driver'
    DATABASEURI = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.jdbc.ds_product_attributes.DATABASEURI}'
    USERNAME = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.jdbc.ds_product_attributes.USERNAME}'
    USERPASSWORD = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.jdbc.ds_product_attributes.USERPASSWORD}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.jdbc.ds_product_attributes.USERPASSWORD.ENCRYPTED}
    CLASSPATH = 'postgresql-11'
    DATABASENAME = 'postgresql'
    DATABASEVERSION = '11'
    FETCHSIZE = 1000
    VALIDATIONQUERY = 'Select 1'
    INITIALSIZE = 4
    MAXIDLE = -1
    MINIDLE = 0
    MAXACTIVE = 20
    EXHAUSTEDACTION = 1
    TESTONBORROW = true
    TESTONRETURN = false
    TESTWHILEIDLE = false
    TIMEBETWEENEVICTION = -1
    NUMTESTPEREVICTION = 3
    MINEVICTABLETIME = 1800000
    POOLPREPAREDSTATEMENTS = false
    MAXOPENPREPAREDSTATEMENTS = -1
    DATA_LOAD_CONFIGURATION (
        BATCHINSERTSIZE = 200
    );

CREATE OR REPLACE DATASOURCE JSON alm_idms_token
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.alm_idms_token.ROUTE.HTTP.URL}'
    POSTBODY 'grant_type=refresh_token&client_id=c751d10a0bbd86d3d9ee834bb285be08e45be9dcd905a970267da8814c9fc67ed8c92100D7b0000004dBjEAI&client_secret=0315a5fe394cb936cdf241f16746d7ca67841d0bd587100D7b0000004dBjEAI&refresh_token=5Aep861Tst.ahKyP5qvlzvbBoccH7McEHoRkQYuukEx_Wx38jMA4RBJvqhUZKJoWrFmulRoyI.ubQmKjGIfCvI0'
    MIME 'application/json'
    HEADERS (
        'Cookie'='BrowserId=_Za8msqIEeyexEmV5U4d7g; CookieConsentPolicy=0:1; LSKey-c$$CookieConsentPolicy=0:1', 
        'Content-Type'='multipart/form-data'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON api2_reltio_sitedetails
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.api2_reltio_sitedetails.ROUTE.HTTP.URL}'
    HEADERS (
        'Cookie'='CookieConsentPolicy=0:1; LSKey-c$$CookieConsentPolicy=0:1', 
        'Authorization'='Bearer @apigee_token', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_alm_app_token
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_alm_app_token.ROUTE.HTTP.URL}'
    POSTBODY 'grant_type=client_credentials&client_id=35mnl5s7pl7767f6llo9pq94p9&client_secret=d7a8kua1ud87649dgo6pbnm5n4usois403b3a7s1oqe0i2ueg0v'
    MIME 'application/json'
    HEADERS (
        'Content-Type'='application/x-www-form-urlencoded'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_alm_idms_token
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_alm_idms_token.ROUTE.HTTP.URL}'
    POSTBODY 'grant_type=refresh_token&client_id=c751d10a0bbd86d3d9ee834bb285be08e45be9dcd905a970267da8814c9fc67ed8c92100D7b0000004dBjEAI&client_secret=0315a5fe394cb936cdf241f16746d7ca67841d0bd587100D7b0000004dBjEAI&refresh_token=5Aep861Tst.ahKyP5qvlzvbBoccH7McEHoRkQYuukEx_Wx38jMA4RBJvqhUZKJoWrFmulRoyI.ubQmKjGIfCvI0'
    MIME 'application/json'
    HEADERS (
        'Cookie'='BrowserId=_Za8msqIEeyexEmV5U4d7g; CookieConsentPolicy=0:1; LSKey-c$$CookieConsentPolicy=0:1', 
        'Content-Type'='multipart/form-data'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_almsit_api
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,12000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.URL}'
    HEADERS (
        'X-BFO-Authorization'='00D040000004eNs!AQoAQDblG5r7tBeonyemgrsGeJ3HNKIqHAFBBeWPvckNqNEfrXX95hg8dmIq3.Gc675a1iZI6qZjHz2Y6PaPaCCIi4VVsbDh', 
        'accept'='application/json'
    )
    AUTHENTICATION OAUTH20 ( 
      ACCESSTOKEN = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.ACCESSTOKEN}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.ACCESSTOKEN.ENCRYPTED}
      REQUESTSIGNINGMETHOD = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.REQUESTSIGNINGMETHOD}
      AUTHENTICATION_GRANT = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.AUTHENTICATION.GRANT}
      TOKENENDPOINTURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.TOKENENDPOINTURL}'
      CLIENTIDENTIFIER = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.CLIENTIDENTIFIER}'
      CLIENTSECRET = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.CLIENTSECRET}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.CLIENTSECRET.ENCRYPTED}
      ACCESSTOKENEXPIRESIN = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.ACCESSTOKENEXPIRESIN}
      AUTHORIZATIONSERVERURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.AUTHORIZATIONSERVERURL}'
      REDIRECTIONENDPOINTURL = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.REDIRECTIONENDPOINTURL}
      SETSTATEPARAMETER = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_api.ROUTE.HTTP.SETSTATEPARAMETER}
    )
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_almsit_hierarchy
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,12000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_hierarchy.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer @{{access_token}}', 
        'X-BFO-Authorization'='00D040000004eNs!AQoAQPy3ho2Q8B3OFLwZTWI9Xyv6jLuR90qhJ3.LDNcWx4rXnP0k64ro2dmAnoGSQinvbvJroZ4ai9tjw4s_s6OxowluoVuR', 
        'accept'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_almsit_info_assets_get_info_serialnumber
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,12000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_assets_get_info_serialnumber.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer @{{access_token}}', 
        'X-BFO-Authorization'='00D040000004eNs!AQoAQN5kfKdub61l4xjnOz8CGOPqavtog1EVFYXE23m_8hXmcXS46AIMZSomdLTkimzrgP.EebI.5.a409YlcxiHnAdULLmZ', 
        'accept'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_almsit_info_attribute
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,12000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer @{{access_token}}', 
        'X-BFO-Authorization'='00D040000004eNs!AQoAQBtOvXxzOkTlhRk82xQThV5fIcXSehcKIJEv8tSRFHffkdbYe1yWzia6Mc0zOsc0Uks4N6LjHyP9Vqhe9hL1L2U1mSkW', 
        'accept'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_almsit_info_attribute_copy
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,12000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.URL}'
    HEADERS (
        'X-BFO-Authorization'='00D040000004eNs!AQoAQLcDSoLMJmg6Oe4rRb3RweVtIDyNsbaP98j089beoDED.FYA3ZfmweqrNkuGPePWbjNsH_z6IGVFY8seXQA84FrVH1ld', 
        'accept'='application/json'
    )
    AUTHENTICATION OAUTH20 ( 
      ACCESSTOKEN = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.ACCESSTOKEN}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.ACCESSTOKEN.ENCRYPTED}
      REQUESTSIGNINGMETHOD = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.REQUESTSIGNINGMETHOD}
      AUTHENTICATION_GRANT = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.AUTHENTICATION.GRANT}
      TOKENENDPOINTURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.TOKENENDPOINTURL}'
      CLIENTIDENTIFIER = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.CLIENTIDENTIFIER}'
      CLIENTSECRET = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.CLIENTSECRET}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.CLIENTSECRET.ENCRYPTED}
      ACCESSTOKENEXPIRESIN = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.ACCESSTOKENEXPIRESIN}
      AUTHORIZATIONSERVERURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.AUTHORIZATIONSERVERURL}'
      REDIRECTIONENDPOINTURL = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.REDIRECTIONENDPOINTURL}
      SETSTATEPARAMETER = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_attribute_copy.ROUTE.HTTP.SETSTATEPARAMETER}
    )
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_almsit_info_product_data
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,12000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_almsit_info_product_data.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer @{{access_token}}', 
        'X-BFO-Authorization'='00D040000004eNs!AQoAQBtOvXxzOkTlhRk82xQThV5fIcXSehcKIJEv8tSRFHffkdbYe1yWzia6Mc0zOsc0Uks4N6LjHyP9Vqhe9hL1L2U1mSkW', 
        'accept'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_api5_reltio_mdm
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_api5_reltio_mdm.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer @apigee_token', 
        'Cookie'='CookieConsentPolicy=0', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_apigee_token
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_apigee_token.ROUTE.HTTP.URL}'
    POSTBODY 'grant_type=client_credentials&client_id=SiYetz7OggGbSx10M4j5a8GkCGSE1An8&client_secret=67eboFiQB6HtZ9LK'
    MIME 'application/x-www-form-urlencoded'
    HEADERS (
        'Content-Type'='application/x-www-form-urlencoded'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_emcp_alarms
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_alarms.ROUTE.HTTP.URL}'
    POSTBODY '\{{"variables":\{{"appContext":[\{{"type":"TENANT","id":87293,"urn":"urn:edm-se:em:core:pr:tenant"\}},\{{"type":"ID","id":87295,"urn":"urn:edm-se:em:core:pr:region"\}},\{{"type":"ID","id":87301,"urn":"urn:edm-se:em:core:pr:site"\}},\{{"type":"ID","id":@assetId,"urn":"urn:edm-se:em:core:pr:panelboard"\}}],"pageSize":5,"offset":0,"enableNotificationPreferences":false,"whereClause":\{{"startTime":\{{"gte":"@startTime","lte":"@endTime"\}}\}}\}},"query":"query GetAlarms($$appContext: [EMCP_TopoNodeContextInput!]!, $$whereClause: EMCP_AlarmOccurrenceFilterInput, $$enableNotificationPreferences: Boolean, $$pageSize: Int, $$offset: Int) \{{\\n  alarmOccurrences(\\n    appContext: $$appContext\\n    enableNotificationPreferences: $$enableNotificationPreferences\\n    where: $$whereClause\\n    order: \{{startTime: DESC\}}\\n    skip: $$offset\\n    take: $$pageSize\\n  ) \{{\\n    totalCount\\n    pageInfo \{{\\n      hasNextPage\\n      hasPreviousPage\\n      __typename\\n    \}}\\n    items \{{\\n      ...GeneralAlarmOccurrenceFields\\n      __typename\\n    \}}\\n    __typename\\n  \}}\\n\}}\\n\\nfragment GeneralAlarmOccurrenceFields on EMCP_AlarmOccurrence \{{\\n  id\\n  startTime\\n  endTime\\n  alarmState\\n  measures\\n  possibleCause\\n  possibleProblem\\n  possibleRecommendation\\n  possibleRisk\\n  alarmOccurrencePValues \{{\\n    ...AlarmOccurrencePValueFields\\n    __typename\\n  \}}\\n  alarmInstance \{{\\n    id\\n    alarmControl\\n    alarmFamily\\n    alarmModel\\n    alarmPriority\\n    alarmState\\n    alarmConceptId\\n    thingId\\n    tsMath\\n    alarmConcept \{{\\n      ...AlarmOccurrenceConceptFields\\n      __typename\\n    \}}\\n    thing \{{\\n      handle\\n      label\\n      __typename\\n    \}}\\n    __typename\\n  \}}\\n  acknowledgementAlarmStateTransition \{{\\n    alarmState\\n    comment\\n    idmsFederatedId\\n    transitionTime\\n    __typename\\n  \}}\\n  __typename\\n\}}\\n\\nfragment AlarmOccurrenceConceptFields on EMCP_AlarmConcept \{{\\n  urn\\n  name\\n  icon\\n  label\\n  description\\n  alarmEventConceptCategory \{{\\n    id\\n    description\\n    name\\n    packageId\\n    label\\n    __typename\\n  \}}\\n  __typename\\n\}}\\n\\nfragment AlarmOccurrencePValueFields on EMCP_AlarmOccurrencePValue \{{\\n  pival\\n  pfval\\n  psval\\n  pTsVal\\n  property \{{\\n    ...GeneralPropertyWithUnitFields\\n    __typename\\n  \}}\\n  __typename\\n\}}\\n\\nfragment GeneralPropertyWithUnitFields on EMCP_Property \{{\\n  name\\n  urn\\n  label\\n  description\\n  mandatory\\n  visible\\n  defIVal\\n  defFVal\\n  defSVal\\n  orderingType\\n  encodingType\\n  propertyType\\n  accessType\\n  facetType\\n  enumUrn\\n  unit \{{\\n    ...GeneralUnitFields\\n    __typename\\n  \}}\\n  __typename\\n\}}\\n\\nfragment GeneralUnitFields on EMCP_Unit \{{\\n  id\\n  name\\n  isSi\\n  symbol\\n  urn\\n  quantityName\\n  __typename\\n\}}"\}}'
    MIME 'application/json'
    HEADERS (
        'Authorization'='Bearer @{{access_token}}', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_emcp_apis
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.URL}'
    POSTBODY '\{{"query": "@{{QUERY}}", "variables": @{{VARIABLES}}\}}'
    MIME 'application/json'
    AUTHENTICATION OAUTH20 ( 
      ACCESSTOKEN = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.ACCESSTOKEN}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.ACCESSTOKEN.ENCRYPTED}
      REQUESTSIGNINGMETHOD = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.REQUESTSIGNINGMETHOD}
      AUTHENTICATION_GRANT = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.AUTHENTICATION.GRANT}
      TOKENENDPOINTURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.TOKENENDPOINTURL}'
      CLIENTIDENTIFIER = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.CLIENTIDENTIFIER}'
      CLIENTSECRET = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.CLIENTSECRET}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.CLIENTSECRET.ENCRYPTED}
      ACCESSTOKENEXPIRESIN = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.ACCESSTOKENEXPIRESIN}
      AUTHORIZATIONSERVERURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.AUTHORIZATIONSERVERURL}'
      REDIRECTIONENDPOINTURL = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.REDIRECTIONENDPOINTURL}
      SETSTATEPARAMETER = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_apis.ROUTE.HTTP.SETSTATEPARAMETER}
    )
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_emcp_asset
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_asset.ROUTE.HTTP.URL}'
    POSTBODY '@{{payload}}'
    MIME 'application/json'
    HEADERS (
        'Authorization'='Bearer @{{access_token}}', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_emcp_assetlist
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.URL}'
    POSTBODY '\{{"variables":\{{"appContext":[\{{"type":"TENANT","id":87293,"urn":"urn:edm-se:em:core:pr:tenant"\}},\{{"type":"ID","id":@{{localSiteId}},"urn":"urn:edm-se:em:core:pr:site"\}}],"mode":"PHYSICAL","includeAllParents":false,"includeProperties":["urn:edm-se:em:core:pr:is_asset","urn:edm-se:em:core:pr:gateway","urn:edm-se:em:core:pr:has_computed_values","urn:edm-se:em:core:pr:serial_number", "urn:edm-se:em:core:pr:brand", "urn:edm-se:em:core:pr:commercial_reference","urn:edm-se:em:core:pr:range", "urn:edm-se:em:core:pr:image_url", "urn:edm-se:em:core:pr:description"],"includeNodelinks":["FEED","INCOMER","RESIDUAL_FEED"]\}},"query":"query getHierarchyWithNodelinks($$appContext: [EMCP_TopoNodeContextInput], $$mode: EMCP_HierarchyMode!, $$whereClause: EMCP_HierarchyFilterInput, $$includeAllParents: Boolean!, $$includeProperties: [String!], $$includeNodelinks: [EMCP_LinkKindType!]) \{{\\n  hierarchy(\\n    mode: $$mode\\n    appContext: $$appContext\\n    includeAllParents: $$includeAllParents\\n    where: $$whereClause\\n  ) \{{\\n    parentId\\n    thing \{{\\n      id\\n      label\\n      handle\\n      concept \{{\\n        urn\\n        type: conceptKind\\n        __typename\\n   label\\n name\\n description\\n   \}}\\n      nodeLinkDsts(where: \{{kind: \{{in: $$includeNodelinks\}}\}}) \{{\\n        ...GeneralNodeLinkFields\\n        __typename\\n      \}}\\n      nodeLinkSrcs(where: \{{kind: \{{in: $$includeNodelinks\}}\}}) \{{\\n        ...GeneralNodeLinkFields\\n        __typename\\n      \}}\\n      pvalues(where: \{{property: \{{urn: \{{in: $$includeProperties\}}\}}\}}) \{{\\n        pival\\n        pfval\\n        psval\\n        property \{{\\n          urn\\n          __typename\\nname\\n        \}}\\n        __typename\\n      \}}\\n      __typename\\n    \}}\\n    __typename\\n  \}}\\n\}}\\n\\nfragment GeneralNodeLinkFields on EMCP_NodeLink \{{\\n  id\\n  kind\\n  srcId\\n  srcNode\\n  dstId\\n  dstNode\\n  percentage\\n  __typename\\n\}}"\}}'
    MIME 'application/json'
    HEADERS (
        'Content-Type'='application/json'
    )
    AUTHENTICATION OAUTH20 ( 
      ACCESSTOKEN = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.ACCESSTOKEN}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.ACCESSTOKEN.ENCRYPTED}
      REQUESTSIGNINGMETHOD = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.REQUESTSIGNINGMETHOD}
      AUTHENTICATION_GRANT = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.AUTHENTICATION.GRANT}
      TOKENENDPOINTURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.TOKENENDPOINTURL}'
      CLIENTIDENTIFIER = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.CLIENTIDENTIFIER}'
      CLIENTSECRET = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.CLIENTSECRET}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.CLIENTSECRET.ENCRYPTED}
      ACCESSTOKENEXPIRESIN = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.ACCESSTOKENEXPIRESIN}
      AUTHORIZATIONSERVERURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.AUTHORIZATIONSERVERURL}'
      REDIRECTIONENDPOINTURL = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.REDIRECTIONENDPOINTURL}
      SETSTATEPARAMETER = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_assetlist.ROUTE.HTTP.SETSTATEPARAMETER}
    )
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_emcp_sitehierarchy
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_sitehierarchy.ROUTE.HTTP.URL}'
    POSTBODY '\{{
    "variables": \{{
        "mode": "PHYSICAL",
        "appContext": [
            \{{
                "id": 87293,
                "type": "TENANT",
                "urn": "urn:edm-se:em:core:pr:tenant"
            \}},
            \{{
                "type":"ID",
                "id":@{{localsiteId}},
                "urn":"urn:edm-se:em:core:pr:site"
            \}}
        ],
        "includeAllParents": true
    \}},
    "query": "query SitesPhysicalView($$mode: EMCP_HierarchyMode!, $$appContext: [EMCP_TopoNodeContextInput], $$includeAllParents: Boolean!) \{{\\n  tenants: hierarchy(\\n    mode: $$mode\\n    appContext: $$appContext\\n    includeAllParents: $$includeAllParents\\n    where: \{{thing: \{{concept: \{{conceptKind: \{{in: [OTHER]\}}\}}\}}\}}\\n  ) \{{\\n    level\\n    parentId\\n    childSite: thing \{{\\n      siteId: id\\n      name\\n      label\\n      tenantId\\n      concept \{{\\n        urn\\n        type: conceptKind\\n        properties \{{\\n          urn\\n          __typename\\n        \}}\\n        __typename\\n      \}}\\n      __typename\\n    \}}\\n    __typename\\n  \}}\\n\}}\\n"
\}}'
    MIME 'application/json'
    HEADERS (
        'Authorization'='Bearer @{{emcp_token}}'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_emcp_timeseries
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_emcp_timeseries.ROUTE.HTTP.URL}'
    POSTBODY '\{{
    "variables": \{{
        "take": 250,
        "skip": 0,
        "appContext": [
            \{{
                "type": "TENANT",
                "id": 87293,
                "urn": "urn:edm-se:em:core:pr:tenant"
            \}},
            \{{
                "type": "ID",
                "id": 87295,
                "urn": "urn:edm-se:em:core:pr:region"
            \}},
            \{{
                "type": "ID",
                "id": 87297,
                "urn": "urn:edm-se:em:core:pr:site"
            \}},
            \{{
                "type": "ID",
                "id": @assetid,
                "urn": "urn:edm-se:em:core:pc:power_meter"
            \}}
        ],
        "businessQuantityNames": [
            "CURRENT",
            "CURRENT_A",
            "CURRENT_B",
            "CURRENT_C",
            "VOLTAGE",
            "VOLTAGE_AB",
            "VOLTAGE_BC",
            "VOLTAGE_CA",
            "VOLTAGE_AN",
            "VOLTAGE_BN",
            "VOLTAGE_CN",
            "ACTIVE_POWER",
            "ACTIVE_ENERGY"
        ],
        "startTime": "@starttime",
        "endTime": "@endtime",
        "timeZone": "Asia/Calcutta"
    \}},
    "query": "query rawTrendData($$appContext: [EMCP_TopoNodeContextInput!]!, $$businessQuantityNames: [String!]!, $$startTime: DateTime!, $$endTime: DateTime!, $$timeZone: String!, $$take: Int = 250, $$skip: Int = 0) \{{\\n  rawTrendData(\\n    skip: $$skip\\n    take: $$take\\n    appContext: $$appContext\\n    businessQuantityNames: $$businessQuantityNames\\n    startTime: $$startTime\\n    endTime: $$endTime\\n    timeZone: $$timeZone\\n  ) \{{\\n    totalCount\\n    items \{{\\n      businessQuantity \{{\\n        name\\n        __typename\\n      \}}\\n      measure \{{\\n        ...GeneralMeasureFields\\n        __typename\\n      \}}\\n      thingId\\n      thingLabel\\n      thingContext \{{\\n        ...GeneralToponodeContextFields\\n        __typename\\n      \}}\\n      timeZone\\n      timeSeriesValues \{{\\n        timestamp\\n        value\\n        __typename\\n      \}}\\n      __typename\\n    \}}\\n    __typename\\n  \}}\\n\}}\\n\\nfragment GeneralToponodeContextFields on EMCP_TopoNodeContext \{{\\n  id\\n  type\\n  label\\n  name\\n  urn\\n  value\\n  __typename\\n\}}\\n\\nfragment GeneralMeasureFields on EMCP_Measure \{{\\n  id\\n  label\\n  urn\\n  unit \{{\\n    ...GeneralUnitFields\\n    __typename\\n  \}}\\n  __typename\\n\}}\\n\\nfragment GeneralUnitFields on EMCP_Unit \{{\\n  id\\n  name\\n  isSi\\n  symbol\\n  urn\\n  quantityName\\n  __typename\\n\}}"
\}}'
    MIME 'application/json'
    HEADERS (
        'Authorization'='Bearer @{{access_token}}', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_ess_apis
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,12000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_apis.ROUTE.HTTP.URL}'
    HEADERS (
        'X-BFO-Authorization'='00D040000004eNs!AQoAQDblG5r7tBeonyemgrsGeJ3HNKIqHAFBBeWPvckNqNEfrXX95hg8dmIq3.Gc675a1iZI6qZjHz2Y6PaPaCCIi4VVsbDh', 
        'accept'='application/json'
    )
    AUTHENTICATION BASIC ( 
      USER '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_apis.ROUTE.HTTP.USER}'
      PASSWORD '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_apis.ROUTE.HTTP.PASSWORD}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_apis.ROUTE.HTTP.PASSWORD.ENCRYPTED} )
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_ess_site_list_api
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_site_list_api.ROUTE.HTTP.URL}'
    AUTHENTICATION BASIC ( 
      USER '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_site_list_api.ROUTE.HTTP.USER}'
      PASSWORD '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_site_list_api.ROUTE.HTTP.PASSWORD}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_ess_site_list_api.ROUTE.HTTP.PASSWORD.ENCRYPTED} )
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_reltio_site_metadata_golden_id
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_site_metadata_golden_id.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer ZfIvXYKJCNuQSxSTaigdP1OzdRLG', 
        'Cookie'='CookieConsentPolicy=0:1; LSKey-c$$CookieConsentPolicy=0:1', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_reltio_site_metadata_golden_id_token
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_site_metadata_golden_id_token.ROUTE.HTTP.URL}'
    HEADERS (
        'Cookie'='CookieConsentPolicy=0:1; LSKey-c$$CookieConsentPolicy=0:1', 
        'Authorization'='Basic U2lZZXR6N09nZ0diU3gxME00ajVhOEdrQ0dTRTFBbjg6NjdlYm9GaVFCNkh0WjlMSw==', 
        'Content-Type'='application/x-www-form-urlencoded'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON ds_reltio_sitedetails
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.URL}'
    HEADERS (
        'Cookie'='CookieConsentPolicy=0:1; LSKey-c$$CookieConsentPolicy=0:1', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OAUTH20 ( 
      ACCESSTOKEN = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.ACCESSTOKEN}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.ACCESSTOKEN.ENCRYPTED}
      REQUESTSIGNINGMETHOD = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.REQUESTSIGNINGMETHOD}
      AUTHENTICATION_GRANT = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.AUTHENTICATION.GRANT}
      TOKENENDPOINTURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.TOKENENDPOINTURL}'
      CLIENTIDENTIFIER = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.CLIENTIDENTIFIER}'
      CLIENTSECRET = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.CLIENTSECRET}' ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.CLIENTSECRET.ENCRYPTED}
      ACCESSTOKENEXPIRESIN = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.ACCESSTOKENEXPIRESIN}
      AUTHORIZATIONSERVERURL = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.AUTHORIZATIONSERVERURL}'
      REDIRECTIONENDPOINTURL = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.REDIRECTIONENDPOINTURL}
      SETSTATEPARAMETER = ${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltio_sitedetails.ROUTE.HTTP.SETSTATEPARAMETER}
    )
    PROXY OFF
    HTTP_ERROR_CODES_TO_IGNORE (400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 500, 501, 502, 503, 504, 505, 507);

CREATE OR REPLACE DATASOURCE JSON ds_reltion_crossref
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.ds_reltion_crossref.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer bfJofWsAOPGACpBGaFTpPYaF6ORr', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON emcp_sitelist
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.emcp_sitelist.ROUTE.HTTP.URL}'
    POSTBODY '\{{
	"query": "query getSites($$appContext: [EMCP_TopoNodeContextInput!]!) \{{hierarchy(appContext: $$appContext    mode: PHYSICAL where: \{{thing: \{{concept: \{{urn: \{{in: [\\"urn:edm-se:em:core:oc:site\\"]\}}\}}\}}\}}) \{{level thing \{{id      name      label      concept \{{urn icon __typename\}}\\r\\n      pvalues(where: \{{property: \{{urn: \{{in: [        \\"urn:edm-se:em:core:pr:alm_id\\"]\}}\}}\}}) \{{pival pfval psval property \{{urn          __typename        \}}              \}}          \}}      \}}\}}",
	"variables": \{{
		"appContext": [\{{
			"id": 87293,
			"type": "TENANT",
			"urn": "urn:edm-se:em:core:pr:tenant"
		\}}]
	\}}
\}}'
    MIME 'application/json'
    HEADERS (
        'Authorization'='Bearer @{{emcp_token}}'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON emcp_token
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.emcp_token.ROUTE.HTTP.URL}'
    POSTBODY 'grant_type=client_credentials&client_id=a22ea3b2-ecd5-4437-9a49-6f0e097f1b96&client_secret=nC91yf7B5KM2JUqscO_QEzmgKcJOoCW1oOvESMAvIr0XqYvxNc1l9mtbAruQUoRmbIdXKVyFCzWjX3Lr3qbigQ'
    MIME 'application/x-www-form-urlencoded'
    HEADERS (
        'Content-Type'='application/x-www-form-urlencoded'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON reltio_organization
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.json.reltio_organization.ROUTE.HTTP.URL}'
    HEADERS (
        'Authorization'='Bearer BYiBGhOvjKOeMCjq1hVZ0yFcJXNY', 
        'Content-Type'='application/json'
    )
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE JSON test_alm_ping
    FOLDER = '/3 - integration/api1/archive'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.3 - integration.folder.api1.folder.archive.datasources.json.test_alm_ping.ROUTE.HTTP.URL}'
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE WS ds_bsl_soap
    FOLDER = '/1 - connectivity/1 - data sources'
    WSDLURI = '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.ws.ds_bsl_soap.WSDLURI}'
    MAXCONNECTIONS 50
    CONNECTIONPOOLTIMEOUT 0
    AUTHENTICATION OFF
    PROXY OFF;

CREATE OR REPLACE DATASOURCE XML ds_soap_xml
    FOLDER = '/1 - connectivity/1 - data sources'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.xml.ds_soap_xml.ROUTE.HTTP.URL}'
    AUTHENTICATION OFF
    PROXY AUTOMATIC (
      PACURI '${databases.datafederation.folder.1 - connectivity.folder.1 - data sources.datasources.xml.ds_soap_xml.ROUTE.HTTP.PROXY.PACURI}' );

# #######################################
# DATABASE CONFIGURATION
# #######################################
ALTER DATABASE datafederation
  CHARSET DEFAULT;

ALTER DATABASE datafederation
  VCS ON (
    REMOTEDB = data
  );

# #######################################
# WRAPPERS
# #######################################
CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_almsit_did_3
    FOLDER = '/3 - integration/api3/archive'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-micro-services-digital-ids',
      'Fields' = 'almId:varchar,brand:varchar,commRef:varchar,deviceType:varchar,range:varchar,serialNumber:varchar,ref:varchar',
      'Index name' = '${databases.datafederation.folder.3 - integration.folder.api3.folder.archive.views.custom.bv_dynamodb_almsit_did_3.Index name}'
    )
    OUTPUTSCHEMA (
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        brand = 'brand' : 'java.lang.String' (OPT) (original_name='brand', sourcetypeid='12')  SORTABLE,
        commref = 'commRef' : 'java.lang.String' (OPT) (original_name='commRef', sourcetypeid='12')  SORTABLE,
        devicetype = 'deviceType' : 'java.lang.String' (OPT) (original_name='deviceType', sourcetypeid='12')  SORTABLE,
        range = 'range' : 'java.lang.String' (OPT) (original_name='range', sourcetypeid='12')  SORTABLE,
        serialnumber = 'serialNumber' : 'java.lang.String' (OPT) (original_name='serialNumber', sourcetypeid='12')  SORTABLE,
        ref = 'ref' : 'java.lang.String' (OPT) (original_name='ref', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_almsit_registration_3
    FOLDER = '/3 - integration/api3/archive'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-db-asset-registration-v3.0',
      'Fields' = 'assetRegistrationId:varchar,almAssetIdentifier:varchar,commRef:varchar,publisherCode:varchar,serialNumber:varchar,siteId:varchar,userFedId:varchar',
      'Index name' = '${databases.datafederation.folder.3 - integration.folder.api3.folder.archive.views.custom.bv_dynamodb_almsit_registration_3.Index name}'
    )
    OUTPUTSCHEMA (
        assetregistrationid = 'assetRegistrationId' : 'java.lang.String' (OPT) (original_name='assetRegistrationId', sourcetypeid='12')  SORTABLE,
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        commref = 'commRef' : 'java.lang.String' (OPT) (original_name='commRef', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        serialnumber = 'serialNumber' : 'java.lang.String' (OPT) (original_name='serialNumber', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        userfedid = 'userFedId' : 'java.lang.String' (OPT) (original_name='userFedId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_master_siteid
    FOLDER = '/3 - integration/api1/archive'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-siteId-mapping',
      'Fields' = 'id:varchar,almId:varchar,emcpId:varchar,essId:varchar,reltioGoldenId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String' (OPT) (original_name='reltioGoldenId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_master_siteid_3
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-siteId-mapping',
      'Fields' = 'id:varchar,almId:varchar,emcpId:varchar,essId:varchar,reltioGoldenId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String' (OPT) (original_name='reltioGoldenId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_master_siteid_v2
    FOLDER = '/3 - integration/api1/archive'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-siteId-mapping',
      'Fields' = 'id:varchar,almId:varchar,emcpId:varchar,essId:varchar,reltioGoldenId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String' (OPT) (original_name='reltioGoldenId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_master_siteid_v2_1
    FOLDER = '/3 - integration/api1/archive/v2.1'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-siteId-mapping',
      'Fields' = 'id:varchar,almId:varchar,emcpId:varchar,essId:varchar,reltioGoldenId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String' (OPT) (original_name='reltioGoldenId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_master_sublocationids
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-sublocationid-mapping',
      'Fields' = 'id:varchar, emcpId:varchar, almId:varchar, essId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_sites_1
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-alm-sit-db-registration-sites-hierarchy',
      'Fields' = 'createdBy:varchar,subLocationId:varchar,siteId:varchar,version:double,subLocationPath:varchar,publisherCode:varchar,reltioCertified:varchar,status:varchar,name:varchar,lang:varchar,reltioGoldenID:varchar,blockBFO:varchar,description:varchar,reltioEntityId:varchar,type:varchar'
    )
    OUTPUTSCHEMA (
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE,
        sublocationid = 'subLocationId' : 'java.lang.String' (OPT) (original_name='subLocationId', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        version = 'version' : 'java.lang.Double' (OPT) (original_name='version', sourcetypeid='8')  SORTABLE,
        sublocationpath = 'subLocationPath' : 'java.lang.String' (OPT) (original_name='subLocationPath', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        reltiocertified = 'reltioCertified' : 'java.lang.String' (OPT) (original_name='reltioCertified', sourcetypeid='12')  SORTABLE,
        status = 'status' : 'java.lang.String' (OPT) (original_name='status', sourcetypeid='12')  SORTABLE,
        name = 'name' : 'java.lang.String' (OPT) (original_name='name', sourcetypeid='12')  SORTABLE,
        lang = 'lang' : 'java.lang.String' (OPT) (original_name='lang', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenID' : 'java.lang.String' (OPT) (original_name='reltioGoldenID', sourcetypeid='12')  SORTABLE,
        blockbfo = 'blockBFO' : 'java.lang.String' (OPT) (original_name='blockBFO', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE,
        reltioentityid = 'reltioEntityId' : 'java.lang.String' (OPT) (original_name='reltioEntityId', sourcetypeid='12')  SORTABLE,
        type = 'type' : 'java.lang.String' (OPT) (original_name='type', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_sites_1_archive_orginal
    FOLDER = '/3 - integration/api1/archive'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-alm-sit-db-registration-sites-hierarchy',
      'Fields' = 'createdBy:varchar,subLocationId:varchar,siteId:varchar,version:double,subLocationPath:varchar,publisherCode:varchar,reltioCertified:varchar,status:varchar,name:varchar,lang:varchar,reltioGoldenID:varchar,blockBFO:varchar,description:varchar,reltioEntityId:varchar,type:varchar'
    )
    OUTPUTSCHEMA (
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE,
        sublocationid = 'subLocationId' : 'java.lang.String' (OPT) (original_name='subLocationId', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        version = 'version' : 'java.lang.Double' (OPT) (original_name='version', sourcetypeid='8')  SORTABLE,
        sublocationpath = 'subLocationPath' : 'java.lang.String' (OPT) (original_name='subLocationPath', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        reltiocertified = 'reltioCertified' : 'java.lang.String' (OPT) (original_name='reltioCertified', sourcetypeid='12')  SORTABLE,
        status = 'status' : 'java.lang.String' (OPT) (original_name='status', sourcetypeid='12')  SORTABLE,
        name = 'name' : 'java.lang.String' (OPT) (original_name='name', sourcetypeid='12')  SORTABLE,
        lang = 'lang' : 'java.lang.String' (OPT) (original_name='lang', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenID' : 'java.lang.String' (OPT) (original_name='reltioGoldenID', sourcetypeid='12')  SORTABLE,
        blockbfo = 'blockBFO' : 'java.lang.String' (OPT) (original_name='blockBFO', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE,
        reltioentityid = 'reltioEntityId' : 'java.lang.String' (OPT) (original_name='reltioEntityId', sourcetypeid='12')  SORTABLE,
        type = 'type' : 'java.lang.String' (OPT) (original_name='type', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM bv_dynamodb_dfdev_sites_1_copy
    FOLDER = '/3 - integration/api2/newdesign'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-alm-sit-db-registration-sites-hierarchy',
      'Fields' = 'createdBy:varchar,subLocationId:varchar,siteId:varchar,version:double,subLocationPath:varchar,publisherCode:varchar,reltioCertified:varchar,status:varchar,name:varchar,lang:varchar,reltioGoldenID:varchar,blockBFO:varchar,description:varchar,reltioEntityId:varchar,type:varchar'
    )
    OUTPUTSCHEMA (
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE,
        sublocationid = 'subLocationId' : 'java.lang.String' (OPT) (original_name='subLocationId', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        version = 'version' : 'java.lang.Double' (OPT) (original_name='version', sourcetypeid='8')  SORTABLE,
        sublocationpath = 'subLocationPath' : 'java.lang.String' (OPT) (original_name='subLocationPath', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        reltiocertified = 'reltioCertified' : 'java.lang.String' (OPT) (original_name='reltioCertified', sourcetypeid='12')  SORTABLE,
        status = 'status' : 'java.lang.String' (OPT) (original_name='status', sourcetypeid='12')  SORTABLE,
        name = 'name' : 'java.lang.String' (OPT) (original_name='name', sourcetypeid='12')  SORTABLE,
        lang = 'lang' : 'java.lang.String' (OPT) (original_name='lang', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenID' : 'java.lang.String' (OPT) (original_name='reltioGoldenID', sourcetypeid='12')  SORTABLE,
        blockbfo = 'blockBFO' : 'java.lang.String' (OPT) (original_name='blockBFO', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE,
        reltioentityid = 'reltioEntityId' : 'java.lang.String' (OPT) (original_name='reltioEntityId', sourcetypeid='12')  SORTABLE,
        type = 'type' : 'java.lang.String' (OPT) (original_name='type', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM ds_almsit_dynamodb_1
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-micro-services-digital-ids',
      'Fields' = 'almId:varchar,brand:varchar,commRef:varchar,deviceType:varchar,range:varchar,serialNumber:varchar'
    )
    OUTPUTSCHEMA (
        almassetidentifier = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        brand = 'brand' : 'java.lang.String' (OPT) (original_name='brand', sourcetypeid='12')  SORTABLE,
        commref = 'commRef' : 'java.lang.String' (OPT) (original_name='commRef', sourcetypeid='12')  SORTABLE,
        devicetype = 'deviceType' : 'java.lang.String' (OPT) (original_name='deviceType', sourcetypeid='12')  SORTABLE,
        range1 = 'range' : 'java.lang.String' (OPT) (original_name='range', sourcetypeid='12')  SORTABLE,
        serialnumber = 'serialNumber' : 'java.lang.String' (OPT) (original_name='serialNumber', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_almsit_dynamodb_8beb07a8-aca7-492e-8059-b7c62f5e8092_0"
    FOLDER = '/3 - integration/api3/archive'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-asset-info-attributes',
      'Fields' = 'almAssetIdentifier:varchar,assetInstallationType:varchar,assetName:varchar,commissioningDate:varchar,commRef:varchar,createdBy:varchar,description:varchar,equipmentType:varchar,isAlmAsset:boolean,isRootNode:boolean,lifecycleStatus:boolean,publisherCode:boolean,serialNumber:boolean'
    )
    OUTPUTSCHEMA (
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        assetinstallationtype = 'assetInstallationType' : 'java.lang.String' (OPT) (original_name='assetInstallationType', sourcetypeid='12')  SORTABLE,
        assetname = 'assetName' : 'java.lang.String' (OPT) (original_name='assetName', sourcetypeid='12')  SORTABLE,
        commissioningdate = 'commissioningDate' : 'java.lang.String' (OPT) (original_name='commissioningDate', sourcetypeid='12')  SORTABLE,
        commref = 'commRef' : 'java.lang.String' (OPT) (original_name='commRef', sourcetypeid='12')  SORTABLE,
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE,
        equipmenttype = 'equipmentType' : 'java.lang.String' (OPT) (original_name='equipmentType', sourcetypeid='12')  SORTABLE,
        isalmasset = 'isAlmAsset' : 'java.lang.Boolean' (OPT) (original_name='isAlmAsset', sourcetypeid='16')  SORTABLE,
        isrootnode = 'isRootNode' : 'java.lang.Boolean' (OPT) (original_name='isRootNode', sourcetypeid='16')  SORTABLE,
        lifecyclestatus = 'lifecycleStatus' : 'java.lang.Boolean' (OPT) (original_name='lifecycleStatus', sourcetypeid='16')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.Boolean' (OPT) (original_name='publisherCode', sourcetypeid='16')  SORTABLE,
        serialnumber = 'serialNumber' : 'java.lang.Boolean' (OPT) (original_name='serialNumber', sourcetypeid='16')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM ds_dfdev_0
    FOLDER = '/3 - integration/api3/archive'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-alm-sit-db-registration-sites-hierarchy',
      'Fields' = 'siteId:varchar,name:varchar,publisherCode:varchar,reltioGoldenID:varchar,createdBy:varchar'
    )
    OUTPUTSCHEMA (
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        name = 'name' : 'java.lang.String' (OPT) (original_name='name', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenID' : 'java.lang.String' (OPT) (original_name='reltioGoldenID', sourcetypeid='12')  SORTABLE,
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM ds_dynamodb_almsit
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-db-registration-sites-hierarchy',
      'Fields' = 'siteId:varchar,subLocationId:varchar,accountDetails:java_object,address:java_object,name:varchar,subLocationPath:varchar,type:varchar,description:varchar,contact:varchar'
    )
    OUTPUTSCHEMA (
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        sublocationid = 'subLocationId' : 'java.lang.String' (OPT) (original_name='subLocationId', sourcetypeid='12')  SORTABLE,
        accountdetails = 'accountDetails' : 'java.lang.Object' (OPT) (original_name='accountDetails', sourcetypeid='2000')  SORTABLE,
        address = 'address' : 'java.lang.Object' (OPT) (original_name='address', sourcetypeid='2000')  SORTABLE,
        name = 'name' : 'java.lang.String' (OPT) (original_name='name', sourcetypeid='12')  SORTABLE,
        sublocationpath = 'subLocationPath' : 'java.lang.String' (OPT) (original_name='subLocationPath', sourcetypeid='12')  SORTABLE,
        type = 'type' : 'java.lang.String' (OPT) (original_name='type', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE,
        contact = 'contact' : 'java.lang.String' (OPT) (original_name='contact', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_almsit_087b4ef0-660f-4000-b6cb-c6763fbfe189"
    FOLDER = '/3 - integration/api4/v 2.0'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-asset-hierarchy',
      'Fields' = 'uniqueId:varchar,nodePath:varchar,almAssetIdentifier:varchar,parentNodeId:varchar'
    )
    OUTPUTSCHEMA (
        uniqueid = 'uniqueId' : 'java.lang.String' (OPT) (original_name='uniqueId', sourcetypeid='12')  SORTABLE,
        nodepath = 'nodePath' : 'java.lang.String' (OPT) (original_name='nodePath', sourcetypeid='12')  SORTABLE,
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        parentassetid = 'parentNodeId' : 'java.lang.String' (OPT) (original_name='parentNodeId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_almsit_2dcde72d-4873-4174-a20a-fd226c85ea8d"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-asset-info-product-attributes',
      'Fields' = 'commRef:varchar,deviceRange:varchar,brand:varchar,shortDescription:varchar,pictureDocumentReference:varchar'
    )
    OUTPUTSCHEMA (
        commref = 'commRef' : 'java.lang.String' (OPT) (original_name='commRef', sourcetypeid='12')  SORTABLE,
        devicerange = 'deviceRange' : 'java.lang.String' (OPT) (original_name='deviceRange', sourcetypeid='12')  SORTABLE,
        brand = 'brand' : 'java.lang.String' (OPT) (original_name='brand', sourcetypeid='12')  SORTABLE,
        shortdescription = 'shortDescription' : 'java.lang.String' (OPT) (original_name='shortDescription', sourcetypeid='12')  SORTABLE,
        picturedocumentreference = 'pictureDocumentReference' : 'java.lang.String' (OPT) (original_name='pictureDocumentReference', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_almsit_5083fdf5-5301-4047-ad2c-51aa3738d18c"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-db-asset-registration-v3.0',
      'Fields' = 'almAssetIdentifier:varchar,siteId:varchar,publisherCode:varchar,userAccountDetails:java_object,userRoles:java_object,assetLog:java_object,installationDate:varchar',
      'Index name' = '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.custom.ds_dynamodb_almsit_5083fdf5-5301-4047-ad2c-51aa3738d18c.Index name}'
    )
    OUTPUTSCHEMA (
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        useraccountdetails = 'userAccountDetails' : 'java.lang.Object' (OPT) (original_name='userAccountDetails', sourcetypeid='2000')  SORTABLE,
        userroles = 'userRoles' : 'java.lang.Object' (OPT) (original_name='userRoles', sourcetypeid='2000')  SORTABLE,
        assetlog = 'assetLog' : 'java.lang.Object' (OPT) (original_name='assetLog', sourcetypeid='2000')  SORTABLE,
        installationdate = 'installationDate' : 'java.lang.String' (OPT) (original_name='installationDate', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_almsit_72f9fb26-9e22-4747-a897-d248b9277e7e"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-asset-info-attributes',
      'Fields' = 'almAssetIdentifier:varchar,assetInstallationType:varchar,assetName:varchar,commissioningDate:varchar,createdBy:varchar,description:varchar,equipmentType:varchar'
    )
    OUTPUTSCHEMA (
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        assetinstallationtype = 'assetInstallationType' : 'java.lang.String' (OPT) (original_name='assetInstallationType', sourcetypeid='12')  SORTABLE,
        name = 'assetName' : 'java.lang.String' (OPT) (original_name='assetName', sourcetypeid='12')  SORTABLE,
        commissioningdate = 'commissioningDate' : 'java.lang.String' (OPT) (original_name='commissioningDate', sourcetypeid='12')  SORTABLE,
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE,
        equipmenttype = 'equipmentType' : 'java.lang.String' (OPT) (original_name='equipmentType', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_almsit_79805548-2c7d-4d79-a005-27c7746f1447"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-db-asset-registration-v3.0',
      'Fields' = 'almAssetIdentifier:varchar,siteId:varchar,publisherCode:varchar,userAccountDetails:java_object,userRoles:java_object,assetLog:java_object,installationDate:varchar'
    )
    OUTPUTSCHEMA (
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        useraccountdetails = 'userAccountDetails' : 'java.lang.Object' (OPT) (original_name='userAccountDetails', sourcetypeid='2000')  SORTABLE,
        userroles = 'userRoles' : 'java.lang.Object' (OPT) (original_name='userRoles', sourcetypeid='2000')  SORTABLE,
        assetlog = 'assetLog' : 'java.lang.Object' (OPT) (original_name='assetLog', sourcetypeid='2000')  SORTABLE,
        installationdate = 'installationDate' : 'java.lang.String' (OPT) (original_name='installationDate', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_almsit_9c42d013-8adb-496b-9146-1eaf6c84401f"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-asset-info-attributes',
      'Fields' = 'almAssetIdentifier:varchar,publisherCode:varchar,equipmentType:varchar,commissioningDate:varchar,assetInstallationType:varchar,createdBy:varchar,
lifeCycleStatus:varchar,commRef:varchar,serialNumber:varchar,brand:varchar,deviceType:varchar,assetName:varchar,description:varchar'
    )
    OUTPUTSCHEMA (
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        equipmenttype = 'equipmentType' : 'java.lang.String' (OPT) (original_name='equipmentType', sourcetypeid='12')  SORTABLE,
        commissioningdate = 'commissioningDate' : 'java.lang.String' (OPT) (original_name='commissioningDate', sourcetypeid='12')  SORTABLE,
        assetinstallationtype = 'assetInstallationType' : 'java.lang.String' (OPT) (original_name='assetInstallationType', sourcetypeid='12')  SORTABLE,
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE,
        lifecyclestatus = 'lifeCycleStatus' : 'java.lang.String' (OPT) (original_name='lifeCycleStatus', sourcetypeid='12')  SORTABLE,
        commref = 'commRef' : 'java.lang.String' (OPT) (original_name='commRef', sourcetypeid='12')  SORTABLE,
        serialnumber = 'serialNumber' : 'java.lang.String' (OPT) (original_name='serialNumber', sourcetypeid='12')  SORTABLE,
        brand = 'brand' : 'java.lang.String' (OPT) (original_name='brand', sourcetypeid='12')  SORTABLE,
        devicetype = 'deviceType' : 'java.lang.String' (OPT) (original_name='deviceType', sourcetypeid='12')  SORTABLE,
        assetname = 'assetName' : 'java.lang.String' (OPT) (original_name='assetName', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_almsit_9cbd8103-2514-4cd4-8b82-fb9f47ef37b3"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_almsit
    PARAMETERS (
      'Table' = 'use-alm-sit-dynamodb-asset-hierarchy',
      'Fields' = 'nodePath:varchar,almAssetIdentifier:varchar,parentNodeId:varchar'
    )
    OUTPUTSCHEMA (
        nodepath = 'nodePath' : 'java.lang.String' (OPT) (original_name='nodePath', sourcetypeid='12')  SORTABLE,
        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String' (OPT) (original_name='almAssetIdentifier', sourcetypeid='12')  SORTABLE,
        parentassetid = 'parentNodeId' : 'java.lang.String' (OPT) (original_name='parentNodeId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM ds_dynamodb_dfdev
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-user-customer-mapping',
      'Fields' = 'userId:varchar,customerId:varchar'
    )
    OUTPUTSCHEMA (
        userid = 'userId' : 'java.lang.String' (OPT) (original_name='userId', sourcetypeid='12')  SORTABLE,
        customerid = 'customerId' : 'java.lang.String' (OPT) (original_name='customerId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_dfdev_4cf48f2d-6dbc-4892-b4ad-07b2862be9cc"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-customer-sites-mapping',
      'Fields' = 'customerId:varchar,siteId:varchar'
    )
    OUTPUTSCHEMA (
        customerid = 'customerId' : 'java.lang.String' (OPT) (original_name='customerId', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM "ds_dynamodb_dfdev_c5cdb321-0248-4e24-afd7-a6e263f9905b"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-customer-mapping',
      'Fields' = 'id:varchar,almId:varchar,emcpId:varchar,essId:varchar,reltioGoldenId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String' (OPT) (original_name='reltioGoldenId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM ds_dynamodb_dfdev_indexedquery
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev_indexedquery
    PARAMETERS (
      'Table' = 'use-alm-sit-db-registration-sites-hierarchy',
      'Fields' = 'createdBy:varchar,subLocationId:varchar,siteId:varchar,version:double,subLocationPath:varchar,publisherCode:varchar,reltioCertified:varchar,status:varchar,name:varchar,lang:varchar,reltioGoldenID:varchar,blockBFO:varchar,description:varchar,reltioEntityId:varchar,type:varchar',
      'Index name' = '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.custom.ds_dynamodb_dfdev_indexedquery.Index name}'
    )
    OUTPUTSCHEMA (
        createdby = 'createdBy' : 'java.lang.String' (OPT) (original_name='createdBy', sourcetypeid='12')  SORTABLE,
        sublocationid = 'subLocationId' : 'java.lang.String' (OPT) (original_name='subLocationId', sourcetypeid='12')  SORTABLE,
        siteid = 'siteId' : 'java.lang.String' (OPT) (original_name='siteId', sourcetypeid='12')  SORTABLE,
        version = 'version' : 'java.lang.Double' (OPT) (original_name='version', sourcetypeid='8')  SORTABLE,
        sublocationpath = 'subLocationPath' : 'java.lang.String' (OPT) (original_name='subLocationPath', sourcetypeid='12')  SORTABLE,
        publishercode = 'publisherCode' : 'java.lang.String' (OPT) (original_name='publisherCode', sourcetypeid='12')  SORTABLE,
        reltiocertified = 'reltioCertified' : 'java.lang.String' (OPT) (original_name='reltioCertified', sourcetypeid='12')  SORTABLE,
        status = 'status' : 'java.lang.String' (OPT) (original_name='status', sourcetypeid='12')  SORTABLE,
        name = 'name' : 'java.lang.String' (OPT) (original_name='name', sourcetypeid='12')  SORTABLE,
        lang = 'lang' : 'java.lang.String' (OPT) (original_name='lang', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenID' : 'java.lang.String' (OPT) (original_name='reltioGoldenID', sourcetypeid='12')  SORTABLE,
        blockbfo = 'blockBFO' : 'java.lang.String' (OPT) (original_name='blockBFO', sourcetypeid='12')  SORTABLE,
        description = 'description' : 'java.lang.String' (OPT) (original_name='description', sourcetypeid='12')  SORTABLE,
        reltioentityid = 'reltioEntityId' : 'java.lang.String' (OPT) (original_name='reltioEntityId', sourcetypeid='12')  SORTABLE,
        type = 'type' : 'java.lang.String' (OPT) (original_name='type', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM ds_dynamodb_dfe_dev_assetid
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-assetid-mapping',
      'Fields' = 'id:varchar,
emcpId:varchar,
almId:varchar,
essId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER CUSTOM iv_master_alm_emcp_ess_site_id
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_dynamodb_dfdev
    PARAMETERS (
      'Table' = 'use-dfe-dev-db-siteId-mapping',
      'Fields' = 'id:varchar,almId:varchar,emcpId:varchar,essId:varchar,reltioGoldenId:varchar'
    )
    OUTPUTSCHEMA (
        id = 'id' : 'java.lang.String' (OPT) (original_name='id', sourcetypeid='12')  SORTABLE,
        almid = 'almId' : 'java.lang.String' (OPT) (original_name='almId', sourcetypeid='12')  SORTABLE,
        emcpid = 'emcpId' : 'java.lang.String' (OPT) (original_name='emcpId', sourcetypeid='12')  SORTABLE,
        essid = 'essId' : 'java.lang.String' (OPT) (original_name='essId', sourcetypeid='12')  SORTABLE,
        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String' (OPT) (original_name='reltioGoldenId', sourcetypeid='12')  SORTABLE
    );

CREATE OR REPLACE WRAPPER DF bv_csv_ess_siteid_meterid
    DATASOURCENAME=ds_csv_siteid_meterid
    OUTPUTSCHEMA (
        client = 'Client',
        clientid_0 = 'Client ID',
        clienttype_0 = 'Client Type',
        division = 'Division',
        site = 'Site',
        siteid = 'Site ID',
        siteaddress = 'Site Address',
        account = 'Account',
        accountid = 'Account ID',
        accountstatus = 'Account Status',
        accountnotexpected = 'Account Not Expected',
        account_not_expected_dt = 'Account_Not_Expected_Dt',
        commodity = 'Commodity',
        commodityid = 'Commodity ID',
        meter = 'Meter',
        meterid = 'Meter ID',
        meteraddress = 'Meter Address',
        metercity = 'Meter City',
        meterstate = 'Meter State',
        metercountry = 'Meter Country',
        meterzip = 'Meter Zip',
        reltioid = 'ReltioID'
    );

CREATE OR REPLACE WRAPPER DF bv_csv_ess_siteid_meterid_1
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_csv_siteid_meterid
    OUTPUTSCHEMA (
        client = 'Client',
        clientid_0 = 'Client ID',
        clienttype_0 = 'Client Type',
        division = 'Division',
        site = 'Site',
        siteid = 'Site ID',
        siteaddress = 'Site Address',
        account = 'Account',
        accountid = 'Account ID',
        accountstatus = 'Account Status',
        accountnotexpected = 'Account Not Expected',
        account_not_expected_dt = 'Account_Not_Expected_Dt',
        commodity = 'Commodity',
        commodityid = 'Commodity ID',
        meter = 'Meter',
        meterid = 'Meter ID',
        meteraddress = 'Meter Address',
        metercity = 'Meter City',
        meterstate = 'Meter State',
        metercountry = 'Meter Country',
        meterzip = 'Meter Zip',
        reltioid = 'ReltioID'
    );

CREATE OR REPLACE WRAPPER DF "sitelist_csv_6af6aa75-9804-4e37-84fe-eb5095235187"
    FOLDER = '/3 - integration/api1/archive'
    DATASOURCENAME=ds_csv_sitelist
    OUTPUTSCHEMA (
        client = 'Client',
        clientid_0 = 'Client ID',
        clienttype_0 = 'Client Type',
        division = 'Division',
        site = 'Site',
        siteid_0 = 'Site ID',
        siteaddress_0 = 'Site Address',
        reltioid = 'ReltioID',
        userid = 'UserId'
    );

CREATE OR REPLACE WRAPPER JDBC bv_product_attributes
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_product_attributes
    SCHEMANAME='${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.jdbc.bv_product_attributes.SCHEMANAME}' ESCAPE
    RELATIONNAME='product-attributes' ESCAPE
    OUTPUTSCHEMA (
        commref = 'commRef' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE NOT NULL SORTABLE,
        creatorlastname_0 = 'creatorLastname' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        locale = 'locale' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  SORTABLE,
        lastmodifierfirstname = 'lastModifierFirstName' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        brand = 'brand' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  SORTABLE,
        creationdate = 'creationDate' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        createdby = 'createdBy' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        creatorfirstname = 'creatorFirstName' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        lastmodifierlastname = 'lastModifierLastName' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        lastmodifiedby = 'lastModifiedBy' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        lastmodifieddate = 'lastModifiedDate' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        commrefstatus = 'commRefStatus' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        picturedocumentreference = 'pictureDocumentReference' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        commercializationarea = 'commercializationArea' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        longdescription = 'longDescription' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        shortdescription = 'shortDescription' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        rangeid = 'rangeId' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        producttype = 'productType' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        deviceshortname = 'deviceShortName' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        devicerange = 'deviceRange' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        productname = 'productName' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        rowhash = 'rowHash' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        creatorlastname = 'creatorLastName' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        connectable = 'connectable' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  SORTABLE,
        devicetype = 'deviceType' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE,
        expiretime = 'expireTime' :'java.lang.String' (OPT) (sourcetypedecimals='0', sourcetyperadix='10', sourcetypesize='2147483647', sourcetypeid='12', sourcetypename='varchar')  ESCAPE SORTABLE
    )
    CONSTRAINT 'commRef_pk' PRIMARY KEY ( 'commRef' )
    INDEX 'commRef_pk' OTHER UNIQUE PRIMARY ( 'commRef' );

CREATE OR REPLACE WRAPPER JSON alm_app_token
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_alm_app_token
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String',
        expires_in = 'expires_in' : 'java.lang.Integer',
        token_type = 'token_type' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON "api2_reltio_sitedetails_2a60a7ea-f3a4-48b8-a493-433fccfd843b"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=api2_reltio_sitedetails
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        apigee_token = 'apigee_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='roPP62Rey3fFzY5eErBMQWtpyPcH') EXTERN,
        sitegoldenid = 'SITEGOLDENID' : 'java.lang.String' (OBL) (DEFAULTVALUE='100000000214366') EXTERN,
        results = 'results' : ARRAY OF (
            results = 'results' : REGISTER OF (
                publisherid = 'publisherId' : 'java.lang.String',
                publishercode = 'publisherCode' : 'java.lang.String',
                goldenid = 'goldenId' : 'java.lang.String',
                accountowner = 'accountOwner' : 'java.lang.String',
                accounttype = 'accountType' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                name = 'name' : 'java.lang.String',
                customerclassificationlevel1 = 'customerClassificationLevel1' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                businessunitcode = 'businessUnitCode' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                marketsegment = 'marketSegment' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                accountlifecycle = 'accountLifeCycle' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                deletionflag = 'deletionFlag' : 'java.lang.String',
                blockbfo = 'blockBFO' : 'java.lang.String',
                reltiocertified = 'reltioCertified' : 'java.lang.String',
                address = 'address' : REGISTER OF (
                    addresstype = 'addressType' : 'java.lang.String',
                    addressline1 = 'addressLine1' : 'java.lang.String',
                    city = 'city' : 'java.lang.String',
                    country = 'country' : REGISTER OF (
                        code = 'code' : 'java.lang.String',
                        value = 'value' : 'java.lang.String'
                    ),
                    postalcode = 'postalCode' : 'java.lang.String'
                ),
                dunsnumber = 'dunsNumber' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "api2_reltio_sitedetails_9754390c-f61f-4190-b238-7fddb909a323"
    FOLDER = '/3 - integration/api2/newdesign'
    DATASOURCENAME=api2_reltio_sitedetails
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.3 - integration.folder.api2.folder.newdesign.views.json.api2_reltio_sitedetails_9754390c-f61f-4190-b238-7fddb909a323.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        apigee_token = 'apigee_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='yxEFi8SA6OxG8m9Brk7QCVGSenew') EXTERN,
        sitegoldenid = 'SITEGOLDENID' : 'java.lang.String' (OBL) (DEFAULTVALUE='0039256106') EXTERN,
        results = 'results' : ARRAY OF (
            results = 'results' : REGISTER OF (
                publisherid = 'publisherId' : 'java.lang.String',
                publishercode = 'publisherCode' : 'java.lang.String',
                goldenid = 'goldenId' : 'java.lang.String',
                accountowner = 'accountOwner' : 'java.lang.String',
                accounttype = 'accountType' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                name = 'name' : 'java.lang.String',
                customerclassificationlevel1 = 'customerClassificationLevel1' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                customerclassificationlevel2 = 'customerClassificationLevel2' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                businessunitcode = 'businessUnitCode' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                marketsegment = 'marketSegment' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                marketsubsegment = 'marketSubSegment' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                accountlifecycle = 'accountLifeCycle' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                deletionflag = 'deletionFlag' : 'java.lang.String',
                phone = 'phone' : ARRAY OF (
                    phone = 'phone' : REGISTER OF (
                        phonetype = 'phoneType' : 'java.lang.String',
                        phonenumber = 'phoneNumber' : 'java.lang.String'
                    )
                ),
                blockbfo = 'blockBFO' : 'java.lang.String',
                reltiocertified = 'reltioCertified' : 'java.lang.String',
                address = 'address' : REGISTER OF (
                    addresstype = 'addressType' : 'java.lang.String',
                    addressline1 = 'addressLine1' : 'java.lang.String',
                    city = 'city' : 'java.lang.String',
                    stateprovince = 'stateProvince' : REGISTER OF (
                        code = 'code' : 'java.lang.String',
                        value = 'value' : 'java.lang.String'
                    ),
                    country = 'country' : REGISTER OF (
                        code = 'code' : 'java.lang.String',
                        value = 'value' : 'java.lang.String'
                    ),
                    postalcode = 'postalCode' : 'java.lang.String'
                ),
                website = 'website' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON apigee_token
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_apigee_token
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        refresh_token_expires_in = 'refresh_token_expires_in' : 'java.lang.String',
        api_product_list = 'api_product_list' : 'java.lang.String',
        api_product_list_json = 'api_product_list_json' : ARRAY OF (
            api_product_list_json = 'api_product_list_json' : REGISTER OF (
                field_0 = 'field_0' : 'java.lang.String'
            )
        ),
        organization_name = 'organization_name' : 'java.lang.String',
        developeremail_0 = 'developer.email' : 'java.lang.String',
        token_type = 'token_type' : 'java.lang.String',
        issued_at = 'issued_at' : 'java.lang.String',
        client_id = 'client_id' : 'java.lang.String',
        access_token = 'access_token' : 'java.lang.String',
        application_name = 'application_name' : 'java.lang.String',
        scope = 'scope' : 'java.lang.String',
        expires_in = 'expires_in' : 'java.lang.String',
        refresh_count = 'refresh_count' : 'java.lang.String',
        status = 'status' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON bv_emcp_assetlist
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_emcp_assetlist
    TUPLEROOT '/data'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjEyNjA5NzMsImp0aSI6ImY5MDA4ZTEyLTdkYWYtNDg0NC05YWViLTI4MDkxNzYxMzRiOSIsImV4cCI6MTY2MTI2NDU3MywiaXNzIjoiaHR0cHM6Ly9lY29zdHJ1eHVyZS1lbmVyZ3ktb3BlcmF0aW9uLXFhLmF6dXJlZmQubmV0Iiwic3ViamVjdElkIjoxMzIxLCJzdWJqZWN0Q29uY2VwdCI6InVybjplZG0tc2U6ZW06Y29yZTpvYzpzZXJ2aWNlIiwic2NvcGUiOlt7ImlkIjo4NzI5MywidXJuIjoidXJuOmVkbS1zZTplbTpjb3JlOnByOnRlbmFudCIsInJvbGVJZCI6NCwiZXhwbGljaXRBY2Nlc3MiOnRydWV9XSwibW9kdWxlcyI6W3siaWQiOjEsIm5hbWUiOiJlZG1hIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjoyLCJuYW1lIjoiZWNjIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjoyLCJuYW1lIjoiZWNjIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjo2LCJuYW1lIjoic2VydmljZSBlbnRyYW5jZSBoZWFsdGgiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9XSwic291cmNlIjoidXNlcnYyIn0.2NnUKcz629qc0I3NNjYuj9h1JNYe08mrWRnptkqQDjWlqpsBFdJj9CyOhakawPnMmpTbe-gIWNidT0_PbyHy8kdNu1wK6FSJMHA3OpQ7yqX3zKBdNYDf79HA65CDsAxHW2QtUqLqtXE6SECebBhAlgndSJptJXXjcCtwnjz3c8qO-MofIr7mZH100e9SRQe3YVrlD5vG8wvjpkgZxyFcdZD22j_YVsknqIirU4-ywZA8AIHFO_b-JFBhQWWvS1F62bdcM_G62cHBq2uXQihTuwPOyN5qvHJGiEPt5XktsvPkQOhXYaCKQQc7CYOddx7qJ6iOKzPszysNsLuE9QmTIEfXYX09PGffKja5vMi-KOmUqBW0f00Jmyi6sm0WU4vQxS6asHzowOIZv0nIg2W43Zb6HNWO06VwOSvi3wOcB_cpJxYxXVCEp0MTjCn8jIWyBSKmZjkZBaHwHrgjHHmNmW7GaTHBBnoNHHnRuXu3hrRGM6YfQ2d443jTRUzyFJK4Y5CT6J06t5RHZcKVgZwQk80CKLjltiNDpU3Ze7ThGxw80tUzAsvJXc3Amjbynaq-Oz_s5F7F33vtl6gvQQI81GyvsVeqhDcmRopANzuvzv3LNku_j0OFGEBxXXF7SSey35iIpVQef47zrnOn-Qqhpd8sV0kuFuvj8TVpryuBLTI') EXTERN,
        localsiteid = 'localSiteId' : 'java.lang.String' (OBL) (DEFAULTVALUE='87297') EXTERN,
        hierarchy = 'hierarchy' : ARRAY OF (
            hierarchy = 'hierarchy' : REGISTER OF (
                parentid = 'parentId' : 'java.lang.Integer',
                thing = 'thing' : REGISTER OF (
                    id = 'id' : 'java.lang.Integer',
                    label = 'label' : 'java.lang.String',
                    handle = 'handle' : 'java.lang.String',
                    concept = 'concept' : REGISTER OF (
                        urn = 'urn' : 'java.lang.String',
                        type = 'type' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String',
                        label = 'label' : 'java.lang.String',
                        name = 'name' : 'java.lang.String',
                        description = 'description' : 'java.lang.String'
                    ),
                    nodelinkdsts = 'nodeLinkDsts' : ARRAY OF (
                        nodelinkdsts = 'nodeLinkDsts' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            kind = 'kind' : 'java.lang.String',
                            srcid = 'srcId' : 'java.lang.Integer',
                            srcnode = 'srcNode' : 'java.lang.String',
                            dstid = 'dstId' : 'java.lang.Integer',
                            dstnode = 'dstNode' : 'java.lang.String',
                            percentage = 'percentage' : 'java.lang.Integer',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    nodelinksrcs = 'nodeLinkSrcs' : ARRAY OF (
                        nodelinksrcs = 'nodeLinkSrcs' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            kind = 'kind' : 'java.lang.String',
                            srcid = 'srcId' : 'java.lang.Integer',
                            srcnode = 'srcNode' : 'java.lang.String',
                            dstid = 'dstId' : 'java.lang.Integer',
                            dstnode = 'dstNode' : 'java.lang.String',
                            percentage = 'percentage' : 'java.lang.Integer',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    pvalues = 'pvalues' : ARRAY OF (
                        pvalues = 'pvalues' : REGISTER OF (
                            pfval = 'pfval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                urn = 'urn' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String',
                                name = 'name' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String',
                            psval = 'psval' : 'java.lang.String',
                            pival = 'pival' : 'java.lang.Integer'
                        )
                    ),
                    __typename = '__typename' : 'java.lang.String'
                ),
                __typename = '__typename' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON bv_emcp_sitelist_api1
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=emcp_sitelist
    TUPLEROOT '/data'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        emcp_token = 'emcp_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTUxMzg1NjgsImp0aSI6IjMwMjg5ODk5LWIzNTMtNDFmZi05MWVmLTFmODM5YjkwZjdlOSIsImV4cCI6MTY1NTE0MjE2OCwiaXNzIjoiaHR0cHM6Ly9lY29zdHJ1eHVyZS1lbmVyZ3ktb3BlcmF0aW9uLXFhLmF6dXJlZmQubmV0Iiwic2NvcGUiOiIqIiwic3ViamVjdElkIjozNDAsIm1vZHVsZXMiOiIqIiwic3ViamVjdENvbmNlcHQiOiJ1cm46ZWRtLXNlOmVtOmNvcmU6b2M6c2VydmljZSIsInNvdXJjZSI6InVzZXJ2MSJ9.LyE1q_NvBoDXamgvxzbyHS4aWqrThmoC6exXIr_JYYCZRkv8ZYRcZzc_w33F-iPlkLkOpSWGAWrpl1kBoun0VsoGlTpPj4IoT-dn-8KwIMmmEOdB3JSoy_CUHVE7sGx7crPv9nLBDJABvTTOKI0B9pENNF9sIkqkw7SLtqvn6Wioe4kidGiUBNfewRu7hhhgnyMJcXDTQKVqWY1zMOpXZfN4X0MafwevohgxFSqe2ZOh8xHfANCIfUpe3dd1wCN_SfsEt39jrRP94fQpzV09HT5SmlHgBC3oDrpJhpOLT0QHn8Z3Sf-QGZXLJmTYhtFf38n09LITK5jf4l47nwHqXiR8aiMawj6zt__Zc3-cU_hfVKOyds5jzqIxxjn79JMNTUVeI_FXhsCONZEFnzgoHEZgWy2hkk_v-3kWV-td07TQHl7TBVat9WjrKMwTiHbyK52sH8mMhUL1Itn4WC4zFwc08Q7DV-qG8t-I_n8hVUoAXOIr16fu9ggPGvYbaVT7VxDeHF17H0Zi6rQ5AuPfxT9HDVdup9QFJOnq96f3A-bURNNkv5xK3nZlhi4v7VJQm7Y8clcdyTeFzlN6A9f6agxrr4EqS97guTz9CGQQZjpWcFkM-FH7sxhzFs90_l3nIo2zqDtvNXc3Uds6JRF_4HT9mceBvHQRnTC10C1Mo-E') EXTERN,
        hierarchy = 'hierarchy' : ARRAY OF (
            hierarchy = 'hierarchy' : REGISTER OF (
                level = 'level' : 'java.lang.Integer',
                thing = 'thing' : REGISTER OF (
                    id = 'id' : 'java.lang.Integer',
                    name = 'name' : 'java.lang.String',
                    label = 'label' : 'java.lang.String',
                    concept = 'concept' : REGISTER OF (
                        urn = 'urn' : 'java.lang.String',
                        icon = 'icon' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    pvalues = 'pvalues' : ARRAY OF (
                        pvalues = 'pvalues' : REGISTER OF (
                            pival = 'pival' : 'java.lang.String',
                            pfval = 'pfval' : 'java.lang.String',
                            psval = 'psval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                urn = 'urn' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String'
                            )
                        )
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON bv_reltio_mdm_details
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_api5_reltio_mdm
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        apigee_token = 'apigee_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='GTKrPlUFUE3VyBZkPDMo64tGqsZW') EXTERN,
        entityname = 'ENTITYNAME' : 'java.lang.String' (OBL) (DEFAULTVALUE='MIDDLE EAST OIL REFINERY (MIDOR)') EXTERN,
        countrycode = 'COUNTRYCODE' : 'java.lang.String' (OBL) (DEFAULTVALUE='EG') EXTERN,
        jsonarray = 'JSONArray' : ARRAY OF (
            jsonarray = 'JSONArray' : REGISTER OF (
                total = 'total' : 'java.lang.Integer',
                max = 'max' : 'java.lang.Integer',
                offset_0 = 'offset' : 'java.lang.Integer',
                results = 'results' : ARRAY OF (
                    results = 'results' : REGISTER OF (
                        goldenid = 'goldenId' : 'java.lang.String',
                        entityid = 'entityId' : 'java.lang.String',
                        createdby = 'createdBy' : 'java.lang.String',
                        createdtime = 'createdTime' : 'java.lang.String',
                        updatedby = 'updatedBy' : 'java.lang.String',
                        updatedtime = 'updatedTime' : 'java.lang.String',
                        name = 'name' : 'java.lang.String',
                        addresses = 'addresses' : ARRAY OF (
                            addresses = 'addresses' : REGISTER OF (
                                addresstype = 'addressType' : REGISTER OF (
                                    value = 'value' : 'java.lang.String'
                                ),
                                addressline1 = 'addressLine1' : 'java.lang.String',
                                postalcode = 'postalCode' : 'java.lang.String',
                                city = 'city' : 'java.lang.String',
                                country = 'country' : REGISTER OF (
                                    code = 'code' : 'java.lang.String',
                                    value = 'value' : 'java.lang.String'
                                ),
                                county = 'county' : 'java.lang.String',
                                street = 'street' : 'java.lang.String',
                                pobox = 'poBox' : 'java.lang.String',
                                stateprovince = 'stateProvince' : 'java.lang.String',
                                premisenumber = 'premiseNumber' : 'java.lang.String'
                            )
                        ),
                        classificationlevel1 = 'classificationLevel1' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        leadingbusinessunit = 'leadingBusinessUnit' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        marketsegment = 'marketSegment' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        accountlifecycle = 'accountLifeCycle' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        accountowner = 'accountOwner' : 'java.lang.String',
                        accounttype = 'accountType' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        localorganizationname = 'localOrganizationName' : 'java.lang.String',
                        shortorganizationname = 'shortOrganizationName' : 'java.lang.String'
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_almsit_api
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_almsit_api
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_almsit_api.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        path = 'PATH' : 'java.lang.String' (OBL) (DEFAULTVALUE='info/v1/assets/33614/product-data?data=ALL') EXTERN,
        instanceid = 'instanceId' : 'java.lang.String',
        data = 'data' : REGISTER OF (
            commref = 'commRef' : 'java.lang.String',
            productattributes = 'productAttributes' : REGISTER OF (
                brand = 'brand' : 'java.lang.String',
                commrefstatus = 'commRefStatus' : 'java.lang.String',
                devicerange = 'deviceRange' : 'java.lang.String',
                deviceshortname = 'deviceShortName' : 'java.lang.String',
                longdescription = 'longDescription' : 'java.lang.String',
                producttype = 'productType' : 'java.lang.String',
                shortdescription = 'shortDescription' : 'java.lang.String'
            ),
            productimage = 'productImage' : REGISTER OF (
                imagedownloadurl = 'imageDownloadURL' : 'java.lang.String'
            ),
            productdocuments = 'productDocuments' : ARRAY OF (
                productdocuments = 'productDocuments' : REGISTER OF (
                    doctitle = 'docTitle' : 'java.lang.String',
                    docdescription = 'docDescription' : 'java.lang.String',
                    docdownloadurl = 'docDownloadURL' : 'java.lang.String',
                    docsize = 'docSize' : 'java.lang.String',
                    doctype = 'docType' : 'java.lang.String',
                    docname = 'docName' : 'java.lang.String',
                    docreference = 'docReference' : 'java.lang.String',
                    doclocales = 'docLocales' : ARRAY OF (
                        doclocales = 'docLocales' : REGISTER OF (
                            field_0 = 'field_0' : 'java.lang.String'
                        )
                    ),
                    mobiledownloadurl = 'mobileDownloadURL' : 'java.lang.String',
                    docrevision = 'docRevision' : 'java.lang.String',
                    docversion = 'docVersion' : 'java.lang.String'
                )
            ),
            productcharacteristics = 'productCharacteristics' : REGISTER OF (
                categories = 'categories' : ARRAY OF (
                    categories = 'categories' : REGISTER OF (
                        name = 'name' : 'java.lang.String',
                        characteristics = 'characteristics' : ARRAY OF (
                            characteristics = 'characteristics' : REGISTER OF (
                                name = 'name' : 'java.lang.String',
                                value = 'value' : REGISTER OF (
                                    value = 'value' : 'java.lang.String',
                                    externallabel = 'externalLabel' : 'java.lang.String',
                                    externalurl = 'externalUrl' : 'java.lang.String',
                                    textbefore = 'textBefore' : 'java.lang.String'
                                )
                            )
                        )
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_almsit_api_3e06ebc7-4396-4655-8f73-0de42f761033"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_almsit_api
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_almsit_api_3e06ebc7-4396-4655-8f73-0de42f761033.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        path = 'PATH' : 'java.lang.String' (OBL) (DEFAULTVALUE='info/v2/assets?almAssetIdentifier=e0143d3c-b09c-50d7-8b38-9369f2d6528a&data=ALL') EXTERN,
        instanceid = 'instanceId' : 'java.lang.String',
        data = 'data' : REGISTER OF (
            isalmasset = 'isAlmAsset' : 'java.lang.String',
            publishercode = 'publisherCode' : 'java.lang.String',
            almassetidentifier = 'almAssetIdentifier' : 'java.lang.String',
            equipmenttype = 'equipmentType' : 'java.lang.String',
            lastmodifierfirstname = 'lastModifierFirstName' : 'java.lang.String',
            assetinstallationtype = 'assetInstallationType' : 'java.lang.String',
            creationdate = 'creationDate' : 'java.lang.String',
            createdby = 'createdBy' : 'java.lang.String',
            lifecyclestatus = 'lifecycleStatus' : 'java.lang.String',
            lastmodifiedtime = 'lastModifiedTime' : 'java.lang.String',
            assetname = 'assetName' : 'java.lang.String',
            lastmodifierlastname = 'lastModifierLastName' : 'java.lang.String',
            lastmodifiedby = 'lastModifiedBy' : 'java.lang.String',
            description = 'description' : 'java.lang.String',
            lastmodifieddate = 'lastModifiedDate' : 'java.lang.String',
            connecteddetails = 'connectedDetails' : REGISTER OF (
                connectable = 'connectable' : 'java.lang.String'
            ),
            iscertificationavailable = 'isCertificationAvailable' : 'java.lang.String',
            isproductionimageavailable = 'isProductionImageAvailable' : 'java.lang.String',
            manufacturedby = 'manufacturedBy' : REGISTER OF (
                vendordetails = 'vendorDetails' : REGISTER OF (
                    bfoaccountid = 'bfoAccountId' : 'java.lang.String',
                    companyname = 'companyName' : 'java.lang.String',
                    contact = 'contact' : 'java.lang.String',
                    companyaddress = 'companyAddress' : 'java.lang.String'
                )
            ),
            devicerange = 'deviceRange' : 'java.lang.String',
            identification = 'identification' : REGISTER OF (
                commref = 'commRef' : 'java.lang.String',
                serialnumber = 'serialNumber' : 'java.lang.String',
                brand = 'brand' : 'java.lang.String',
                devicetype = 'deviceType' : 'java.lang.String',
                iscommrefvalidated = 'isCommRefValidated' : 'java.lang.String',
                commrefvalidationsource = 'commRefValidationSource' : 'java.lang.String',
                almassetidentifier = 'almAssetIdentifier' : 'java.lang.String'
            ),
            productdetails = 'productDetails' : REGISTER OF (
                longdescription = 'longDescription' : 'java.lang.String',
                shortdescription = 'shortDescription' : 'java.lang.String',
                commrefstatus = 'commRefStatus' : 'java.lang.String',
                devicetype = 'deviceType' : 'java.lang.String',
                imageurl = 'imageUrl' : 'java.lang.String'
            ),
            hierarchy = 'hierarchy' : REGISTER OF (
                parent = 'parent' : REGISTER OF (
                    commref = 'commRef' : 'java.lang.String',
                    serialnumber = 'serialNumber' : 'java.lang.String',
                    almassetidentifier = 'almAssetIdentifier' : 'java.lang.String'
                ),
                children = 'children' : ARRAY OF (
                    children = 'children' : REGISTER OF (
                        field_0 = 'field_0' : 'java.lang.String'
                    )
                ),
                siblings = 'siblings' : ARRAY OF (
                    siblings = 'siblings' : REGISTER OF (
                        commref = 'commRef' : 'java.lang.String',
                        serialnumber = 'serialNumber' : 'java.lang.String',
                        almassetidentifier = 'almAssetIdentifier' : 'java.lang.String'
                    )
                )
            ),
            registration = 'registration' : REGISTER OF (
                almassetidentifier = 'almAssetIdentifier' : 'java.lang.String',
                assetname = 'assetName' : 'java.lang.String',
                commref = 'commRef' : 'java.lang.String',
                createdby = 'createdBy' : 'java.lang.String',
                creationtime = 'creationTime' : 'java.lang.String',
                creatorfirstname = 'creatorFirstName' : 'java.lang.String',
                creatorlastname = 'creatorLastName' : 'java.lang.String',
                isseuser = 'isSeUser' : 'java.lang.String',
                lastmodifiedby = 'lastModifiedBy' : 'java.lang.String',
                lastmodifiedtime = 'lastModifiedTime' : 'java.lang.String',
                lastmodifierlastname = 'lastModifierLastName' : 'java.lang.String',
                lastmodifierfirstname = 'lastModifierFirstName' : 'java.lang.String',
                locationtype = 'locationType' : 'java.lang.String',
                publishercode = 'publisherCode' : 'java.lang.String',
                serialnumber = 'serialNumber' : 'java.lang.String',
                sitedetails = 'siteDetails' : REGISTER OF (
                    city = 'city' : 'java.lang.String',
                    countrycode = 'countryCode' : 'java.lang.String',
                    countrylabel = 'countryLabel' : 'java.lang.String',
                    gpslatitude = 'gpsLatitude' : 'java.lang.Double',
                    gpslongitude = 'gpsLongitude' : 'java.lang.Double',
                    siteaccountpublisher = 'siteAccountPublisher' : 'java.lang.String',
                    siteid = 'siteId' : 'java.lang.String',
                    sitename = 'siteName' : 'java.lang.String',
                    statecode = 'stateCode' : 'java.lang.String',
                    statelabel = 'stateLabel' : 'java.lang.String',
                    street = 'street' : 'java.lang.String',
                    zipcode = 'zipCode' : 'java.lang.String'
                ),
                registerforself = 'registerForSelf' : 'java.lang.String',
                siteid = 'siteId' : 'java.lang.String',
                userroles = 'userRoles' : ARRAY OF (
                    userroles = 'userRoles' : REGISTER OF (
                        accountpublisher = 'accountPublisher' : 'java.lang.String',
                        rolestatus = 'roleStatus' : 'java.lang.String',
                        userfedid = 'userFedId' : 'java.lang.String',
                        userrole = 'userRole' : 'java.lang.String'
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_almsit_api_eca6c7b7-9f49-4b98-91f4-cac27c809af0"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_almsit_api
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_almsit_api_eca6c7b7-9f49-4b98-91f4-cac27c809af0.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        path = 'PATH' : 'java.lang.String' (OBL) (DEFAULTVALUE='info/v1/assets/33614/product-data?data=ATTRIBUTES') EXTERN,
        instanceid = 'instanceId' : 'java.lang.String',
        data = 'data' : REGISTER OF (
            commref = 'commRef' : 'java.lang.String',
            productattributes = 'productAttributes' : REGISTER OF (
                brand = 'brand' : 'java.lang.String',
                commrefstatus = 'commRefStatus' : 'java.lang.String',
                devicerange = 'deviceRange' : 'java.lang.String',
                deviceshortname = 'deviceShortName' : 'java.lang.String',
                longdescription = 'longDescription' : 'java.lang.String',
                producttype = 'productType' : 'java.lang.String',
                shortdescription = 'shortDescription' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_almsit_info_attribute_374dc2d0-ecfb-4592-aa0f-62231bafc31d"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_almsit_info_attribute
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJraWQiOiJnSmNzdlhaNUx0aTBWVDE3S0ZMakpVWVJTUzFsRkF2WUNvQ1g4ejh1VHM4PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NXRqdmxqbWRpNXVzMzByY2lmY3JhZTR0dSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiaHR0cHM6XC9cL2FsbS5zZS5jb21cL2lkZW50aWZpZXJcL3ByZXByb2RcL1wvZ2V0IGh0dHBzOlwvXC9hbG0uc2UuY29tXC9pZGVudGlmaWVyXC9wcmVwcm9kXC9cL3B1dCIsImF1dGhfdGltZSI6MTY1NzE5MDQyNSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfRll1WGhMdW5YIiwiZXhwIjoxNjU3MTk0MDI1LCJpYXQiOjE2NTcxOTA0MjUsInZlcnNpb24iOjIsImp0aSI6ImVkZWI2ZTNjLWQ5NzctNDU1ZS1hODBmLTE4YTEwMTliMTMyOCIsImNsaWVudF9pZCI6Ijc1dGp2bGptZGk1dXMzMHJjaWZjcmFlNHR1In0.zEfskDb_ktJIuSfp9wVy9jo4QALUumRxosbYARuuezAHRdkGDhXi-5e0Izx_9T1SvDh1_80npBzgeVr_oyyCIf7u2gmkLrct9-0P_8vZurEkopEmzBJ24u55Y03VQm9AM21qitf1AJ_r2xAYn0mNPHCAwPsjztGhnuW6SzTQj8Zq1ZuhDyUnpuYVynjcdpIgaPWy9MNrDf0m6aUaTmcYrJofjDN00qqwRy4M5K-UMsdvBPSl8fEDPG87sv8ex6aDWVkhGEFJ92W3QmgUDGi9gZ2Gkmv_k_YDj9McSr2ZS9RZSU12Nz3UoETbcPE6c0-40PM4_nTNLmrFcWK1BurMEA') EXTERN,
        almassetidentifier = 'ALMASSETIDENTIFIER' : 'java.lang.String' (OBL) (DEFAULTVALUE='47603###1615394026') EXTERN,
        instanceid = 'instanceId' : 'java.lang.String',
        data = 'data' : REGISTER OF (
            isalmasset = 'isAlmAsset' : 'java.lang.String',
            publishercode = 'publisherCode' : 'java.lang.String',
            almassetidentifier = 'almAssetIdentifier' : 'java.lang.String',
            equipmenttype = 'equipmentType' : 'java.lang.String',
            commissioningdate = 'commissioningDate' : 'java.lang.String',
            lastmodifierfirstname = 'lastModifierFirstName' : 'java.lang.String',
            assetinstallationtype = 'assetInstallationType' : 'java.lang.String',
            creationdate = 'creationDate' : 'java.lang.String',
            createdby = 'createdBy' : 'java.lang.String',
            lifecyclestatus = 'lifecycleStatus' : 'java.lang.String',
            creatorlastname = 'creatorLastName' : 'java.lang.String',
            lastmodifiedtime = 'lastModifiedTime' : 'java.lang.String',
            assetname = 'assetName' : 'java.lang.String',
            creatorfirstname = 'creatorFirstName' : 'java.lang.String',
            lastmodifierlastname = 'lastModifierLastName' : 'java.lang.String',
            lastmodifiedby = 'lastModifiedBy' : 'java.lang.String',
            lastmodifieddate = 'lastModifiedDate' : 'java.lang.String',
            description = 'description' : 'java.lang.String',
            connecteddetails = 'connectedDetails' : REGISTER OF (
                connectable = 'connectable' : 'java.lang.String'
            ),
            iscertificationavailable = 'isCertificationAvailable' : 'java.lang.String',
            isproductionimageavailable = 'isProductionImageAvailable' : 'java.lang.String',
            manufacturedby = 'manufacturedBy' : REGISTER OF (
                vendordetails = 'vendorDetails' : REGISTER OF (
                    bfoaccountid = 'bfoAccountId' : 'java.lang.String',
                    companyname = 'companyName' : 'java.lang.String',
                    contact = 'contact' : 'java.lang.String',
                    companyaddress = 'companyAddress' : 'java.lang.String'
                )
            ),
            devicerange = 'deviceRange' : 'java.lang.String',
            identification = 'identification' : REGISTER OF (
                commref = 'commRef' : 'java.lang.String',
                serialnumber = 'serialNumber' : 'java.lang.String',
                brand = 'brand' : 'java.lang.String',
                devicetype = 'deviceType' : 'java.lang.String',
                iscommrefvalidated = 'isCommRefValidated' : 'java.lang.String',
                commrefvalidationsource = 'commRefValidationSource' : 'java.lang.String',
                almassetidentifier = 'almAssetIdentifier' : 'java.lang.String'
            ),
            productdetails = 'productDetails' : REGISTER OF (
                longdescription = 'longDescription' : 'java.lang.String',
                shortdescription = 'shortDescription' : 'java.lang.String',
                commrefstatus = 'commRefStatus' : 'java.lang.String',
                devicetype = 'deviceType' : 'java.lang.String',
                imageurl = 'imageUrl' : 'java.lang.String'
            ),
            hierarchy = 'hierarchy' : REGISTER OF (
                parent = 'parent' : REGISTER OF (
                    commref = 'commRef' : 'java.lang.String',
                    serialnumber = 'serialNumber' : 'java.lang.String'
                ),
                children = 'children' : ARRAY OF (
                    children = 'children' : REGISTER OF (
                        field_0 = 'field_0' : 'java.lang.String'
                    )
                ),
                siblings = 'siblings' : ARRAY OF (
                    siblings = 'siblings' : REGISTER OF (
                        commref = 'commRef' : 'java.lang.String',
                        serialnumber = 'serialNumber' : 'java.lang.String'
                    )
                )
            ),
            registration = 'registration' : REGISTER OF (
                almassetidentifier = 'almAssetIdentifier' : 'java.lang.String',
                commref = 'commRef' : 'java.lang.String',
                createdby = 'createdBy' : 'java.lang.String',
                creationtime = 'creationTime' : 'java.lang.String',
                creatorfirstname = 'creatorFirstName' : 'java.lang.String',
                creatorlastname = 'creatorLastName' : 'java.lang.String',
                installationdate = 'installationDate' : 'java.lang.String',
                isseuser = 'isSeUser' : 'java.lang.String',
                lastmodifiedby = 'lastModifiedBy' : 'java.lang.String',
                lastmodifiedtime = 'lastModifiedTime' : 'java.lang.String',
                lastmodifierlastname = 'lastModifierLastName' : 'java.lang.String',
                lastmodifierfirstname = 'lastModifierFirstName' : 'java.lang.String',
                locationtype = 'locationType' : 'java.lang.String',
                longdescription = 'longDescription' : 'java.lang.String',
                publishercode = 'publisherCode' : 'java.lang.String',
                serialnumber = 'serialNumber' : 'java.lang.String',
                shortdescription = 'shortDescription' : 'java.lang.String',
                sitedetails = 'siteDetails' : REGISTER OF (
                    city = 'city' : 'java.lang.String',
                    countrycode = 'countryCode' : 'java.lang.String',
                    countrylabel = 'countryLabel' : 'java.lang.String',
                    gpslatitude = 'gpsLatitude' : 'java.lang.Double',
                    gpslongitude = 'gpsLongitude' : 'java.lang.Double',
                    siteaccountpublisher = 'siteAccountPublisher' : 'java.lang.String',
                    siteid = 'siteId' : 'java.lang.String',
                    sitename = 'siteName' : 'java.lang.String',
                    statecode = 'stateCode' : 'java.lang.String',
                    statelabel = 'stateLabel' : 'java.lang.String',
                    street = 'street' : 'java.lang.String',
                    zipcode = 'zipCode' : 'java.lang.String'
                ),
                registerforself = 'registerForSelf' : 'java.lang.String',
                siteid = 'siteId' : 'java.lang.String',
                userroles = 'userRoles' : ARRAY OF (
                    userroles = 'userRoles' : REGISTER OF (
                        accountpublisher = 'accountPublisher' : 'java.lang.String',
                        rolestatus = 'roleStatus' : 'java.lang.String',
                        userfedid = 'userFedId' : 'java.lang.String',
                        userrole = 'userRole' : 'java.lang.String'
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_almsit_info_product_data
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_almsit_info_product_data
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_almsit_info_product_data.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJraWQiOiJnSmNzdlhaNUx0aTBWVDE3S0ZMakpVWVJTUzFsRkF2WUNvQ1g4ejh1VHM4PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NXRqdmxqbWRpNXVzMzByY2lmY3JhZTR0dSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiaHR0cHM6XC9cL2FsbS5zZS5jb21cL2lkZW50aWZpZXJcL3ByZXByb2RcL1wvZ2V0IGh0dHBzOlwvXC9hbG0uc2UuY29tXC9pZGVudGlmaWVyXC9wcmVwcm9kXC9cL3B1dCIsImF1dGhfdGltZSI6MTY2MTQzOTYzMywiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfRll1WGhMdW5YIiwiZXhwIjoxNjYxNDQzMjMzLCJpYXQiOjE2NjE0Mzk2MzMsInZlcnNpb24iOjIsImp0aSI6ImY1ZmRjZDFlLTdlMDktNDNlNi04YjIxLTMwYTE4MjExNGVhZiIsImNsaWVudF9pZCI6Ijc1dGp2bGptZGk1dXMzMHJjaWZjcmFlNHR1In0.UAIgm7A1kVBTP5R14r5BaaLGR-Mj_ih9DQwJUq2_hvXI3LZfwPPWeUdnDn9HHudzoXSQBPM9_CPSMxzjQ6wxv8XVcP9dZZn7aiA3jKwXuctJhPmdDShPp6p48N_bVSc2MG4r4oB1EbZDSu5sjg6rWWW6tKOiPeLbwbA50R1QQEiS_IU2Aaa6LQQz70XRbVYngAytIVRYQsquv3FLD7RL60t99u3c0MKQxAbHJE9JtomfgJPQhoc4ZYtZXOH8yfYh1yA23qTYEpxNk4V2byQdJmktEp3h4HEeH5iVG5anFLzfezl9L2AjgLPG7kNT0jZ-LuTeOocJiWRTnuMA5IVYMQ') EXTERN,
        data = 'DATA' : 'java.lang.String' (OBL) (DEFAULTVALUE='ATTRIBUTES') EXTERN,
        commref = 'COMMREF' : 'java.lang.String' (OBL) (DEFAULTVALUE='33614') EXTERN,
        instanceid = 'instanceId' : 'java.lang.String',
        data_0 = 'data' : REGISTER OF (
            commref = 'commRef' : 'java.lang.String',
            productattributes = 'productAttributes' : REGISTER OF (
                brand = 'brand' : 'java.lang.String',
                commrefstatus = 'commRefStatus' : 'java.lang.String',
                devicerange = 'deviceRange' : 'java.lang.String',
                deviceshortname = 'deviceShortName' : 'java.lang.String',
                longdescription = 'longDescription' : 'java.lang.String',
                producttype = 'productType' : 'java.lang.String',
                shortdescription = 'shortDescription' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_almsit_info_product_data_8d957eca-2f88-4376-8236-4818901282c6"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_almsit_info_product_data
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_almsit_info_product_data_8d957eca-2f88-4376-8236-4818901282c6.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJraWQiOiJnSmNzdlhaNUx0aTBWVDE3S0ZMakpVWVJTUzFsRkF2WUNvQ1g4ejh1VHM4PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI3NXRqdmxqbWRpNXVzMzByY2lmY3JhZTR0dSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiaHR0cHM6XC9cL2FsbS5zZS5jb21cL2lkZW50aWZpZXJcL3ByZXByb2RcL1wvZ2V0IGh0dHBzOlwvXC9hbG0uc2UuY29tXC9pZGVudGlmaWVyXC9wcmVwcm9kXC9cL3B1dCIsImF1dGhfdGltZSI6MTY2MTQ0MTM1MywiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfRll1WGhMdW5YIiwiZXhwIjoxNjYxNDQ0OTUzLCJpYXQiOjE2NjE0NDEzNTMsInZlcnNpb24iOjIsImp0aSI6IjYwNDk4NjA0LTM4MjQtNDA3Yy04ZjIxLWU1M2QxNGMxMmNjYyIsImNsaWVudF9pZCI6Ijc1dGp2bGptZGk1dXMzMHJjaWZjcmFlNHR1In0.sPLhVU0A13VrUx7WGQDPhUOXaIExxeoaPObxQVAjVsq4ALpl_Ym4XkcVELal22LMm1WBjxhXFwlOgYwOdkjIBqfPVQu8WIC83rSUpT6AEL67Mmqx5x977lbCzMphJYKrIL8HMN-KjgtV-fTW3GyVWoeNrqcx80sbyOKffcXZtdcs622RalvK3SIXDf1xH3zKYzptDwdk49Rd3be53g5odhre4UzQ7A8bAYqTS1czH13xBnvVOL9C2s7mpssXhRUxEYYaGI7YhaF8e_qfK3ACATYSf2yU7OpPla2eWB-YJ7zcr8mc4Yj0NUKJMIyfppvJEjQO4PyRgQYr_c2HCQ9tkg') EXTERN,
        data = 'DATA' : 'java.lang.String' (OBL) (DEFAULTVALUE='ALL') EXTERN,
        commref = 'COMMREF' : 'java.lang.String' (OBL) (DEFAULTVALUE='33614') EXTERN,
        instanceid = 'instanceId' : 'java.lang.String',
        data_0 = 'data' : REGISTER OF (
            commref = 'commRef' : 'java.lang.String',
            productattributes = 'productAttributes' : REGISTER OF (
                brand = 'brand' : 'java.lang.String',
                commrefstatus = 'commRefStatus' : 'java.lang.String',
                devicerange = 'deviceRange' : 'java.lang.String',
                deviceshortname = 'deviceShortName' : 'java.lang.String',
                longdescription = 'longDescription' : 'java.lang.String',
                producttype = 'productType' : 'java.lang.String',
                shortdescription = 'shortDescription' : 'java.lang.String'
            ),
            productimage = 'productImage' : REGISTER OF (
                imagedownloadurl = 'imageDownloadURL' : 'java.lang.String'
            ),
            productdocuments = 'productDocuments' : ARRAY OF (
                productdocuments = 'productDocuments' : REGISTER OF (
                    doctitle = 'docTitle' : 'java.lang.String',
                    docdescription = 'docDescription' : 'java.lang.String',
                    docdownloadurl = 'docDownloadURL' : 'java.lang.String',
                    docsize = 'docSize' : 'java.lang.String',
                    doctype = 'docType' : 'java.lang.String',
                    docname = 'docName' : 'java.lang.String',
                    docreference = 'docReference' : 'java.lang.String',
                    doclocales = 'docLocales' : ARRAY OF (
                        doclocales = 'docLocales' : REGISTER OF (
                            field_0 = 'field_0' : 'java.lang.String'
                        )
                    ),
                    mobiledownloadurl = 'mobileDownloadURL' : 'java.lang.String',
                    docrevision = 'docRevision' : 'java.lang.String',
                    docversion = 'docVersion' : 'java.lang.String'
                )
            ),
            productcharacteristics = 'productCharacteristics' : REGISTER OF (
                categories = 'categories' : ARRAY OF (
                    categories = 'categories' : REGISTER OF (
                        name = 'name' : 'java.lang.String',
                        characteristics = 'characteristics' : ARRAY OF (
                            characteristics = 'characteristics' : REGISTER OF (
                                name = 'name' : 'java.lang.String',
                                value = 'value' : REGISTER OF (
                                    value = 'value' : 'java.lang.String',
                                    externallabel = 'externalLabel' : 'java.lang.String',
                                    externalurl = 'externalUrl' : 'java.lang.String',
                                    textbefore = 'textBefore' : 'java.lang.String'
                                )
                            )
                        )
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_emcp_alarms
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_emcp_alarms
    TUPLEROOT '/data'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTcxMDg2NjAsImp0aSI6ImM0MTAyNGIwLWVhYTQtNDNhNi05MDFmLTRmNzQ4ZDdlOGE5YyIsImV4cCI6MTY1NzExMjI2MCwiaXNzIjoiaHR0cHM6Ly9lY29zdHJ1eHVyZS1lbmVyZ3ktb3BlcmF0aW9uLXFhLmF6dXJlZmQubmV0Iiwic3ViamVjdElkIjoxMzIxLCJzdWJqZWN0Q29uY2VwdCI6InVybjplZG0tc2U6ZW06Y29yZTpvYzpzZXJ2aWNlIiwic2NvcGUiOlt7ImlkIjo4NzI5MywidXJuIjoidXJuOmVkbS1zZTplbTpjb3JlOnByOnRlbmFudCIsInJvbGVJZCI6NCwiZXhwbGljaXRBY2Nlc3MiOnRydWV9XSwibW9kdWxlcyI6W3siaWQiOjEsIm5hbWUiOiJlZG1hIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6ZmFsc2UsInJlYXNvbiI6ImV4cGlyZWQifSx7ImlkIjoxLCJuYW1lIjoiZWRtYSIsInRlbmFudElkIjo4NzI5MywiaXNBY3RpdmUiOnRydWUsInJlYXNvbiI6bnVsbH0seyJpZCI6MSwibmFtZSI6ImVkbWEiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9LHsiaWQiOjIsIm5hbWUiOiJlY2MiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjpmYWxzZSwicmVhc29uIjoiZXhwaXJlZCJ9LHsiaWQiOjIsIm5hbWUiOiJlY2MiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9LHsiaWQiOjIsIm5hbWUiOiJlY2MiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9XSwic291cmNlIjoidXNlcnYyIn0.gKRn3nOJ7BWuE9fIs0IG28iO0z9p6RQZr2lscCePhyWll3lnMOli5xMAGdAlUMpHUKyP9LQnYfVgJA-lrEOwLjdAHDwiSgsgHa4cMwuNj_qFG389OGGmwT-8cnERRT_OsSxEvpsW53Er-0TO_gFEQTlmi4-XFrIb7Jp0Ouk8tAOFCnlASdNZZ8qUF8FCXZddAW3u4bf8KH4Tk1gJMTMeHN34MM-4Ad2zgLjdbJFCc9SKJfNu1RD4kU5r2eqQUGCG_nspEeB_oqldNk5vN_Ctm2ijO6v9w5ffvkE1gjGfElVwLVzhZ9vNtJ0q5uD_Ve3BsHkRHtD75f-dm8qtC1gFk7Tmg8EQ-F1Xaok2Vw_VRLwYWGTYcauSZHDg6ZD-ks1-K-qgxcvgdDPrajMfdu1rDc1jAniPguhtzs8SRYIOJ7RQyZ5HD4pcL3jhABf_fq88F_yP9-JpP-rmQ_ztkET82y3CtORLOTBnbvAyl3j10H7aelyOgh_T1NjUDViau2A-1XDQ_QJaSQxNV_YhAWkZ6TG1PoZ-iTVxTls3XT2kvZGDoI7a5o9_Y0ZptiVAtcm1xyEIodBoiBmI7c6lbmhbVNqJffJ2pTg3Uu4NPGO-gznmoZqv2YNeiayUhtYbVZ0bCpVYgABRD71AHmnq6lbf7Ng-IcBo4MrmCyLuII6AOp4') EXTERN,
        assetid = 'assetId' : 'java.lang.String' (OBL) (DEFAULTVALUE='229525') EXTERN,
        alarmoccurrences = 'alarmOccurrences' : REGISTER OF (
            totalcount = 'totalCount' : 'java.lang.Integer',
            pageinfo = 'pageInfo' : REGISTER OF (
                hasnextpage = 'hasNextPage' : 'java.lang.String',
                haspreviouspage = 'hasPreviousPage' : 'java.lang.String',
                __typename = '__typename' : 'java.lang.String'
            ),
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    id = 'id' : 'java.lang.Integer',
                    starttime = 'startTime' : 'java.lang.String',
                    endtime = 'endTime' : 'java.lang.String',
                    alarmstate = 'alarmState' : 'java.lang.String',
                    measures = 'measures' : 'java.lang.String',
                    possiblecause = 'possibleCause' : 'java.lang.String',
                    possibleproblem = 'possibleProblem' : 'java.lang.String',
                    possiblerecommendation = 'possibleRecommendation' : 'java.lang.String',
                    possiblerisk = 'possibleRisk' : 'java.lang.String',
                    alarmoccurrencepvalues = 'alarmOccurrencePValues' : ARRAY OF (
                        alarmoccurrencepvalues = 'alarmOccurrencePValues' : REGISTER OF (
                            psval = 'psval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                name = 'name' : 'java.lang.String',
                                urn = 'urn' : 'java.lang.String',
                                label = 'label' : 'java.lang.String',
                                description = 'description' : 'java.lang.String',
                                mandatory = 'mandatory' : 'java.lang.String',
                                visible = 'visible' : 'java.lang.String',
                                defival = 'defIVal' : 'java.lang.String',
                                deffval = 'defFVal' : 'java.lang.String',
                                defsval = 'defSVal' : 'java.lang.String',
                                orderingtype = 'orderingType' : 'java.lang.String',
                                encodingtype = 'encodingType' : 'java.lang.String',
                                propertytype = 'propertyType' : 'java.lang.String',
                                accesstype = 'accessType' : 'java.lang.String',
                                facettype = 'facetType' : 'java.lang.String',
                                enumurn = 'enumUrn' : 'java.lang.String',
                                unit = 'unit' : REGISTER OF (
                                    id = 'id' : 'java.lang.Integer',
                                    name = 'name' : 'java.lang.String',
                                    issi = 'isSi' : 'java.lang.String',
                                    urn = 'urn' : 'java.lang.String',
                                    quantityname = 'quantityName' : 'java.lang.String',
                                    __typename = '__typename' : 'java.lang.String',
                                    symbol = 'symbol' : 'java.lang.String'
                                ),
                                __typename = '__typename' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String',
                            ptsval = 'pTsVal' : 'java.lang.String',
                            pival = 'pival' : 'java.lang.Integer',
                            pfval = 'pfval' : 'java.lang.Double'
                        )
                    ),
                    alarminstance = 'alarmInstance' : REGISTER OF (
                        id = 'id' : 'java.lang.Integer',
                        alarmcontrol = 'alarmControl' : 'java.lang.String',
                        alarmfamily = 'alarmFamily' : 'java.lang.String',
                        alarmmodel = 'alarmModel' : 'java.lang.String',
                        alarmpriority = 'alarmPriority' : 'java.lang.String',
                        alarmstate = 'alarmState' : 'java.lang.String',
                        alarmconceptid = 'alarmConceptId' : 'java.lang.Integer',
                        thingid = 'thingId' : 'java.lang.Integer',
                        tsmath = 'tsMath' : 'java.lang.String',
                        alarmconcept = 'alarmConcept' : REGISTER OF (
                            urn = 'urn' : 'java.lang.String',
                            name = 'name' : 'java.lang.String',
                            icon = 'icon' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            description = 'description' : 'java.lang.String',
                            alarmeventconceptcategory = 'alarmEventConceptCategory' : REGISTER OF (
                                id = 'id' : 'java.lang.Integer',
                                description = 'description' : 'java.lang.String',
                                name = 'name' : 'java.lang.String',
                                packageid = 'packageId' : 'java.lang.Integer',
                                label = 'label' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        thing = 'thing' : REGISTER OF (
                            handle = 'handle' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    acknowledgementalarmstatetransition = 'acknowledgementAlarmStateTransition' : 'java.lang.String',
                    __typename = '__typename' : 'java.lang.String'
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_alarms_289f8ce8-5367-4396-8559-9b3b5353a922"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_emcp_alarms
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_emcp_alarms_289f8ce8-5367-4396-8559-9b3b5353a922.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjAwNzE2NjEsImp0aSI6ImM2ZWYyNTM0LWNjMDQtNDZkYi05OTgwLWQ2OGY2YzAwOTMyNyIsImV4cCI6MTY2MDA3NTI2MSwiaXNzIjoiaHR0cHM6Ly9lY29zdHJ1eHVyZS1lbmVyZ3ktb3BlcmF0aW9uLXFhLmF6dXJlZmQubmV0Iiwic3ViamVjdElkIjoxMzIxLCJzdWJqZWN0Q29uY2VwdCI6InVybjplZG0tc2U6ZW06Y29yZTpvYzpzZXJ2aWNlIiwic2NvcGUiOlt7ImlkIjo4NzI5MywidXJuIjoidXJuOmVkbS1zZTplbTpjb3JlOnByOnRlbmFudCIsInJvbGVJZCI6NCwiZXhwbGljaXRBY2Nlc3MiOnRydWV9XSwibW9kdWxlcyI6W3siaWQiOjEsIm5hbWUiOiJlZG1hIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjoyLCJuYW1lIjoiZWNjIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjoyLCJuYW1lIjoiZWNjIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjo2LCJuYW1lIjoic2VydmljZSBlbnRyYW5jZSBoZWFsdGgiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9XSwic291cmNlIjoidXNlcnYyIn0.n0-Yw-C8wRfO863NsHQ290TH4s06R3753goj92eoUSDVQvgdKEvtiFzxHlq-KcmAY_eeO_CxM-dvPrv3x-Q9-FyGb8lndpaMrbavvp-ZqgGZTy1WgUR0wr1UC9sFN6Dl-PAd9vWW3_l5d_EgTvUf55gqAMvuf8s_nilGzNp3eQEGyQNredUtGHTvALz1-EqVl9bjQYWt5p1HANsLFXS2Fp3OZ19vvfgTRu78b41Uvp1p2tWAT9wo30JN020R-ukJi99a1ljTTrEHlp6-pAuFmRk3S7Msugu-xKD9qjdgfFIFn7KDYpca-wwOHkx6BcbHIylDvhaK6xtg2TCjF1l3Q67EDBf75i3qUt_qNDaOhhqgbCR0VfNrYoinPv4f2PwxTbZ86vwpuHT0ulYodYMor-0cvT8irmJ6uhiZg5---Gyw4tfasDVxArPBcDNDEWeuolzXf-aulaiButMmQn1C6dzExuJsJsz14Ec8hdbPQ259iRMSetd04Pr9R6JZ9fKKDGdxZSVtDlntOKShwhbL_fEGWqIPRyCd4OSzRFnlxG40NlKkQqEihOXa3l5jf3cA_JerJ8mc6EZmS7ZgusH4cVqhr7_eQhEWMp5uSfJlcuQ1meqcZwleF9ETXT2_TBkMSU-H2CQF1x86Y8eDJKBXCJllQSZiXF9i7ZN5UOR55ow') EXTERN,
        starttime = 'startTime' : 'java.lang.String' (OBL) (DEFAULTVALUE='2022-07-05T18:30:00.000Z') EXTERN,
        endtime = 'endTime' : 'java.lang.String' (OBL) (DEFAULTVALUE='2022-07-06T18:30:00.000Z') EXTERN,
        assetid = 'assetId' : 'java.lang.String' (OBL) (DEFAULTVALUE='229525') EXTERN,
        alarmoccurrences = 'alarmOccurrences' : REGISTER OF (
            totalcount = 'totalCount' : 'java.lang.Integer',
            pageinfo = 'pageInfo' : REGISTER OF (
                hasnextpage = 'hasNextPage' : 'java.lang.String',
                haspreviouspage = 'hasPreviousPage' : 'java.lang.String',
                __typename = '__typename' : 'java.lang.String'
            ),
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    id = 'id' : 'java.lang.Integer',
                    starttime = 'startTime' : 'java.lang.String',
                    endtime = 'endTime' : 'java.lang.String',
                    alarmstate = 'alarmState' : 'java.lang.String',
                    measures = 'measures' : 'java.lang.String',
                    possiblecause = 'possibleCause' : 'java.lang.String',
                    possibleproblem = 'possibleProblem' : 'java.lang.String',
                    possiblerecommendation = 'possibleRecommendation' : 'java.lang.String',
                    possiblerisk = 'possibleRisk' : 'java.lang.String',
                    alarmoccurrencepvalues = 'alarmOccurrencePValues' : ARRAY OF (
                        alarmoccurrencepvalues = 'alarmOccurrencePValues' : REGISTER OF (
                            psval = 'psval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                name = 'name' : 'java.lang.String',
                                urn = 'urn' : 'java.lang.String',
                                label = 'label' : 'java.lang.String',
                                description = 'description' : 'java.lang.String',
                                mandatory = 'mandatory' : 'java.lang.String',
                                visible = 'visible' : 'java.lang.String',
                                defival = 'defIVal' : 'java.lang.String',
                                deffval = 'defFVal' : 'java.lang.String',
                                defsval = 'defSVal' : 'java.lang.String',
                                orderingtype = 'orderingType' : 'java.lang.String',
                                encodingtype = 'encodingType' : 'java.lang.String',
                                propertytype = 'propertyType' : 'java.lang.String',
                                accesstype = 'accessType' : 'java.lang.String',
                                facettype = 'facetType' : 'java.lang.String',
                                enumurn = 'enumUrn' : 'java.lang.String',
                                unit = 'unit' : REGISTER OF (
                                    id = 'id' : 'java.lang.Integer',
                                    name = 'name' : 'java.lang.String',
                                    issi = 'isSi' : 'java.lang.String',
                                    urn = 'urn' : 'java.lang.String',
                                    quantityname = 'quantityName' : 'java.lang.String',
                                    __typename = '__typename' : 'java.lang.String',
                                    symbol = 'symbol' : 'java.lang.String'
                                ),
                                __typename = '__typename' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String',
                            ptsval = 'pTsVal' : 'java.lang.String',
                            pival = 'pival' : 'java.lang.Integer',
                            pfval = 'pfval' : 'java.lang.Double'
                        )
                    ),
                    alarminstance = 'alarmInstance' : REGISTER OF (
                        id = 'id' : 'java.lang.Integer',
                        alarmcontrol = 'alarmControl' : 'java.lang.String',
                        alarmfamily = 'alarmFamily' : 'java.lang.String',
                        alarmmodel = 'alarmModel' : 'java.lang.String',
                        alarmpriority = 'alarmPriority' : 'java.lang.String',
                        alarmstate = 'alarmState' : 'java.lang.String',
                        alarmconceptid = 'alarmConceptId' : 'java.lang.Integer',
                        thingid = 'thingId' : 'java.lang.Integer',
                        tsmath = 'tsMath' : 'java.lang.String',
                        alarmconcept = 'alarmConcept' : REGISTER OF (
                            urn = 'urn' : 'java.lang.String',
                            name = 'name' : 'java.lang.String',
                            icon = 'icon' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            description = 'description' : 'java.lang.String',
                            alarmeventconceptcategory = 'alarmEventConceptCategory' : REGISTER OF (
                                id = 'id' : 'java.lang.Integer',
                                description = 'description' : 'java.lang.String',
                                name = 'name' : 'java.lang.String',
                                packageid = 'packageId' : 'java.lang.Integer',
                                label = 'label' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        thing = 'thing' : REGISTER OF (
                            handle = 'handle' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    acknowledgementalarmstatetransition = 'acknowledgementAlarmStateTransition' : 'java.lang.String',
                    __typename = '__typename' : 'java.lang.String'
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_emcp_apis
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
"appContext":[
{
"type":"TENANT",
"id":87293,
"urn":"urn:edm-se:em:core:pr:tenant"
},
{
"type":"ID",
"id":87295,
"urn":"urn:edm-se:em:core:pr:region"
},
{
"type":"ID",
"id":87301,
"urn":"urn:edm-se:em:core:pr:site"
},
{
"type":"ID",
"id":229525,
"urn":"urn:edm-se:em:core:pr:panelboard"
}
],
"pageSize":5,
"offset":0,
"enableNotificationPreferences":false,
"whereClause":{
"startTime":{
"gte":"2022-07-05T18:30:00.000Z",
"lte":"2022-07-06T18:30:00.000Z"
}
}
}') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='query GetAlarms($appContext: [EMCP_TopoNodeContextInput!]!, $whereClause: EMCP_AlarmOccurrenceFilterInput, $enableNotificationPreferences: Boolean, $pageSize: Int, $offset: Int) {\n alarmOccurrences(\n appContext: $appContext\n enableNotificationPreferences: $enableNotificationPreferences\n where: $whereClause\n order: {startTime: DESC}\n skip: $offset\n take: $pageSize\n ) {\n totalCount\n pageInfo {\n hasNextPage\n hasPreviousPage\n __typename\n }\n items {\n ...GeneralAlarmOccurrenceFields\n __typename\n }\n __typename\n }\n}\n\nfragment GeneralAlarmOccurrenceFields on EMCP_AlarmOccurrence {\n id\n startTime\n endTime\n alarmState\n measures\n possibleCause\n possibleProblem\n possibleRecommendation\n possibleRisk\n alarmOccurrencePValues {\n ...AlarmOccurrencePValueFields\n __typename\n }\n alarmInstance {\n id\n alarmControl\n alarmFamily\n alarmModel\n alarmPriority\n alarmState\n alarmConceptId\n thingId\n tsMath\n alarmConcept {\n ...AlarmOccurrenceConceptFields\n __typename\n }\n thing {\n handle\n label\n __typename\n }\n __typename\n }\n acknowledgementAlarmStateTransition {\n alarmState\n comment\n idmsFederatedId\n transitionTime\n __typename\n }\n __typename\n}\n\nfragment AlarmOccurrenceConceptFields on EMCP_AlarmConcept {\n urn\n name\n icon\n label\n description\n alarmEventConceptCategory {\n id\n description\n name\n packageId\n label\n __typename\n }\n __typename\n}\n\nfragment AlarmOccurrencePValueFields on EMCP_AlarmOccurrencePValue {\n pival\n pfval\n psval\n pTsVal\n property {\n ...GeneralPropertyWithUnitFields\n __typename\n }\n __typename\n}\n\nfragment GeneralPropertyWithUnitFields on EMCP_Property {\n name\n urn\n label\n description\n mandatory\n visible\n defIVal\n defFVal\n defSVal\n orderingType\n encodingType\n propertyType\n accessType\n facetType\n enumUrn\n unit {\n ...GeneralUnitFields\n __typename\n }\n __typename\n}\n\nfragment GeneralUnitFields on EMCP_Unit {\n id\n name\n isSi\n symbol\n urn\n quantityName\n __typename\n}') EXTERN,
        alarmoccurrences = 'alarmOccurrences' : REGISTER OF (
            totalcount = 'totalCount' : 'java.lang.Integer',
            pageinfo = 'pageInfo' : REGISTER OF (
                hasnextpage = 'hasNextPage' : 'java.lang.String',
                haspreviouspage = 'hasPreviousPage' : 'java.lang.String',
                __typename = '__typename' : 'java.lang.String'
            ),
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    id = 'id' : 'java.lang.Integer',
                    starttime = 'startTime' : 'java.lang.String',
                    endtime = 'endTime' : 'java.lang.String',
                    alarmstate = 'alarmState' : 'java.lang.String',
                    measures = 'measures' : 'java.lang.String',
                    possiblecause = 'possibleCause' : 'java.lang.String',
                    possibleproblem = 'possibleProblem' : 'java.lang.String',
                    possiblerecommendation = 'possibleRecommendation' : 'java.lang.String',
                    possiblerisk = 'possibleRisk' : 'java.lang.String',
                    alarmoccurrencepvalues = 'alarmOccurrencePValues' : ARRAY OF (
                        alarmoccurrencepvalues = 'alarmOccurrencePValues' : REGISTER OF (
                            psval = 'psval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                name = 'name' : 'java.lang.String',
                                urn = 'urn' : 'java.lang.String',
                                label = 'label' : 'java.lang.String',
                                description = 'description' : 'java.lang.String',
                                mandatory = 'mandatory' : 'java.lang.String',
                                visible = 'visible' : 'java.lang.String',
                                defival = 'defIVal' : 'java.lang.String',
                                deffval = 'defFVal' : 'java.lang.String',
                                defsval = 'defSVal' : 'java.lang.String',
                                orderingtype = 'orderingType' : 'java.lang.String',
                                encodingtype = 'encodingType' : 'java.lang.String',
                                propertytype = 'propertyType' : 'java.lang.String',
                                accesstype = 'accessType' : 'java.lang.String',
                                facettype = 'facetType' : 'java.lang.String',
                                enumurn = 'enumUrn' : 'java.lang.String',
                                unit = 'unit' : REGISTER OF (
                                    id = 'id' : 'java.lang.Integer',
                                    name = 'name' : 'java.lang.String',
                                    issi = 'isSi' : 'java.lang.String',
                                    urn = 'urn' : 'java.lang.String',
                                    quantityname = 'quantityName' : 'java.lang.String',
                                    __typename = '__typename' : 'java.lang.String',
                                    symbol = 'symbol' : 'java.lang.String'
                                ),
                                __typename = '__typename' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String',
                            ptsval = 'pTsVal' : 'java.lang.String',
                            pival = 'pival' : 'java.lang.Integer',
                            pfval = 'pfval' : 'java.lang.Double'
                        )
                    ),
                    alarminstance = 'alarmInstance' : REGISTER OF (
                        id = 'id' : 'java.lang.Integer',
                        alarmcontrol = 'alarmControl' : 'java.lang.String',
                        alarmfamily = 'alarmFamily' : 'java.lang.String',
                        alarmmodel = 'alarmModel' : 'java.lang.String',
                        alarmpriority = 'alarmPriority' : 'java.lang.String',
                        alarmstate = 'alarmState' : 'java.lang.String',
                        alarmconceptid = 'alarmConceptId' : 'java.lang.Integer',
                        thingid = 'thingId' : 'java.lang.Integer',
                        tsmath = 'tsMath' : 'java.lang.String',
                        alarmconcept = 'alarmConcept' : REGISTER OF (
                            urn = 'urn' : 'java.lang.String',
                            name = 'name' : 'java.lang.String',
                            icon = 'icon' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            description = 'description' : 'java.lang.String',
                            alarmeventconceptcategory = 'alarmEventConceptCategory' : REGISTER OF (
                                id = 'id' : 'java.lang.Integer',
                                description = 'description' : 'java.lang.String',
                                name = 'name' : 'java.lang.String',
                                packageid = 'packageId' : 'java.lang.Integer',
                                label = 'label' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        thing = 'thing' : REGISTER OF (
                            handle = 'handle' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    acknowledgementalarmstatetransition = 'acknowledgementAlarmStateTransition' : 'java.lang.String',
                    __typename = '__typename' : 'java.lang.String'
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_apis_1d669e6f-21bc-42e9-be96-212fc991b747"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis_1d669e6f-21bc-42e9-be96-212fc991b747.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
  "appContext": [
    {
      "type": "TENANT",
      "id": 87293,
      "urn": "urn:edm-se:em:core:pr:tenant"
    },
    {
      "type": "ID",
      "id": 87297,
      "urn": "urn:edm-se:em:core:pr:site"
    }
  ],
  "mode": "PHYSICAL",
  "includeAllParents": false,
  "includeProperties": [
    "urn:edm-se:em:core:pr:is_asset",
    "urn:edm-se:em:core:pr:gateway",
    "urn:edm-se:em:core:pr:has_computed_values",
    "urn:edm-se:em:core:pr:serial_number",
    "urn:edm-se:em:core:pr:brand",
    "urn:edm-se:em:core:pr:commercial_reference",
    "urn:edm-se:em:core:pr:range",
    "urn:edm-se:em:core:pr:image_url",
    "urn:edm-se:em:core:pr:description"
  ],
  "includeNodelinks": [
    "FEED",
    "INCOMER",
    "RESIDUAL_FEED"
  ]
}') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='query getHierarchyWithNodelinks($appContext: [EMCP_TopoNodeContextInput], $mode: EMCP_HierarchyMode!, $whereClause: EMCP_HierarchyFilterInput, $includeAllParents: Boolean!, $includeProperties: [String!], $includeNodelinks: [EMCP_LinkKindType!]) { hierarchy( mode: $mode appContext: $appContext includeAllParents: $includeAllParents where: $whereClause ) { parentId thing { id label handle concept { urn type: conceptKind __typename label name description } nodeLinkDsts(where: {kind: {in: $includeNodelinks}) { ...GeneralNodeLinkFields __typename } nodeLinkSrcs(where: {kind: {in: $includeNodelinks}) { ...GeneralNodeLinkFields __typename } pvalues(where: {property: {urn: {in: $includeProperties}}) { pival pfval psval property { urn __typename name } __typename } __typename } __typename }fragment GeneralNodeLinkFields on EMCP_NodeLink { id kind srcId srcNode dstId dstNode percentage __typename}') EXTERN,
        hierarchy = 'hierarchy' : ARRAY OF (
            hierarchy = 'hierarchy' : REGISTER OF (
                parentid = 'parentId' : 'java.lang.Integer',
                thing = 'thing' : REGISTER OF (
                    id = 'id' : 'java.lang.Integer',
                    label = 'label' : 'java.lang.String',
                    handle = 'handle' : 'java.lang.String',
                    concept = 'concept' : REGISTER OF (
                        urn = 'urn' : 'java.lang.String',
                        type = 'type' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String',
                        label = 'label' : 'java.lang.String',
                        name = 'name' : 'java.lang.String',
                        description = 'description' : 'java.lang.String'
                    ),
                    nodelinkdsts = 'nodeLinkDsts' : ARRAY OF (
                        nodelinkdsts = 'nodeLinkDsts' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            kind = 'kind' : 'java.lang.String',
                            srcid = 'srcId' : 'java.lang.Integer',
                            srcnode = 'srcNode' : 'java.lang.String',
                            dstid = 'dstId' : 'java.lang.Integer',
                            dstnode = 'dstNode' : 'java.lang.String',
                            percentage = 'percentage' : 'java.lang.Integer',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    nodelinksrcs = 'nodeLinkSrcs' : ARRAY OF (
                        nodelinksrcs = 'nodeLinkSrcs' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            kind = 'kind' : 'java.lang.String',
                            srcid = 'srcId' : 'java.lang.Integer',
                            srcnode = 'srcNode' : 'java.lang.String',
                            dstid = 'dstId' : 'java.lang.Integer',
                            dstnode = 'dstNode' : 'java.lang.String',
                            percentage = 'percentage' : 'java.lang.Integer',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    pvalues = 'pvalues' : ARRAY OF (
                        pvalues = 'pvalues' : REGISTER OF (
                            pfval = 'pfval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                urn = 'urn' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String',
                                name = 'name' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String',
                            psval = 'psval' : 'java.lang.String',
                            pival = 'pival' : 'java.lang.Integer'
                        )
                    ),
                    __typename = '__typename' : 'java.lang.String'
                ),
                __typename = '__typename' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_apis_28f872c9-7499-4f47-9016-c02c78afa2a0"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis_28f872c9-7499-4f47-9016-c02c78afa2a0.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
  "appContext": [
    {
      "type": "TENANT",
      "id": 87293,
      "urn": "urn:edm-se:em:core:pr:tenant"
    },
    {
      "type": "ID",
      "id": 87297,
      "urn": "urn:edm-se:em:core:pr:site"
    }
  ],
  "mode": "PHYSICAL",
  "includeAllParents": false,
  "includeProperties": [
    "urn:edm-se:em:core:pr:is_asset",
    "urn:edm-se:em:core:pr:gateway",
    "urn:edm-se:em:core:pr:has_computed_values",
    "urn:edm-se:em:core:pr:serial_number",
    "urn:edm-se:em:core:pr:brand",
    "urn:edm-se:em:core:pr:commercial_reference",
    "urn:edm-se:em:core:pr:range",
    "urn:edm-se:em:core:pr:image_url",
    "urn:edm-se:em:core:pr:description"
  ],
  "includeNodelinks": [
    "FEED",
    "INCOMER",
    "RESIDUAL_FEED"
  ]
}') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='query getHierarchyWithNodelinks($appContext: [EMCP_TopoNodeContextInput], $mode: EMCP_HierarchyMode!, $whereClause: EMCP_HierarchyFilterInput, $includeAllParents: Boolean!, $includeProperties: [String!], $includeNodelinks: [EMCP_LinkKindType!]) { hierarchy( mode: $mode appContext: $appContext includeAllParents: $includeAllParents where: $whereClause ) { parentId thing { id label handle concept { urn type: conceptKind __typename label name description } nodeLinkDsts(where: {kind: {in: $includeNodelinks}) { ...GeneralNodeLinkFields __typename } nodeLinkSrcs(where: {kind: {in: $includeNodelinks}) { ...GeneralNodeLinkFields __typename } pvalues(where: {property: {urn: {in: $includeProperties}) { pival pfval psval property { urn __typename } __typename } __typename } __typename }fragment GeneralNodeLinkFields on EMCP_NodeLink { id kind srcId srcNode dstId dstNode percentage __typename}') EXTERN,
        hierarchy = 'hierarchy' : ARRAY OF (
            hierarchy = 'hierarchy' : REGISTER OF (
                parentid = 'parentId' : 'java.lang.Integer',
                thing = 'thing' : REGISTER OF (
                    id = 'id' : 'java.lang.Integer',
                    label = 'label' : 'java.lang.String',
                    handle = 'handle' : 'java.lang.String',
                    concept = 'concept' : REGISTER OF (
                        urn = 'urn' : 'java.lang.String',
                        type = 'type' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String',
                        label = 'label' : 'java.lang.String',
                        name = 'name' : 'java.lang.String',
                        description = 'description' : 'java.lang.String'
                    ),
                    nodelinkdsts = 'nodeLinkDsts' : ARRAY OF (
                        nodelinkdsts = 'nodeLinkDsts' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            kind = 'kind' : 'java.lang.String',
                            srcid = 'srcId' : 'java.lang.Integer',
                            srcnode = 'srcNode' : 'java.lang.String',
                            dstid = 'dstId' : 'java.lang.Integer',
                            dstnode = 'dstNode' : 'java.lang.String',
                            percentage = 'percentage' : 'java.lang.Integer',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    nodelinksrcs = 'nodeLinkSrcs' : ARRAY OF (
                        nodelinksrcs = 'nodeLinkSrcs' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            kind = 'kind' : 'java.lang.String',
                            srcid = 'srcId' : 'java.lang.Integer',
                            srcnode = 'srcNode' : 'java.lang.String',
                            dstid = 'dstId' : 'java.lang.Integer',
                            dstnode = 'dstNode' : 'java.lang.String',
                            percentage = 'percentage' : 'java.lang.Integer',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    pvalues = 'pvalues' : ARRAY OF (
                        pvalues = 'pvalues' : REGISTER OF (
                            pfval = 'pfval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                urn = 'urn' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String'
                            ),
                            __typename = '__typename' : 'java.lang.String',
                            psval = 'psval' : 'java.lang.String',
                            pival = 'pival' : 'java.lang.Integer'
                        )
                    ),
                    __typename = '__typename' : 'java.lang.String'
                ),
                __typename = '__typename' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_apis_53a62667-c96f-4761-9fc2-7da35aac0277"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis_53a62667-c96f-4761-9fc2-7da35aac0277.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
        "take": 250,
        "skip": 0,
        "appContext": [
            {
                "type": "TENANT",
                "id": 87293,
                "urn": "urn:edm-se:em:core:pr:tenant"
            },
            {
                "type": "ID",
                "id": 87295,
                "urn": "urn:edm-se:em:core:pr:region"
            },
            {
                "type": "ID",
                "id": 87297,
                "urn": "urn:edm-se:em:core:pr:site"
            },
            {
                "type": "ID",
                "id": 87364,
                "urn": "urn:edm-se:em:core:pc:power_meter"
            }
        ],
        "businessQuantityNames": [
            "CURRENT",
            "CURRENT_A",
            "CURRENT_B",
            "CURRENT_C",
            "VOLTAGE",
            "VOLTAGE_AB",
            "VOLTAGE_BC",
            "VOLTAGE_CA",
            "VOLTAGE_AN",
            "VOLTAGE_BN",
            "VOLTAGE_CN",
            "ACTIVE_POWER",
            "ACTIVE_ENERGY"
        ],
        "startTime": "2022-07-24T18:30:00.000Z",
        "endTime": "2022-07-25T18:30:00.000Z",
        "timeZone": "Asia/Calcutta"
    }') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='query rawTrendData($appContext: [EMCP_TopoNodeContextInput!]!, $businessQuantityNames: [String!]!, $startTime: DateTime!, $endTime: DateTime!, $timeZone: String!, $take: Int = 250, $skip: Int = 0) { rawTrendData( skip: $skip take: $take appContext: $appContext businessQuantityNames: $businessQuantityNames startTime: $startTime endTime: $endTime timeZone: $timeZone ) { totalCount items { businessQuantity { name __typename } measure { ...GeneralMeasureFields __typename } thingId thingLabel thingContext { ...GeneralToponodeContextFields __typename } timeZone timeSeriesValues { timestamp value __typename } __typename } __typename }fragment GeneralToponodeContextFields on EMCP_TopoNodeContext { id type label name urn value __typename}fragment GeneralMeasureFields on EMCP_Measure { id label urn unit { ...GeneralUnitFields __typename } __typename}fragment GeneralUnitFields on EMCP_Unit { id name isSi symbol urn quantityName __typename}') EXTERN,
        rawtrenddata = 'rawTrendData' : REGISTER OF (
            totalcount = 'totalCount' : 'java.lang.Integer',
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    businessquantity = 'businessQuantity' : REGISTER OF (
                        name = 'name' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    measure = 'measure' : REGISTER OF (
                        id = 'id' : 'java.lang.Integer',
                        label = 'label' : 'java.lang.String',
                        urn = 'urn' : 'java.lang.String',
                        unit = 'unit' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            name = 'name' : 'java.lang.String',
                            issi = 'isSi' : 'java.lang.String',
                            symbol = 'symbol' : 'java.lang.String',
                            urn = 'urn' : 'java.lang.String',
                            quantityname = 'quantityName' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    thingid = 'thingId' : 'java.lang.Integer',
                    thinglabel = 'thingLabel' : 'java.lang.String',
                    thingcontext = 'thingContext' : ARRAY OF (
                        thingcontext = 'thingContext' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            type = 'type' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            name = 'name' : 'java.lang.String',
                            urn = 'urn' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        )
                    ),
                    timezone = 'timeZone' : 'java.lang.String',
                    timeseriesvalues = 'timeSeriesValues' : ARRAY OF (
                        timeseriesvalues = 'timeSeriesValues' : REGISTER OF (
                            timestamp = 'timestamp' : 'java.lang.String',
                            value = 'value' : 'java.lang.Double',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    __typename = '__typename' : 'java.lang.String'
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_apis_ab0a2624-20ef-43e5-9d0f-7cc853a107ff"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis_ab0a2624-20ef-43e5-9d0f-7cc853a107ff.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
        "appContext": [
        {
            "id": 87293,
            "urn": "urn:edm-se:em:core:pr:tenant",
            "label": "Mindt Chocolates",
            "type": "TENANT"
        }
        ],
        "thingFilter": {
        "id": {
            "eq": 171220
        }
        },
        "pvalueFilter": {
        "property": {
            "or": [
            {
                "encodingType": {
                "neq": "ID"
                },
                "visible": {
                "neq": "NONE"
                },
                "urn": {
                "nin": [
                    "urn:edm-se:em:core:pr:name",
                    "urn:edm-se:em:core:pr:label",
                    "urn:edm-se:em:core:pr:created_by",
                    "urn:edm-se:em:core:pr:updated_by"
                ]
                }
            }
            ]
        }
        }
    }') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='fragment conceptFragment on EMCP_Concept { __typename urn icon label description conceptKind}fragment unitFragment on EMCP_Unit { __typename name isSi symbol quantityName}fragment propertyFragment on EMCP_Property { __typename name urn label description mandatory visible example defIVal defFVal defSVal orderingType encodingType propertyType accessType facetType enumUrn unit { ...unitFragment __typename }fragment pvalueFragment on EMCP_PValue { __typename pival pfval psval property { ...propertyFragment __typename }fragment thingFragment on EMCP_Thing { __typename id name label handle concept { ...conceptFragment __typename } pvalues(where: $pvalueFilter) { ...pvalueFragment __typename }query infoPanel_queryThing($appContext: [EMCP_TopoNodeContextInput]!, $thingFilter: EMCP_ThingFilterInput!, $pvalueFilter: EMCP_PValueFilterInput!) { things( appContext: $appContext includeLeafDevice: true includeAllParents: false where: $thingFilter ) { totalCount items { ...thingFragment __typename } __typename }') EXTERN,
        things = 'things' : REGISTER OF (
            totalcount = 'totalCount' : 'java.lang.Integer',
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    __typename = '__typename' : 'java.lang.String',
                    id = 'id' : 'java.lang.Integer',
                    name = 'name' : 'java.lang.String',
                    label = 'label' : 'java.lang.String',
                    handle = 'handle' : 'java.lang.String',
                    concept = 'concept' : REGISTER OF (
                        __typename = '__typename' : 'java.lang.String',
                        urn = 'urn' : 'java.lang.String',
                        icon = 'icon' : 'java.lang.String',
                        label = 'label' : 'java.lang.String',
                        description = 'description' : 'java.lang.String',
                        conceptkind = 'conceptKind' : 'java.lang.String'
                    ),
                    pvalues = 'pvalues' : ARRAY OF (
                        pvalues = 'pvalues' : REGISTER OF (
                            __typename = '__typename' : 'java.lang.String',
                            pfval = 'pfval' : 'java.lang.String',
                            psval = 'psval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                __typename = '__typename' : 'java.lang.String',
                                name = 'name' : 'java.lang.String',
                                urn = 'urn' : 'java.lang.String',
                                label = 'label' : 'java.lang.String',
                                description = 'description' : 'java.lang.String',
                                mandatory = 'mandatory' : 'java.lang.String',
                                visible = 'visible' : 'java.lang.String',
                                example = 'example' : 'java.lang.String',
                                deffval = 'defFVal' : 'java.lang.String',
                                defsval = 'defSVal' : 'java.lang.String',
                                orderingtype = 'orderingType' : 'java.lang.String',
                                encodingtype = 'encodingType' : 'java.lang.String',
                                propertytype = 'propertyType' : 'java.lang.String',
                                accesstype = 'accessType' : 'java.lang.String',
                                facettype = 'facetType' : 'java.lang.String',
                                unit = 'unit' : REGISTER OF (
                                    __typename = '__typename' : 'java.lang.String',
                                    name = 'name' : 'java.lang.String',
                                    issi = 'isSi' : 'java.lang.String',
                                    quantityname = 'quantityName' : 'java.lang.String',
                                    symbol = 'symbol' : 'java.lang.String'
                                ),
                                enumurn = 'enumUrn' : 'java.lang.String',
                                defival = 'defIVal' : 'java.lang.Integer'
                            ),
                            pival = 'pival' : 'java.lang.Integer'
                        )
                    )
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_apis_b2934513-5cf7-4073-9e75-51fe9d757518"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis_b2934513-5cf7-4073-9e75-51fe9d757518.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
      "take":250,
      "skip":0,
      "startTime":"2022-11-17T18:30:00.000Z",
      "endTime":"2022-11-18T18:30:00.000Z",
      "appContext":[
         {
            "type":"TENANT",
            "id":87293,
            "urn":"urn:edm-se:em:core:pr:tenant"
         },
         {
            "type":"ID",
            "id":87295,
            "urn":"urn:edm-se:em:core:pr:region"
         },
         {
            "type":"ID",
            "id":87297,
            "urn":"urn:edm-se:em:core:pr:site"
         }
      ],
      "businessQuantityName":"ACTIVE_ENERGY",
      "timeZone":"Asia/Calcutta",
      "aggregationInterval":"HOUR"
   }') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='query binnedUsageTrendData($appContext: [EMCP_TopoNodeContextInput!]!, $businessQuantityName: String!, $startTime: DateTime!, $endTime: DateTime!, $timeZone: String!, $aggregationInterval: EMCP_AggregationInterval!, $take: Int = 250, $skip: Int = 0) { binnedUsageTrendData( skip: $skip take: $take appContext: $appContext startTime: $startTime endTime: $endTime timeZone: $timeZone businessQuantityName: $businessQuantityName aggregationInterval: $aggregationInterval ) { items { ...BinnedUsageTrendResultFields surfaceAreaValue __typename } __typename }fragment BinnedUsageTrendResultFields on EMCP_BusinessQuantityBinnedUsageTimeSeries { usageId businessQuantity { name __typename } measure { ...GeneralMeasureFields __typename } thingId thingLabel thingContext { type id urn __typename } timeZone timeSeriesValues { startTime endTime keyTime value __typename } __typename}fragment GeneralMeasureFields on EMCP_Measure { id label urn unit { ...GeneralUnitFields __typename } __typename}fragment GeneralUnitFields on EMCP_Unit { id name isSi symbol urn quantityName __typename}') EXTERN,
        binnedusagetrenddata = 'binnedUsageTrendData' : REGISTER OF (
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    usageid = 'usageId' : 'java.lang.Integer',
                    businessquantity = 'businessQuantity' : REGISTER OF (
                        name = 'name' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    measure = 'measure' : REGISTER OF (
                        id = 'id' : 'java.lang.Integer',
                        label = 'label' : 'java.lang.String',
                        urn = 'urn' : 'java.lang.String',
                        unit = 'unit' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            name = 'name' : 'java.lang.String',
                            issi = 'isSi' : 'java.lang.String',
                            symbol = 'symbol' : 'java.lang.String',
                            urn = 'urn' : 'java.lang.String',
                            quantityname = 'quantityName' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    thingid = 'thingId' : 'java.lang.Integer',
                    thinglabel = 'thingLabel' : 'java.lang.String',
                    thingcontext = 'thingContext' : ARRAY OF (
                        thingcontext = 'thingContext' : REGISTER OF (
                            type = 'type' : 'java.lang.String',
                            id = 'id' : 'java.lang.Integer',
                            urn = 'urn' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    timezone = 'timeZone' : 'java.lang.String',
                    timeseriesvalues = 'timeSeriesValues' : ARRAY OF (
                        timeseriesvalues = 'timeSeriesValues' : REGISTER OF (
                            starttime = 'startTime' : 'java.lang.String',
                            endtime = 'endTime' : 'java.lang.String',
                            keytime = 'keyTime' : 'java.lang.String',
                            value = 'value' : 'java.lang.Double',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    __typename = '__typename' : 'java.lang.String',
                    surfaceareavalue = 'surfaceAreaValue' : 'java.lang.Double'
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_apis_ce3e6775-d818-4274-8804-ad7567087bdd"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis_ce3e6775-d818-4274-8804-ad7567087bdd.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
        "mode": "PHYSICAL",
        "appContext": [
            {
                "id": 87293,
                "type": "TENANT",
                "urn": "urn:edm-se:em:core:pr:tenant"
            },
            {
                "type":"ID",
                "id":87297,
                "urn":"urn:edm-se:em:core:pr:site"
            }
        ],
        "includeAllParents": true
}') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='query SitesPhysicalView($mode: EMCP_HierarchyMode!, $appContext: [EMCP_TopoNodeContextInput], $includeAllParents: Boolean!) { tenants: hierarchy( mode: $mode appContext: $appContext includeAllParents: $includeAllParents where: {thing: {concept: {conceptKind: {in: [OTHER]} ) { level parentId childSite: thing { siteId: id name label tenantId concept { urn type: conceptKind properties { urn __typename } __typename } __typename } __typename }') EXTERN,
        tenants = 'tenants' : ARRAY OF (
            tenants = 'tenants' : REGISTER OF (
                level = 'level' : 'java.lang.Integer',
                parentid = 'parentId' : 'java.lang.Integer',
                childsite = 'childSite' : REGISTER OF (
                    siteid = 'siteId' : 'java.lang.Integer',
                    name = 'name' : 'java.lang.String',
                    label = 'label' : 'java.lang.String',
                    tenantid = 'tenantId' : 'java.lang.Integer',
                    concept = 'concept' : REGISTER OF (
                        urn = 'urn' : 'java.lang.String',
                        type = 'type' : 'java.lang.String',
                        properties = 'properties' : ARRAY OF (
                            properties = 'properties' : REGISTER OF (
                                urn = 'urn' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String'
                            )
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    __typename = '__typename' : 'java.lang.String'
                ),
                __typename = '__typename' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_apis_e72e7c49-c19c-40e4-a6d8-4242c15f66ec"
    FOLDER = '/1 - connectivity/2 - base views/new'
    DATASOURCENAME=ds_emcp_apis
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.folder.new.views.json.ds_emcp_apis_e72e7c49-c19c-40e4-a6d8-4242c15f66ec.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        variables = 'VARIABLES' : 'java.lang.String' (OBL) (DEFAULTVALUE='{
      "take":250,
      "skip":0,
      "startTime":"2022-11-17T18:30:00.000Z",
      "endTime":"2022-11-18T18:30:00.000Z",
      "appContext":[
         {
            "type":"TENANT",
            "id":87293,
            "urn":"urn:edm-se:em:core:pr:tenant"
         },
         {
            "type":"ID",
            "id":87295,
            "urn":"urn:edm-se:em:core:pr:region"
         },
         {
            "type":"ID",
            "id":87297,
            "urn":"urn:edm-se:em:core:pr:site"
         }
      ],
      "businessQuantityName":"ACTIVE_POWER",
      "timeZone":"Asia/Calcutta",
      "aggregationInterval":"HOUR"
   }') EXTERN,
        query = 'QUERY' : 'java.lang.String' (OBL) (DEFAULTVALUE='query binnedUsageTrendData($appContext: [EMCP_TopoNodeContextInput!]!, $businessQuantityName: String!, $startTime: DateTime!, $endTime: DateTime!, $timeZone: String!, $aggregationInterval: EMCP_AggregationInterval!, $take: Int = 250, $skip: Int = 0) { binnedUsageTrendData( skip: $skip take: $take appContext: $appContext startTime: $startTime endTime: $endTime timeZone: $timeZone businessQuantityName: $businessQuantityName aggregationInterval: $aggregationInterval ) { items { ...BinnedUsageTrendResultFields surfaceAreaValue __typename } __typename }fragment BinnedUsageTrendResultFields on EMCP_BusinessQuantityBinnedUsageTimeSeries { usageId businessQuantity { name __typename } measure { ...GeneralMeasureFields __typename } thingId thingLabel thingContext { type id urn __typename } timeZone timeSeriesValues { startTime endTime keyTime value __typename } __typename}fragment GeneralMeasureFields on EMCP_Measure { id label urn unit { ...GeneralUnitFields __typename } __typename}fragment GeneralUnitFields on EMCP_Unit { id name isSi symbol urn quantityName __typename}') EXTERN,
        binnedusagetrenddata = 'binnedUsageTrendData' : REGISTER OF (
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    usageid = 'usageId' : 'java.lang.Integer',
                    businessquantity = 'businessQuantity' : REGISTER OF (
                        name = 'name' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    measure = 'measure' : REGISTER OF (
                        id = 'id' : 'java.lang.Integer',
                        label = 'label' : 'java.lang.String',
                        urn = 'urn' : 'java.lang.String',
                        unit = 'unit' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            name = 'name' : 'java.lang.String',
                            issi = 'isSi' : 'java.lang.String',
                            symbol = 'symbol' : 'java.lang.String',
                            urn = 'urn' : 'java.lang.String',
                            quantityname = 'quantityName' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    thingid = 'thingId' : 'java.lang.Integer',
                    thinglabel = 'thingLabel' : 'java.lang.String',
                    thingcontext = 'thingContext' : ARRAY OF (
                        thingcontext = 'thingContext' : REGISTER OF (
                            type = 'type' : 'java.lang.String',
                            id = 'id' : 'java.lang.Integer',
                            urn = 'urn' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    timezone = 'timeZone' : 'java.lang.String',
                    timeseriesvalues = 'timeSeriesValues' : ARRAY OF (
                        timeseriesvalues = 'timeSeriesValues' : REGISTER OF (
                            starttime = 'startTime' : 'java.lang.String',
                            endtime = 'endTime' : 'java.lang.String',
                            keytime = 'keyTime' : 'java.lang.String',
                            value = 'value' : 'java.lang.Double',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    __typename = '__typename' : 'java.lang.String',
                    surfaceareavalue = 'surfaceAreaValue' : 'java.lang.Double'
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_asset_e2c40006-b166-40ef-90b6-1c2c8afaf99b"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_emcp_asset
    TUPLEROOT '/data'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTUxOTk4MjIsImp0aSI6ImM1YjQxMGFkLWE0YWMtNDAzYS1iNjJjLTA3YTc2OWZjOWQzYSIsImV4cCI6MTY1NTIwMzQyMiwiaXNzIjoiaHR0cHM6Ly9lY29zdHJ1eHVyZS1lbmVyZ3ktb3BlcmF0aW9uLXFhLmF6dXJlZmQubmV0Iiwic2NvcGUiOiIqIiwic3ViamVjdElkIjozNDAsIm1vZHVsZXMiOiIqIiwic3ViamVjdENvbmNlcHQiOiJ1cm46ZWRtLXNlOmVtOmNvcmU6b2M6c2VydmljZSIsInNvdXJjZSI6InVzZXJ2MSJ9.20ptqXFZ53c-0t-7k0Lac-uDSRJCExJveJ55XU0Dz4wI7i3lLmToOjr5VOpv9T3LxZ5PG6QULwegJ9uk9q01nXOpj4nE1NlYPs0GN1dNDVGmfwn2EJ6LyINymjDYxnKSFQM379JJDz5Uc6CNT5rsReneFtwIzfMyx0naxV2i2bAsHnugENtFQ3oCCm-UPRdnyeL1d4_PA22-kxncqc8CPB8v4gTtuPNYVdjH8EV0SAmF59yjaHsAnNYNRftDR22tuPiMNF4iR_TQRrNrq2mVRUQWkrF8vsKlsDJfY5LYMa_aG8bSWZucBqx1t8ZmaJBUPZ6tN8WCvFKp9_9mkV0rXJISa1kOSYp4nLBO-8MB15e35oYX_NghcTr4XELEk61INAqSNElTOKF9NnGTA9LS05ozvQhqsBZs9VxmTC7gbPkDfdQF00PDKllVAjnyOijz1PDULNPFWNzlyJH8AyWuk8GevR-RQaMAj6Xu1l-AvUNo_fgp2s2jd-V5aK1pIf6K2Y0Dznt_idJMSpb5kldfQr9kYlrB7UuMOMD9UnSpQ-kBJMLBa9tG8cJ0tfApYZOp7bcKfpmTSNbw2ybsDB_pCWHqRu6t4l_F0roUTnimB6nNQwom2UxMyvF8v66miWqrAPx0BTgo8qRBpd36LswWTQjwdrY9i2y6GUIk2Fm7584') EXTERN,
        assetid = 'assetId' : 'java.lang.String' (OBL) (DEFAULTVALUE='171220') EXTERN,
        things = 'things' : REGISTER OF (
            totalcount = 'totalCount' : 'java.lang.Integer',
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    __typename = '__typename' : 'java.lang.String',
                    id = 'id' : 'java.lang.Integer',
                    name = 'name' : 'java.lang.String',
                    label = 'label' : 'java.lang.String',
                    handle = 'handle' : 'java.lang.String',
                    concept = 'concept' : REGISTER OF (
                        __typename = '__typename' : 'java.lang.String',
                        urn = 'urn' : 'java.lang.String',
                        icon = 'icon' : 'java.lang.String',
                        label = 'label' : 'java.lang.String',
                        description = 'description' : 'java.lang.String',
                        conceptkind = 'conceptKind' : 'java.lang.String'
                    ),
                    pvalues = 'pvalues' : ARRAY OF (
                        pvalues = 'pvalues' : REGISTER OF (
                            __typename = '__typename' : 'java.lang.String',
                            pfval = 'pfval' : 'java.lang.String',
                            psval = 'psval' : 'java.lang.String',
                            property = 'property' : REGISTER OF (
                                __typename = '__typename' : 'java.lang.String',
                                name = 'name' : 'java.lang.String',
                                urn = 'urn' : 'java.lang.String',
                                label = 'label' : 'java.lang.String',
                                description = 'description' : 'java.lang.String',
                                mandatory = 'mandatory' : 'java.lang.String',
                                visible = 'visible' : 'java.lang.String',
                                example = 'example' : 'java.lang.String',
                                deffval = 'defFVal' : 'java.lang.String',
                                defsval = 'defSVal' : 'java.lang.String',
                                orderingtype = 'orderingType' : 'java.lang.String',
                                encodingtype = 'encodingType' : 'java.lang.String',
                                propertytype = 'propertyType' : 'java.lang.String',
                                accesstype = 'accessType' : 'java.lang.String',
                                facettype = 'facetType' : 'java.lang.String',
                                unit = 'unit' : REGISTER OF (
                                    __typename = '__typename' : 'java.lang.String',
                                    name = 'name' : 'java.lang.String',
                                    issi = 'isSi' : 'java.lang.String',
                                    quantityname = 'quantityName' : 'java.lang.String',
                                    symbol = 'symbol' : 'java.lang.String'
                                ),
                                enumurn = 'enumUrn' : 'java.lang.String',
                                defival = 'defIVal' : 'java.lang.Integer'
                            ),
                            pival = 'pival' : 'java.lang.Integer'
                        )
                    )
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_emcp_sitehierarchy
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_emcp_sitehierarchy
    TUPLEROOT '/data'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        emcp_token = 'emcp_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTcyODIwMzksImp0aSI6Ijk2Y2I5Y2U2LTM5N2UtNGQxMi1hNTFlLTQ0MGI5ZmVhODgzZSIsImV4cCI6MTY1NzI4NTYzOSwiaXNzIjoiaHR0cHM6Ly9lY29zdHJ1eHVyZS1lbmVyZ3ktb3BlcmF0aW9uLXFhLmF6dXJlZmQubmV0Iiwic3ViamVjdElkIjoxMzIxLCJzdWJqZWN0Q29uY2VwdCI6InVybjplZG0tc2U6ZW06Y29yZTpvYzpzZXJ2aWNlIiwic2NvcGUiOlt7ImlkIjo4NzI5MywidXJuIjoidXJuOmVkbS1zZTplbTpjb3JlOnByOnRlbmFudCIsInJvbGVJZCI6NCwiZXhwbGljaXRBY2Nlc3MiOnRydWV9XSwibW9kdWxlcyI6W3siaWQiOjEsIm5hbWUiOiJlZG1hIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6ZmFsc2UsInJlYXNvbiI6ImV4cGlyZWQifSx7ImlkIjoxLCJuYW1lIjoiZWRtYSIsInRlbmFudElkIjo4NzI5MywiaXNBY3RpdmUiOnRydWUsInJlYXNvbiI6bnVsbH0seyJpZCI6MSwibmFtZSI6ImVkbWEiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9LHsiaWQiOjIsIm5hbWUiOiJlY2MiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjpmYWxzZSwicmVhc29uIjoiZXhwaXJlZCJ9LHsiaWQiOjIsIm5hbWUiOiJlY2MiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9LHsiaWQiOjIsIm5hbWUiOiJlY2MiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9XSwic291cmNlIjoidXNlcnYyIn0.Eno8U8fgSITiHMWcsnRoPlp7NrcM92_bYC_C6zKdvcvLE5JY8v7STy_nUU9CoiTMwQzsWplPOaQo37HE33Vo8vLjxWri8jZ-QlgFH_YqzUHf8MEzkVNgGpHFHg59ElOwftjyqmFoR6LHKmWrkeEqAdq1nWLTGBgxjGvImAMRz68GcwgxBOkbvMkwNikpwxzHi_dbe5YrBJJmyMSUHDlSY_L_mSs3soHVE_qpI-GoBLcFVUVW399Vl2UPjpj_3eE2zaDtLc5u95dCJ9c1SFAszpe_9QOlLAQKkYFCwFzzCYrwv7JnxXk2mlwAiC2BHRu6dzwVK4-KGdcK3HmOn4dDp5PAWr4lluil_kbp_bc0CqGCevd-NhXo4nKQsXZvK3dlkTvs47bvjOGrN5sCg2_O5iaB9IpMXKCBl0GUNJdCOqm8UMKGHWIImrPq3gAjhgJ4ABv3090CPakTf9hBLmXDqnYsjqYuw9nPbx-2ymiTa-nEdkL7laOWtfehGFTmAO7x4Xvt6ls4Lg9QP2ro-cJ9No_YAA6KlMP3jEBxCSyhLEzvIyKIylxZKfXF0bejL22av_zqCRkaMDuXeVdIHZqSbnM-Lm1PQsFiyTwa-hxWBXYdnaQ1AOmAdK09M14RKkV6a07gairCAFTmi-MH5WtX95gfNYlltDR4jMvUDxjp0Jk') EXTERN,
        localsiteid = 'localsiteId' : 'java.lang.String' (OBL) (DEFAULTVALUE='87297') EXTERN,
        tenants = 'tenants' : ARRAY OF (
            tenants = 'tenants' : REGISTER OF (
                level = 'level' : 'java.lang.Integer',
                parentid = 'parentId' : 'java.lang.Integer',
                childsite = 'childSite' : REGISTER OF (
                    siteid = 'siteId' : 'java.lang.Integer',
                    name = 'name' : 'java.lang.String',
                    label = 'label' : 'java.lang.String',
                    tenantid = 'tenantId' : 'java.lang.Integer',
                    concept = 'concept' : REGISTER OF (
                        urn = 'urn' : 'java.lang.String',
                        type = 'type' : 'java.lang.String',
                        properties = 'properties' : ARRAY OF (
                            properties = 'properties' : REGISTER OF (
                                urn = 'urn' : 'java.lang.String',
                                __typename = '__typename' : 'java.lang.String'
                            )
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    __typename = '__typename' : 'java.lang.String'
                ),
                __typename = '__typename' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_emcp_timeseries_b0bf36ed-70f9-436f-ae26-55be1724cfe1"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_emcp_timeseries
    TUPLEROOT '/data'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' POST '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_emcp_timeseries_b0bf36ed-70f9-436f-ae26-55be1724cfe1.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (data = 'data' : REGISTER OF (
        access_token = 'access_token' : 'java.lang.String' (OBL) (DEFAULTVALUE='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjAwNzgyMDIsImp0aSI6IjUxODMzZDczLTcxNmEtNDYwMS1iOTA1LWU2ZmVlZGQ4NWU0MSIsImV4cCI6MTY2MDA4MTgwMiwiaXNzIjoiaHR0cHM6Ly9lY29zdHJ1eHVyZS1lbmVyZ3ktb3BlcmF0aW9uLXFhLmF6dXJlZmQubmV0Iiwic3ViamVjdElkIjoxMzIxLCJzdWJqZWN0Q29uY2VwdCI6InVybjplZG0tc2U6ZW06Y29yZTpvYzpzZXJ2aWNlIiwic2NvcGUiOlt7ImlkIjo4NzI5MywidXJuIjoidXJuOmVkbS1zZTplbTpjb3JlOnByOnRlbmFudCIsInJvbGVJZCI6NCwiZXhwbGljaXRBY2Nlc3MiOnRydWV9XSwibW9kdWxlcyI6W3siaWQiOjEsIm5hbWUiOiJlZG1hIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjoyLCJuYW1lIjoiZWNjIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjoyLCJuYW1lIjoiZWNjIiwidGVuYW50SWQiOjg3MjkzLCJpc0FjdGl2ZSI6dHJ1ZSwicmVhc29uIjpudWxsfSx7ImlkIjo2LCJuYW1lIjoic2VydmljZSBlbnRyYW5jZSBoZWFsdGgiLCJ0ZW5hbnRJZCI6ODcyOTMsImlzQWN0aXZlIjp0cnVlLCJyZWFzb24iOm51bGx9XSwic291cmNlIjoidXNlcnYyIn0.qgs6KNihjLi-ngS3gims1UehcacvfBku54d4-0OvAOyBKKemMms_nVRnFK-HJ5k1bML438S3pXYOc8oRF-k4HPGlq2UusbCcDfpX7IcXuLPdrpRLEtWHFkD7SBowkwSy8rNKXzCXb0fPLIMLVnO6UzchdTN5uM4Xvt-5eM_OE0bGDLLOyRrYsxcsSXZGF0d4dBrCYAicW2U1-4tLYx5IHYyJ5RTfXu_yt28BeG9OyITWnDnMGF6dA0T5muj5EWQcdWLIbnAVkHncrwpzfbpaOJnhhYsRWNIauDTnLqdgFmfOaBhENa1iYSDK_EnIiW7mdRUMyOxF823yBNoY9Edeh2-loMQTFr1yFOYHLFfgYMjq5Za9IJsj8xWIj4udsptHHW1h7j7hUjCkRTVfXwAXZFPZx5yhRwzJEpEDlJ12mk7k_bFEwJZ2INpLRRwl_1xOR7j-sRE8vE-5jGOaKDx0RGAgNncwFigaSlrgFouutDlhCAx6kRQnHIEDvGJ_eSs_Kno9TwBwtRdWaeJQmrUUlzmfO_UYwzSRXnoxMMkTXpt2hoNwAjr6WGqNgJmSo3h8pJ-sfGPXm_UB0MzGchVe_IcA1qB9oGi2JMkJTtBuIx50louQ9cFoD9gNU5STXZkC8bR27BGfOG54FpqKbZ2rszH6c-8UyN22mUL69z1Od48') EXTERN,
        starttime = 'starttime' : 'java.lang.String' (OBL) (DEFAULTVALUE='2022-07-24T18:30:00.000Z') EXTERN,
        endtime = 'endtime' : 'java.lang.String' (OBL) (DEFAULTVALUE='2022-07-25T18:30:00.000Z') EXTERN,
        assetid = 'assetid' : 'java.lang.String' (OBL) (DEFAULTVALUE='87364') EXTERN,
        rawtrenddata = 'rawTrendData' : REGISTER OF (
            totalcount = 'totalCount' : 'java.lang.Integer',
            items = 'items' : ARRAY OF (
                items = 'items' : REGISTER OF (
                    businessquantity = 'businessQuantity' : REGISTER OF (
                        name = 'name' : 'java.lang.String',
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    measure = 'measure' : REGISTER OF (
                        id = 'id' : 'java.lang.Integer',
                        label = 'label' : 'java.lang.String',
                        urn = 'urn' : 'java.lang.String',
                        unit = 'unit' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            name = 'name' : 'java.lang.String',
                            issi = 'isSi' : 'java.lang.String',
                            symbol = 'symbol' : 'java.lang.String',
                            urn = 'urn' : 'java.lang.String',
                            quantityname = 'quantityName' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String'
                        ),
                        __typename = '__typename' : 'java.lang.String'
                    ),
                    thingid = 'thingId' : 'java.lang.Integer',
                    thinglabel = 'thingLabel' : 'java.lang.String',
                    thingcontext = 'thingContext' : ARRAY OF (
                        thingcontext = 'thingContext' : REGISTER OF (
                            id = 'id' : 'java.lang.Integer',
                            type = 'type' : 'java.lang.String',
                            label = 'label' : 'java.lang.String',
                            name = 'name' : 'java.lang.String',
                            urn = 'urn' : 'java.lang.String',
                            __typename = '__typename' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        )
                    ),
                    timezone = 'timeZone' : 'java.lang.String',
                    timeseriesvalues = 'timeSeriesValues' : ARRAY OF (
                        timeseriesvalues = 'timeSeriesValues' : REGISTER OF (
                            timestamp = 'timestamp' : 'java.lang.String',
                            value = 'value' : 'java.lang.Double',
                            __typename = '__typename' : 'java.lang.String'
                        )
                    ),
                    __typename = '__typename' : 'java.lang.String'
                )
            ),
            __typename = '__typename' : 'java.lang.String'
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_ess_apis
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_ess_apis
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_ess_apis.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        path = 'PATH' : 'java.lang.String' (OBL) (DEFAULTVALUE='CostUsageAPI/CostAndUsageService.svc/CostUsageServices/CostUsage/List/BySite/json?ServiceId=291&FromMonth=03/2022&ToMonth=04/2022&UsageUOM=20&CurrencyUOM=30') EXTERN,
        serviceoutput = 'ServiceOutput' : ARRAY OF (
            serviceoutput = 'ServiceOutput' : REGISTER OF (
                __type = '__type' : 'java.lang.String',
                cost = 'Cost' : 'java.lang.Double',
                currencyname = 'CurrencyName' : 'java.lang.String',
                currencyuomid = 'CurrencyUOMId' : 'java.lang.Integer',
                divisionclienthierid = 'DivisionClientHierId' : 'java.lang.Integer',
                divisionname = 'DivisionName' : 'java.lang.String',
                month = 'Month' : 'java.lang.String',
                serviceid = 'ServiceId' : 'java.lang.Integer',
                servicename = 'ServiceName' : 'java.lang.String',
                serviceuomid = 'ServiceUOMId' : 'java.lang.Integer',
                siteclienthierid = 'SiteClientHierId' : 'java.lang.Integer',
                sitename = 'SiteName' : 'java.lang.String',
                uomname = 'UOMName' : 'java.lang.String',
                usage = 'Usage' : 'java.lang.Double'
            )
        ),
        errormessage = 'ErrorMessage' : 'java.lang.String',
        errorcode = 'ErrorCode' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_ess_apis_56a47961-252d-4cfd-a5c6-b69b0a08cf2b"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_ess_apis
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_ess_apis_56a47961-252d-4cfd-a5c6-b69b0a08cf2b.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        path = 'PATH' : 'java.lang.String' (OBL) (DEFAULTVALUE='MetricAPI/MetricService.svc/MetricServices/GetMetricData/V2/Json?ClientHierId=603882&beginDate=4/2022&endDate=7/2022') EXTERN,
        serviceoutput = 'ServiceOutput' : ARRAY OF (
            serviceoutput = 'ServiceOutput' : REGISTER OF (
                __type = '__type' : 'java.lang.String',
                attributefrequency = 'AttributeFrequency' : 'java.lang.String',
                attributename = 'AttributeName' : 'java.lang.String',
                attributetype = 'AttributeType' : 'java.lang.String',
                attributeuomname = 'AttributeUomName' : 'java.lang.String',
                attributevalue = 'AttributeValue' : 'java.lang.String',
                clientattributeid = 'ClientAttributeId' : 'java.lang.Integer',
                clienthierid = 'ClientHierId' : 'java.lang.Integer',
                enddt = 'EndDt' : 'java.lang.String',
                iscurrencyuom = 'IsCurrencyUOM' : 'java.lang.String',
                startdt = 'StartDt' : 'java.lang.String',
                attributevaluecount = 'AttributeValueCount' : 'java.lang.Integer'
            )
        ),
        errormessage = 'ErrorMessage' : 'java.lang.String',
        errorcode = 'ErrorCode' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_ess_apis_62e261d7-29e2-464a-9d78-e38106066bd3"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_ess_apis
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_ess_apis_62e261d7-29e2-464a-9d78-e38106066bd3.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        path = 'PATH' : 'java.lang.String' (OBL) (DEFAULTVALUE='CostUsageAPI/CostAndUsageService.svc/CostUsageServices/CostUsage/List/BySite/json?ServiceId=290&FromMonth=03/2022&ToMonth=04/2022&UsageUOM=20&CurrencyUOM=30') EXTERN,
        serviceoutput = 'ServiceOutput' : ARRAY OF (
            serviceoutput = 'ServiceOutput' : REGISTER OF (
                __type = '__type' : 'java.lang.String',
                currencyname = 'CurrencyName' : 'java.lang.String',
                currencyuomid = 'CurrencyUOMId' : 'java.lang.Integer',
                divisionclienthierid = 'DivisionClientHierId' : 'java.lang.Integer',
                divisionname = 'DivisionName' : 'java.lang.String',
                month = 'Month' : 'java.lang.String',
                serviceid = 'ServiceId' : 'java.lang.Integer',
                servicename = 'ServiceName' : 'java.lang.String',
                serviceuomid = 'ServiceUOMId' : 'java.lang.Integer',
                siteclienthierid = 'SiteClientHierId' : 'java.lang.Integer',
                sitename = 'SiteName' : 'java.lang.String',
                uomname = 'UOMName' : 'java.lang.String',
                usage = 'Usage' : 'java.lang.Double',
                cost = 'Cost' : 'java.lang.Double'
            )
        ),
        errormessage = 'ErrorMessage' : 'java.lang.String',
        errorcode = 'ErrorCode' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON "ds_ess_apis_7a46232d-a515-426d-a7b0-3286b8e8fe4e"
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_ess_apis
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_ess_apis_7a46232d-a515-426d-a7b0-3286b8e8fe4e.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        path = 'PATH' : 'java.lang.String' (OBL) (DEFAULTVALUE='CostUsageAPI/HierarchyService.svc/HierarchyServices/Account/List/json?ServiceId=290') EXTERN,
        serviceoutput = 'ServiceOutput' : ARRAY OF (
            serviceoutput = 'ServiceOutput' : REGISTER OF (
                __type = '__type' : 'java.lang.String',
                accountvendorname = 'AccountVendorName' : 'java.lang.String',
                accountnotexpected = 'Accountnotexpected' : 'java.lang.String',
                accountnotmanaged = 'Accountnotmanaged' : 'java.lang.String',
                supplieraccountbegindate = 'Supplieraccountbegindate' : 'java.lang.String',
                supplieraccountenddate = 'Supplieraccountenddate' : 'java.lang.String',
                accountid = 'AccountId' : 'java.lang.Integer',
                accountnumber = 'AccountNumber' : 'java.lang.String',
                accounttype = 'AccountType' : 'java.lang.String',
                siteclienthierid = 'SiteClientHierId' : 'java.lang.Integer',
                sitename = 'SiteName' : 'java.lang.String'
            )
        ),
        errormessage = 'ErrorMessage' : 'java.lang.String',
        errorcode = 'ErrorCode' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_ess_site_list_api_0
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_ess_site_list_api
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_ess_site_list_api_0.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        serviceoutput = 'ServiceOutput' : ARRAY OF (
            serviceoutput = 'ServiceOutput' : REGISTER OF (
                __type = '__type' : 'java.lang.String',
                city = 'City' : 'java.lang.String',
                countryname = 'CountryName' : 'java.lang.String',
                divisionclienthierid = 'DivisionClientHierID' : 'java.lang.Integer',
                divisionname = 'DivisionName' : 'java.lang.String',
                geolat = 'GeoLat' : 'java.lang.Double',
                geolong = 'GeoLong' : 'java.lang.Double',
                idmnodeid = 'IDMNodeId' : 'java.lang.Integer',
                siteaddressline1 = 'SiteAddressLine1' : 'java.lang.String',
                siteclienthierid = 'SiteClientHierID' : 'java.lang.Integer',
                siteclosed = 'SiteClosed' : 'java.lang.String',
                siteid = 'SiteID' : 'java.lang.Integer',
                sitename = 'SiteName' : 'java.lang.String',
                sitenotmanaged = 'SiteNotManaged' : 'java.lang.String',
                sitereferencenumber = 'SiteReferenceNumber' : 'java.lang.String',
                statename = 'StateName' : 'java.lang.String',
                timezone = 'TimeZone' : 'java.lang.String',
                weatherstationcode = 'WeatherStationCode' : 'java.lang.String',
                zipcode = 'Zipcode' : 'java.lang.String'
            )
        ),
        errormessage = 'ErrorMessage' : 'java.lang.String',
        errorcode = 'ErrorCode' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_ess_site_list_api_1
    FOLDER = '/3 - integration/api2/newdesign'
    DATASOURCENAME=ds_ess_site_list_api
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.3 - integration.folder.api2.folder.newdesign.views.json.ds_ess_site_list_api_1.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        serviceoutput = 'ServiceOutput' : ARRAY OF (
            serviceoutput = 'ServiceOutput' : REGISTER OF (
                __type = '__type' : 'java.lang.String',
                city = 'City' : 'java.lang.String',
                countryname = 'CountryName' : 'java.lang.String',
                divisionclienthierid = 'DivisionClientHierID' : 'java.lang.Integer',
                divisionname = 'DivisionName' : 'java.lang.String',
                geolat = 'GeoLat' : 'java.lang.Double',
                geolong = 'GeoLong' : 'java.lang.Double',
                idmnodeid = 'IDMNodeId' : 'java.lang.Integer',
                siteaddressline1 = 'SiteAddressLine1' : 'java.lang.String',
                siteclienthierid = 'SiteClientHierID' : 'java.lang.Integer',
                siteclosed = 'SiteClosed' : 'java.lang.String',
                siteid = 'SiteID' : 'java.lang.Integer',
                sitename = 'SiteName' : 'java.lang.String',
                sitenotmanaged = 'SiteNotManaged' : 'java.lang.String',
                sitereferencenumber = 'SiteReferenceNumber' : 'java.lang.String',
                statename = 'StateName' : 'java.lang.String',
                timezone = 'TimeZone' : 'java.lang.String',
                weatherstationcode = 'WeatherStationCode' : 'java.lang.String',
                zipcode = 'Zipcode' : 'java.lang.String'
            )
        ),
        errormessage = 'ErrorMessage' : 'java.lang.String',
        errorcode = 'ErrorCode' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER JSON ds_reltio_sitedetails
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_reltio_sitedetails
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.1 - connectivity.folder.2 - base views.views.json.ds_reltio_sitedetails.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        sitegoldenid = 'SITEGOLDENID' : 'java.lang.String' (OBL) (DEFAULTVALUE='0039256106
') EXTERN,
        results = 'results' : ARRAY OF (
            results = 'results' : REGISTER OF (
                publisherid = 'publisherId' : 'java.lang.String',
                publishercode = 'publisherCode' : 'java.lang.String',
                goldenid = 'goldenId' : 'java.lang.String',
                accountowner = 'accountOwner' : 'java.lang.String',
                accounttype = 'accountType' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                name = 'name' : 'java.lang.String',
                customerclassificationlevel1 = 'customerClassificationLevel1' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                customerclassificationlevel2 = 'customerClassificationLevel2' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                businessunitcode = 'businessUnitCode' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                marketsegment = 'marketSegment' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                marketsubsegment = 'marketSubSegment' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                accountlifecycle = 'accountLifeCycle' : REGISTER OF (
                    code = 'code' : 'java.lang.String',
                    value = 'value' : 'java.lang.String'
                ),
                deletionflag = 'deletionFlag' : 'java.lang.String',
                phone = 'phone' : ARRAY OF (
                    phone = 'phone' : REGISTER OF (
                        phonetype = 'phoneType' : 'java.lang.String',
                        phonenumber = 'phoneNumber' : 'java.lang.String'
                    )
                ),
                blockbfo = 'blockBFO' : 'java.lang.String',
                reltiocertified = 'reltioCertified' : 'java.lang.String',
                address = 'address' : REGISTER OF (
                    addresstype = 'addressType' : 'java.lang.String',
                    addressline1 = 'addressLine1' : 'java.lang.String',
                    city = 'city' : 'java.lang.String',
                    stateprovince = 'stateProvince' : REGISTER OF (
                        code = 'code' : 'java.lang.String',
                        value = 'value' : 'java.lang.String'
                    ),
                    country = 'country' : REGISTER OF (
                        code = 'code' : 'java.lang.String',
                        value = 'value' : 'java.lang.String'
                    ),
                    postalcode = 'postalCode' : 'java.lang.String'
                ),
                website = 'website' : 'java.lang.String'
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON emcp_token
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=emcp_token
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        token_type = 'token_type' : 'java.lang.String',
        access_token = 'access_token' : 'java.lang.String',
        expires_in = 'expires_in' : 'java.lang.Integer'
    )
    );

CREATE OR REPLACE WRAPPER JSON reltio_organization
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=reltio_organization
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        jsonarray = 'JSONArray' : ARRAY OF (
            jsonarray = 'JSONArray' : REGISTER OF (
                total = 'total' : 'java.lang.Integer',
                max = 'max' : 'java.lang.Integer',
                offset_0 = 'offset' : 'java.lang.Integer',
                results = 'results' : ARRAY OF (
                    results = 'results' : REGISTER OF (
                        goldenid = 'goldenId' : 'java.lang.String',
                        entityid = 'entityId' : 'java.lang.String',
                        createdby = 'createdBy' : 'java.lang.String',
                        createdtime = 'createdTime' : 'java.lang.String',
                        updatedby = 'updatedBy' : 'java.lang.String',
                        updatedtime = 'updatedTime' : 'java.lang.String',
                        name = 'name' : 'java.lang.String',
                        addresses = 'addresses' : ARRAY OF (
                            addresses = 'addresses' : REGISTER OF (
                                addresstype = 'addressType' : REGISTER OF (
                                    value = 'value' : 'java.lang.String'
                                ),
                                addressline1 = 'addressLine1' : 'java.lang.String',
                                postalcode = 'postalCode' : 'java.lang.String',
                                city = 'city' : 'java.lang.String',
                                country = 'country' : REGISTER OF (
                                    code = 'code' : 'java.lang.String',
                                    value = 'value' : 'java.lang.String'
                                ),
                                county = 'county' : 'java.lang.String',
                                pobox = 'poBox' : 'java.lang.String',
                                stateprovince = 'stateProvince' : 'java.lang.String'
                            )
                        ),
                        classificationlevel1 = 'classificationLevel1' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        leadingbusinessunit = 'leadingBusinessUnit' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        marketsegment = 'marketSegment' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        accountlifecycle = 'accountLifeCycle' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        accountowner = 'accountOwner' : 'java.lang.String',
                        accounttype = 'accountType' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        localorganizationname = 'localOrganizationName' : 'java.lang.String',
                        shortorganizationname = 'shortOrganizationName' : 'java.lang.String'
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON reltio_organization_new
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=reltio_organization
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        jsonarray = 'JSONArray' : ARRAY OF (
            jsonarray = 'JSONArray' : REGISTER OF (
                total = 'total' : 'java.lang.Integer',
                max = 'max' : 'java.lang.Integer',
                offset_0 = 'offset' : 'java.lang.Integer',
                results = 'results' : ARRAY OF (
                    results = 'results' : REGISTER OF (
                        goldenid = 'goldenId' : 'java.lang.String',
                        entityid = 'entityId' : 'java.lang.String',
                        createdby = 'createdBy' : 'java.lang.String',
                        createdtime = 'createdTime' : 'java.lang.String',
                        updatedby = 'updatedBy' : 'java.lang.String',
                        updatedtime = 'updatedTime' : 'java.lang.String',
                        name = 'name' : 'java.lang.String',
                        addresses = 'addresses' : ARRAY OF (
                            addresses = 'addresses' : REGISTER OF (
                                addresstype = 'addressType' : REGISTER OF (
                                    value = 'value' : 'java.lang.String'
                                ),
                                addressline1 = 'addressLine1' : 'java.lang.String',
                                postalcode = 'postalCode' : 'java.lang.String',
                                city = 'city' : 'java.lang.String',
                                country = 'country' : REGISTER OF (
                                    code = 'code' : 'java.lang.String',
                                    value = 'value' : 'java.lang.String'
                                ),
                                county = 'county' : 'java.lang.String',
                                street = 'street' : 'java.lang.String',
                                pobox = 'poBox' : 'java.lang.String',
                                stateprovince = 'stateProvince' : 'java.lang.String',
                                premisenumber = 'premiseNumber' : 'java.lang.String'
                            )
                        ),
                        classificationlevel1 = 'classificationLevel1' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        leadingbusinessunit = 'leadingBusinessUnit' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        marketsegment = 'marketSegment' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        accountlifecycle = 'accountLifeCycle' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        accountowner = 'accountOwner' : 'java.lang.String',
                        accounttype = 'accountType' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        localorganizationname = 'localOrganizationName' : 'java.lang.String',
                        shortorganizationname = 'shortOrganizationName' : 'java.lang.String'
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON reltion_crossref
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_reltion_crossref
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        jsonarray = 'JSONArray' : ARRAY OF (
            jsonarray = 'JSONArray' : REGISTER OF (
                source = 'source' : REGISTER OF (
                    publishercode = 'publisherCode' : 'java.lang.String',
                    id = 'id' : 'java.lang.String',
                    reltioid = 'reltioId' : 'java.lang.String',
                    reltiogoldenid = 'reltioGoldenId' : 'java.lang.String'
                ),
                target = 'target' : ARRAY OF (
                    target = 'target' : REGISTER OF (
                        publishercode = 'publisherCode' : 'java.lang.String',
                        id = 'id' : 'java.lang.String',
                        recordtype = 'recordType' : 'java.lang.String',
                        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String',
                        deletionflag = 'deletionFlag' : 'java.lang.String',
                        accounttype = 'accountType' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        classificationlevel1 = 'classificationLevel1' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        name = 'name' : REGISTER OF (
                            orgname = 'orgName' : 'java.lang.String'
                        )
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON site_metadata_golden_id
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_reltio_site_metadata_golden_id
    TUPLEROOT '/JSONFile'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        site = 'SITE' : 'java.lang.String' (OBL) (DEFAULTVALUE='0003514804') EXTERN,
        jsonarray = 'JSONArray' : ARRAY OF (
            jsonarray = 'JSONArray' : REGISTER OF (
                source = 'source' : REGISTER OF (
                    publishercode = 'publisherCode' : 'java.lang.String',
                    id = 'id' : 'java.lang.String',
                    reltioid = 'reltioId' : 'java.lang.String',
                    reltiogoldenid = 'reltioGoldenId' : 'java.lang.String'
                ),
                target = 'target' : ARRAY OF (
                    target = 'target' : REGISTER OF (
                        publishercode = 'publisherCode' : 'java.lang.String',
                        id = 'id' : 'java.lang.String',
                        recordtype = 'recordType' : 'java.lang.String',
                        reltiogoldenid = 'reltioGoldenId' : 'java.lang.String',
                        deletionflag = 'deletionFlag' : 'java.lang.String',
                        accounttype = 'accountType' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        classificationlevel1 = 'classificationLevel1' : REGISTER OF (
                            code = 'code' : 'java.lang.String',
                            value = 'value' : 'java.lang.String'
                        ),
                        name = 'name' : REGISTER OF (
                            orgname = 'orgName' : 'java.lang.String'
                        )
                    )
                )
            )
        )
    )
    );

CREATE OR REPLACE WRAPPER JSON test_alm_ping
    FOLDER = '/3 - integration/api1/archive'
    DATASOURCENAME=test_alm_ping
    TUPLEROOT '/JSONFile'
    ROUTE HTTP 'http.CommonsHttpClientConnection,120000' GET '${databases.datafederation.folder.3 - integration.folder.api1.folder.archive.views.json.test_alm_ping.ROUTE.HTTP.URL}'
    OUTPUTSCHEMA (jsonfile = 'JSONFile' : REGISTER OF (
        hello = 'hello' : 'java.lang.String'
    )
    );

CREATE OR REPLACE WRAPPER WS getproductdetailbycommercialref
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_bsl_soap
    SERVICENAME='ProductService'
    PORTNAME='ProductServiceImplPort'
    OPERATIONNAME='getProductDetailByCommercialRef'
    INPUTMESSAGE='getProductDetailByCommercialRef'
    OUTPUTMESSAGE='getProductDetailByCommercialRefResponse'
    IMPLEMENTATION=''
    BASE_PACKAGE='com.denodo.wrapper.ws1653559074574'
    OUTPUTSCHEMA (
    parameters = '$$0' PARAMETER_MODE 'IN' QNAME '{{http://product.service.oreo.schneider.com/}}getProductDetailByCommercialRef' JAVA_MAPPING 'com.denodo.wrapper.ws1653559074574.GetProductDetailByCommercialRef': REGISTER OF (
        scope = 'scope' QNAME 'scopeBean' JAVA_MAPPING 'com.denodo.wrapper.ws1653559074574.ScopeBean': REGISTER OF (
            brand='brand' (OPT),
            channel='channel' (OPT),
            country='country' (OPT),
            function='function' (OPT),
            markets='markets' (OPT),
            privacy='privacy' (OPT),
            program='program' (OPT),
            project='project' (OPT)
        ),
        locale = 'locale' QNAME 'localeBean' JAVA_MAPPING 'com.denodo.wrapper.ws1653559074574.LocaleBean': REGISTER OF (
            isocountry='isoCountry' (OBL),
            isolanguage='isoLanguage' (OBL)
        ),
        semanticcharacteristics='semanticCharacteristics' (OPT),
        commercialref='commercialRef' (OBL),
        rangeid='rangeId' (OPT),
        datasource='dataSource' (OPT),
        version='version' (OPT),
        showproductvaluedetail='showProductValueDetail' (OPT),
        scopeindependant='scopeIndependant' (OPT),
        displayallhighlightedchar='displayAllHighlightedChar' (OPT),
        fetchspecificcountries='fetchSpecificCountries' (OPT),
        fetchtaggedchars='fetchTaggedChars' (OPT),
        fetchfeatureandbenefits='fetchFeatureAndBenefits' (OPT),
        query = 'query' QNAME 'string' JAVA_MAPPING 'java.lang.String': ARRAY OF (
            string = 'String' JAVA_MAPPING 'java.lang.String': REGISTER OF (
                query='query' (OBL)
            )
        )
    ),
    return = '$$$$': REGISTER OF (
        productbean = 'productBean': REGISTER OF (
            characteristiccategories = 'characteristicCategories': ARRAY OF (
                characteristiccategorybean = 'CharacteristicCategoryBean': REGISTER OF (
                    characteristics = 'characteristics': ARRAY OF (
                        characteristicbean = 'CharacteristicBean': REGISTER OF (
                            tag = 'tag': ARRAY OF (
                                characteristictagbean = 'CharacteristicTagBean': REGISTER OF (
                                    value='value'
                                )
                            ),
                            description='description',
                            values = 'values': ARRAY OF (
                                valuebean = 'ValueBean': REGISTER OF (
                                    externeturl='externetUrl',
                                    internaldocoid='internaldocOid',
                                    labelurl='labelUrl',
                                    valuelines = 'valueLines': ARRAY OF (
                                        valueline = 'ValueLine': REGISTER OF (
                                            valuationlabel='valuationLabel',
                                            valuelineitems = 'valueLineItems': ARRAY OF (
                                                valuelineitem = 'ValueLineItem': REGISTER OF (
                                                    valuationlabel='valuationLabel',
                                                    charid='charId',
                                                    charkey='charKey',
                                                    valuekey='valueKey',
                                                    displayorder='displayOrder',
                                                    valuationid='valuationId'
                                                )
                                            ),
                                            charid='charId',
                                            displayorder='displayOrder',
                                            lockcase='lockCase',
                                            valuationid='valuationId'
                                        )
                                    ),
                                    keepvalue='keepValue',
                                    symbolictobedisplayed='symbolicToBeDisplayed',
                                    textafter='textAfter',
                                    textbefore='textBefore',
                                    charkey='charKey',
                                    countryiso='countryIso',
                                    countryname='countryName',
                                    countryoid='countryOid',
                                    lockcase='lockCase',
                                    oid='oid',
                                    unity='unity',
                                    unityid='unityId',
                                    value='value',
                                    valueid='valueId',
                                    valuerendition='valueRendition',
                                    visible='visible'
                                )
                            ),
                            charid='charId',
                            charkey='charKey',
                            name='name',
                            oid='oid',
                            showninproductdetails='shownInProductDetails',
                            showinproductlist='showInProductList',
                            displayname='displayName'
                        )
                    ),
                    name='name',
                    oid='oid'
                )
            ),
            commercialreference='commercialReference',
            commercializedproduct = 'commercializedProduct': REGISTER OF (
                brand='brand',
                commstatus='commStatus',
                commercialisationdate='commercialisationDate',
                commercialized='commercialized',
                deliverytime='deliveryTime',
                description='description',
                endofcommercialisationdate='endOfCommercialisationDate',
                endofservicedate='endOfServiceDate',
                localedistributorcode='localeDistributorCode',
                localesalestatus='localeSaleStatus',
                localestockstatus='localeStockStatus',
                nbdeliverydays='nbDeliveryDays',
                price = 'price': REGISTER OF (
                    comments='comments',
                    currency='currency',
                    price='price',
                    validfrom='validFrom',
                    validto='validTo',
                    value='value',
                    oid='oid'
                ),
                oid='oid'
            ),
            description='description',
            documentoids = 'documentOids': ARRAY OF (
                long = 'long': REGISTER OF (
                    documentoids='documentOids'
                )
            ),
            eancode='eanCode',
            epdsdocumentoid='epdsDocumentOid',
            greenpremium='greenPremium',
            highligthedcharacteristics = 'highligthedCharacteristics': ARRAY OF (
                characteristicbean = 'CharacteristicBean': REGISTER OF (
                    tag = 'tag': ARRAY OF (
                        characteristictagbean = 'CharacteristicTagBean': REGISTER OF (
                            value='value'
                        )
                    ),
                    description='description',
                    values = 'values': ARRAY OF (
                        valuebean = 'ValueBean': REGISTER OF (
                            externeturl='externetUrl',
                            internaldocoid='internaldocOid',
                            labelurl='labelUrl',
                            valuelines = 'valueLines': ARRAY OF (
                                valueline = 'ValueLine': REGISTER OF (
                                    valuationlabel='valuationLabel',
                                    valuelineitems = 'valueLineItems': ARRAY OF (
                                        valuelineitem = 'ValueLineItem': REGISTER OF (
                                            valuationlabel='valuationLabel',
                                            charid='charId',
                                            charkey='charKey',
                                            valuekey='valueKey',
                                            displayorder='displayOrder',
                                            valuationid='valuationId'
                                        )
                                    ),
                                    charid='charId',
                                    displayorder='displayOrder',
                                    lockcase='lockCase',
                                    valuationid='valuationId'
                                )
                            ),
                            keepvalue='keepValue',
                            symbolictobedisplayed='symbolicToBeDisplayed',
                            textafter='textAfter',
                            textbefore='textBefore',
                            charkey='charKey',
                            countryiso='countryIso',
                            countryname='countryName',
                            countryoid='countryOid',
                            lockcase='lockCase',
                            oid='oid',
                            unity='unity',
                            unityid='unityId',
                            value='value',
                            valueid='valueId',
                            valuerendition='valueRendition',
                            visible='visible'
                        )
                    ),
                    charid='charId',
                    charkey='charKey',
                    name='name',
                    oid='oid',
                    showninproductdetails='shownInProductDetails',
                    showinproductlist='showInProductList',
                    displayname='displayName'
                )
            ),
            logodocumentoid='logoDocumentOid',
            longdescription='longDescription',
            parentnodeoid='parentNodeOid',
            parentrangeid='parentRangeId',
            parentrangeoid='parentRangeOid',
            picturedocumentoid='pictureDocumentOid',
            parents = 'parents': ARRAY OF (
                productparentbean = 'ProductParentBean': REGISTER OF (
                    nodeoid='nodeOid',
                    rangeid='rangeId',
                    rangeoid='rangeOid'
                )
            ),
            ranges = 'ranges': ARRAY OF (
                rangelightbean = 'RangeLightBean': REGISTER OF (
                    name='name',
                    id='id',
                    oid='oid'
                )
            ),
            semanticcharacteristics = 'semanticCharacteristics': ARRAY OF (
                characteristicbean = 'CharacteristicBean': REGISTER OF (
                    tag = 'tag': ARRAY OF (
                        characteristictagbean = 'CharacteristicTagBean': REGISTER OF (
                            value='value'
                        )
                    ),
                    description='description',
                    values = 'values': ARRAY OF (
                        valuebean = 'ValueBean': REGISTER OF (
                            externeturl='externetUrl',
                            internaldocoid='internaldocOid',
                            labelurl='labelUrl',
                            valuelines = 'valueLines': ARRAY OF (
                                valueline = 'ValueLine': REGISTER OF (
                                    valuationlabel='valuationLabel',
                                    valuelineitems = 'valueLineItems': ARRAY OF (
                                        valuelineitem = 'ValueLineItem': REGISTER OF (
                                            valuationlabel='valuationLabel',
                                            charid='charId',
                                            charkey='charKey',
                                            valuekey='valueKey',
                                            displayorder='displayOrder',
                                            valuationid='valuationId'
                                        )
                                    ),
                                    charid='charId',
                                    displayorder='displayOrder',
                                    lockcase='lockCase',
                                    valuationid='valuationId'
                                )
                            ),
                            keepvalue='keepValue',
                            symbolictobedisplayed='symbolicToBeDisplayed',
                            textafter='textAfter',
                            textbefore='textBefore',
                            charkey='charKey',
                            countryiso='countryIso',
                            countryname='countryName',
                            countryoid='countryOid',
                            lockcase='lockCase',
                            oid='oid',
                            unity='unity',
                            unityid='unityId',
                            value='value',
                            valueid='valueId',
                            valuerendition='valueRendition',
                            visible='visible'
                        )
                    ),
                    charid='charId',
                    charkey='charKey',
                    name='name',
                    oid='oid',
                    showninproductdetails='shownInProductDetails',
                    showinproductlist='showInProductList',
                    displayname='displayName'
                )
            ),
            shortdescription='shortDescription',
            documentreferences = 'documentReferences': ARRAY OF (
                documentreferencebean = 'DocumentReferenceBean': REGISTER OF (
                    _value='_value',
                    doctype='docType',
                    doctypeoid='docTypeOid',
                    scoped='scoped',
                    bannerurl='bannerURL'
                )
            ),
            picturedocumentreference='pictureDocumentReference',
            pictures = 'pictures': ARRAY OF (
                picturebean = 'PictureBean': REGISTER OF (
                    description='description',
                    id='id',
                    picturedocumentoid='pictureDocumentOid',
                    picturedocumentreference='pictureDocumentReference'
                )
            ),
            type='type',
            subtype='subType',
            specificcountries = 'specificCountries': ARRAY OF (
                specificcountriesbean = 'SpecificCountriesBean': REGISTER OF (
                    isocountry='isoCountry',
                    publicationdate='publicationdate'
                )
            ),
            featureandbenefitlist = 'featureAndBenefitList': ARRAY OF (
                productfeaturebenefitbean = 'ProductFeatureBenefitBean': REGISTER OF (
                    categoryid='categoryId',
                    featureandbenefitid='featureAndBenefitId',
                    featurename='featureName',
                    benefitvalue='benefitValue',
                    category='category'
                )
            ),
            globalstatus='globalStatus',
            oid='oid',
            productid='productId'
        )
    )
    );

CREATE OR REPLACE WRAPPER WS getproductdetailbycommercialrefv002
    FOLDER = '/1 - connectivity/2 - base views'
    DATASOURCENAME=ds_bsl_soap
    SERVICENAME='ProductService'
    PORTNAME='ProductServiceImplPort'
    OPERATIONNAME='getProductDetailByCommercialRefV002'
    INPUTMESSAGE='getProductDetailByCommercialRefV002'
    OUTPUTMESSAGE='getProductDetailByCommercialRefV002Response'
    IMPLEMENTATION=''
    BASE_PACKAGE='com.denodo.wrapper.ws1653460871260'
    OUTPUTSCHEMA (
    parameters = '$$0' PARAMETER_MODE 'IN' QNAME '{{http://product.service.oreo.schneider.com/}}getProductDetailByCommercialRefV002' JAVA_MAPPING 'com.denodo.wrapper.ws1653460871260.GetProductDetailByCommercialRefV002': REGISTER OF (
        scope = 'scope' QNAME 'scopeBean' JAVA_MAPPING 'com.denodo.wrapper.ws1653460871260.ScopeBean': REGISTER OF (
            brand='brand' (OPT),
            channel='channel' (OPT),
            country='country' (OPT),
            function='function' (OPT),
            markets='markets' (OPT),
            privacy='privacy' (OPT),
            program='program' (OPT),
            project='project' (OPT)
        ),
        locale = 'locale' QNAME 'localeBean' JAVA_MAPPING 'com.denodo.wrapper.ws1653460871260.LocaleBean': REGISTER OF (
            isocountry='isoCountry' (OBL),
            isolanguage='isoLanguage' (OBL)
        ),
        semanticcharacteristics='semanticCharacteristics' (OPT),
        commercialref='commercialRef' (OBL),
        rangeid='rangeId' (OPT),
        showproductvaluedetail='showProductValueDetail' (OPT),
        scopeindependant='scopeIndependant' (OPT),
        displayallhighlightedchar='displayAllHighlightedChar' (OPT),
        fetchspecificcountries='fetchSpecificCountries' (OPT),
        fetchtaggedchars='fetchTaggedChars' (OPT),
        fetchfeatureandbenefits='fetchFeatureAndBenefits' (OPT)
    ),
    return = '$$$$': REGISTER OF (
        productbean = 'productBean': REGISTER OF (
            characteristiccategories = 'characteristicCategories': ARRAY OF (
                characteristiccategorybean = 'CharacteristicCategoryBean': REGISTER OF (
                    characteristics = 'characteristics': ARRAY OF (
                        characteristicbean = 'CharacteristicBean': REGISTER OF (
                            tag = 'tag': ARRAY OF (
                                characteristictagbean = 'CharacteristicTagBean': REGISTER OF (
                                    value='value'
                                )
                            ),
                            description='description',
                            values = 'values': ARRAY OF (
                                valuebean = 'ValueBean': REGISTER OF (
                                    externeturl='externetUrl',
                                    internaldocoid='internaldocOid',
                                    labelurl='labelUrl',
                                    valuelines = 'valueLines': ARRAY OF (
                                        valueline = 'ValueLine': REGISTER OF (
                                            valuationlabel='valuationLabel',
                                            valuelineitems = 'valueLineItems': ARRAY OF (
                                                valuelineitem = 'ValueLineItem': REGISTER OF (
                                                    valuationlabel='valuationLabel',
                                                    charid='charId',
                                                    charkey='charKey',
                                                    valuekey='valueKey',
                                                    displayorder='displayOrder',
                                                    valuationid='valuationId'
                                                )
                                            ),
                                            charid='charId',
                                            displayorder='displayOrder',
                                            lockcase='lockCase',
                                            valuationid='valuationId'
                                        )
                                    ),
                                    keepvalue='keepValue',
                                    symbolictobedisplayed='symbolicToBeDisplayed',
                                    textafter='textAfter',
                                    textbefore='textBefore',
                                    charkey='charKey',
                                    countryiso='countryIso',
                                    countryname='countryName',
                                    countryoid='countryOid',
                                    lockcase='lockCase',
                                    oid='oid',
                                    unity='unity',
                                    unityid='unityId',
                                    value='value',
                                    valueid='valueId',
                                    valuerendition='valueRendition',
                                    visible='visible'
                                )
                            ),
                            charid='charId',
                            charkey='charKey',
                            name='name',
                            oid='oid',
                            showninproductdetails='shownInProductDetails',
                            showinproductlist='showInProductList',
                            displayname='displayName'
                        )
                    ),
                    name='name',
                    oid='oid'
                )
            ),
            commercialreference='commercialReference',
            commercializedproduct = 'commercializedProduct': REGISTER OF (
                brand='brand',
                commstatus='commStatus',
                commercialisationdate='commercialisationDate',
                commercialized='commercialized',
                deliverytime='deliveryTime',
                description='description',
                endofcommercialisationdate='endOfCommercialisationDate',
                endofservicedate='endOfServiceDate',
                localedistributorcode='localeDistributorCode',
                localesalestatus='localeSaleStatus',
                localestockstatus='localeStockStatus',
                nbdeliverydays='nbDeliveryDays',
                price = 'price': REGISTER OF (
                    comments='comments',
                    currency='currency',
                    price='price',
                    validfrom='validFrom',
                    validto='validTo',
                    value='value',
                    oid='oid'
                ),
                oid='oid'
            ),
            description='description',
            documentoids = 'documentOids': ARRAY OF (
                long = 'long': REGISTER OF (
                    documentoids='documentOids'
                )
            ),
            eancode='eanCode',
            epdsdocumentoid='epdsDocumentOid',
            greenpremium='greenPremium',
            highligthedcharacteristics = 'highligthedCharacteristics': ARRAY OF (
                characteristicbean = 'CharacteristicBean': REGISTER OF (
                    tag = 'tag': ARRAY OF (
                        characteristictagbean = 'CharacteristicTagBean': REGISTER OF (
                            value='value'
                        )
                    ),
                    description='description',
                    values = 'values': ARRAY OF (
                        valuebean = 'ValueBean': REGISTER OF (
                            externeturl='externetUrl',
                            internaldocoid='internaldocOid',
                            labelurl='labelUrl',
                            valuelines = 'valueLines': ARRAY OF (
                                valueline = 'ValueLine': REGISTER OF (
                                    valuationlabel='valuationLabel',
                                    valuelineitems = 'valueLineItems': ARRAY OF (
                                        valuelineitem = 'ValueLineItem': REGISTER OF (
                                            valuationlabel='valuationLabel',
                                            charid='charId',
                                            charkey='charKey',
                                            valuekey='valueKey',
                                            displayorder='displayOrder',
                                            valuationid='valuationId'
                                        )
                                    ),
                                    charid='charId',
                                    displayorder='displayOrder',
                                    lockcase='lockCase',
                                    valuationid='valuationId'
                                )
                            ),
                            keepvalue='keepValue',
                            symbolictobedisplayed='symbolicToBeDisplayed',
                            textafter='textAfter',
                            textbefore='textBefore',
                            charkey='charKey',
                            countryiso='countryIso',
                            countryname='countryName',
                            countryoid='countryOid',
                            lockcase='lockCase',
                            oid='oid',
                            unity='unity',
                            unityid='unityId',
                            value='value',
                            valueid='valueId',
                            valuerendition='valueRendition',
                            visible='visible'
                        )
                    ),
                    charid='charId',
                    charkey='charKey',
                    name='name',
                    oid='oid',
                    showninproductdetails='shownInProductDetails',
                    showinproductlist='showInProductList',
                    displayname='displayName'
                )
            ),
            logodocumentoid='logoDocumentOid',
            longdescription='longDescription',
            parentnodeoid='parentNodeOid',
            parentrangeid='parentRangeId',
            parentrangeoid='parentRangeOid',
            picturedocumentoid='pictureDocumentOid',
            parents = 'parents': ARRAY OF (
                productparentbean = 'ProductParentBean': REGISTER OF (
                    nodeoid='nodeOid',
                    rangeid='rangeId',
                    rangeoid='rangeOid'
                )
            ),
            ranges = 'ranges': ARRAY OF (
                rangelightbean = 'RangeLightBean': REGISTER OF (
                    name='name',
                    id='id',
                    oid='oid'
                )
            ),
            semanticcharacteristics = 'semanticCharacteristics': ARRAY OF (
                characteristicbean = 'CharacteristicBean': REGISTER OF (
                    tag = 'tag': ARRAY OF (
                        characteristictagbean = 'CharacteristicTagBean': REGISTER OF (
                            value='value'
                        )
                    ),
                    description='description',
                    values = 'values': ARRAY OF (
                        valuebean = 'ValueBean': REGISTER OF (
                            externeturl='externetUrl',
                            internaldocoid='internaldocOid',
                            labelurl='labelUrl',
                            valuelines = 'valueLines': ARRAY OF (
                                valueline = 'ValueLine': REGISTER OF (
                                    valuationlabel='valuationLabel',
                                    valuelineitems = 'valueLineItems': ARRAY OF (
                                        valuelineitem = 'ValueLineItem': REGISTER OF (
                                            valuationlabel='valuationLabel',
                                            charid='charId',
                                            charkey='charKey',
                                            valuekey='valueKey',
                                            displayorder='displayOrder',
                                            valuationid='valuationId'
                                        )
                                    ),
                                    charid='charId',
                                    displayorder='displayOrder',
                                    lockcase='lockCase',
                                    valuationid='valuationId'
                                )
                            ),
                            keepvalue='keepValue',
                            symbolictobedisplayed='symbolicToBeDisplayed',
                            textafter='textAfter',
                            textbefore='textBefore',
                            charkey='charKey',
                            countryiso='countryIso',
                            countryname='countryName',
                            countryoid='countryOid',
                            lockcase='lockCase',
                            oid='oid',
                            unity='unity',
                            unityid='unityId',
                            value='value',
                            valueid='valueId',
                            valuerendition='valueRendition',
                            visible='visible'
                        )
                    ),
                    charid='charId',
                    charkey='charKey',
                    name='name',
                    oid='oid',
                    showninproductdetails='shownInProductDetails',
                    showinproductlist='showInProductList',
                    displayname='displayName'
                )
            ),
            shortdescription='shortDescription',
            documentreferences = 'documentReferences': ARRAY OF (
                documentreferencebean = 'DocumentReferenceBean': REGISTER OF (
                    _value='_value',
                    doctype='docType',
                    doctypeoid='docTypeOid',
                    scoped='scoped',
                    bannerurl='bannerURL'
                )
            ),
            picturedocumentreference='pictureDocumentReference',
            pictures = 'pictures': ARRAY OF (
                picturebean = 'PictureBean': REGISTER OF (
                    description='description',
                    id='id',
                    picturedocumentoid='pictureDocumentOid',
                    picturedocumentreference='pictureDocumentReference'
                )
            ),
            type='type',
            subtype='subType',
            specificcountries = 'specificCountries': ARRAY OF (
                specificcountriesbean = 'SpecificCountriesBean': REGISTER OF (
                    isocountry='isoCountry',
                    publicationdate='publicationdate'
                )
            ),
            featureandbenefitlist = 'featureAndBenefitList': ARRAY OF (
                productfeaturebenefitbean = 'ProductFeatureBenefitBean': REGISTER OF (
                    categoryid='categoryId',
                    featureandbenefitid='featureAndBenefitId',
                    featurename='featureName',
                    benefitvalue='benefitValue',
                    category='category'
                )
            ),
            globalstatus='globalStatus',
            oid='oid',
            productid='productId'
        )
    )
    );

# #######################################
# STORED PROCEDURES
# #######################################
# No stored procedures
# #######################################
# TYPES
# #######################################
CREATE OR REPLACE TYPE _cf_unpivotregister_register_array_record AS REGISTER OF (key:text, value:text);

CREATE OR REPLACE TYPE _register_accountid_accountvendorname_supplieraccountbegindate_supplieraccountenddate_accounttype AS REGISTER OF (accountid:int, accountvendorname:text, supplieraccountbegindate:text, supplieraccountenddate:text, accounttype:text);

CREATE OR REPLACE TYPE _register_addressline1_city_state_postalcode_country_addresstype AS REGISTER OF (addressline1:text, city:text, state:text, postalcode:text, country:text, addresstype:text);

CREATE OR REPLACE TYPE _register_almassetidentifier_parentassetid_nodepath AS REGISTER OF (almassetidentifier:text, parentassetid:text, nodepath:text);

CREATE OR REPLACE TYPE _register_attributename_attributevalue_startdt_enddt_attributetype AS REGISTER OF (attributename:text, attributevalue:text, startdt:text, enddt:text, attributetype:text);

CREATE OR REPLACE TYPE _register_attributes_array_attributes_name_value AS REGISTER OF (attributes_array_attributes_name:text, value:text);

CREATE OR REPLACE TYPE _register_brand_range_reference_description_imageurl AS REGISTER OF (brand:text, range:text, reference:text, description:text, imageurl:text);

CREATE OR REPLACE TYPE _register_cost AS REGISTER OF (cost:text);

CREATE OR REPLACE TYPE _register_cost_currencyname_month_servicename_usage AS REGISTER OF (cost:double, currencyname:text, month:text, servicename:text, usage:double);

CREATE OR REPLACE TYPE _register_id_locationtype_label_parentid AS REGISTER OF (id:text, locationtype:text, label:text, parentid:int);

CREATE OR REPLACE TYPE _register_meter_meteraddress_metercity_meterstate_metercountry_meterzip_siteid_reltioid_client_accou AS REGISTER OF (meter:text, meteraddress:text, metercity:text, meterstate:text, metercountry:text, meterzip:text, siteid:text, reltioid:text, client:text, account:text);

CREATE OR REPLACE TYPE _register_month_usage_cost AS REGISTER OF (month:text, usage:double, cost:double);

CREATE OR REPLACE TYPE "_register_month_usage_cost_7193da91-a4fa-4570-9ca4-30ca6a0759ac" AS REGISTER OF (month:text, usage:double, cost:text);

CREATE OR REPLACE TYPE _register_name_value AS REGISTER OF (name:text, value:text);

CREATE OR REPLACE TYPE _register_publishercode_equipmenttype_commissioningdate_assetinstallationtype_createdby_lifecyclesta AS REGISTER OF (publishercode:text, equipmenttype:text, commissioningdate:text, assetinstallationtype:text, createdby:text, lifecyclestatus:text, commref:text, serialnumber:text, brand:text, devicetype:text);

CREATE OR REPLACE TYPE _register_siteaddressline1_city_statename_zipcode_countryname AS REGISTER OF (siteaddressline1:text, city:text, statename:text, zipcode:text, countryname:text);

CREATE OR REPLACE TYPE _register_siteid_source AS REGISTER OF (siteid:text, source:text);

CREATE OR REPLACE TYPE _register_source_id AS REGISTER OF (source:text, id:text);

CREATE OR REPLACE TYPE _register_source_siteid AS REGISTER OF (source:text, siteid:text);

CREATE OR REPLACE TYPE _register_sourceid_sourcename AS REGISTER OF (sourceid:text, sourcename:text);

CREATE OR REPLACE TYPE _register_sourcename_sourceid AS REGISTER OF (sourcename:text, sourceid:text);

CREATE OR REPLACE TYPE _register_street_city_postalcode_country_type AS REGISTER OF (street:text, city:text, postalcode:text, country:text, type:text);

CREATE OR REPLACE TYPE _register_street_city_state_country_postalcode_latitude_longitude AS REGISTER OF (street:text, city:text, state:text, country:text, postalcode:text, latitude:double, longitude:double);

CREATE OR REPLACE TYPE _register_sublocationid_locationtype_sublocationname_parentid AS REGISTER OF (sublocationid:text, locationtype:text, sublocationname:text, parentid:text);

CREATE OR REPLACE TYPE _register_sublocationid_parentid_locationtype_sublocationname AS REGISTER OF (sublocationid:text, parentid:text, locationtype:text, sublocationname:text);

CREATE OR REPLACE TYPE _register_sublocationmasterid_locationtype_sublocationname_parentid AS REGISTER OF (sublocationmasterid:text, locationtype:text, sublocationname:text, parentid:text);

CREATE OR REPLACE TYPE _register_symbol AS REGISTER OF (symbol:text);

CREATE OR REPLACE TYPE _register_timestamp_value AS REGISTER OF (timestamp:text, value:double);

CREATE OR REPLACE TYPE _register_value_cost AS REGISTER OF (value:double, cost:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_accountlifecycle AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_accounttype AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_address_country AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_address_stateprovince AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_businessunitcode AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_customerclassificationlevel1 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_customerclassificationlevel2 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_marketsegment AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_marketsubsegment AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_phone_phone AS REGISTER OF (phonetype:text, phonenumber:text);

CREATE OR REPLACE TYPE apigee_token_api_product_list_json_api_product_list_json AS REGISTER OF (field_0:text);

CREATE OR REPLACE TYPE bv_emcp_assetlist_hierarchy_hierarchy_thing_concept AS REGISTER OF (urn:text, type:text, __typename:text, label:text, name:text, description:text);

CREATE OR REPLACE TYPE bv_emcp_assetlist_hierarchy_hierarchy_thing_nodelinkdsts_nodelinkdsts AS REGISTER OF (id:int, kind:text, srcid:int, srcnode:text, dstid:int, dstnode:text, percentage:int, __typename:text);

CREATE OR REPLACE TYPE bv_emcp_assetlist_hierarchy_hierarchy_thing_nodelinksrcs_nodelinksrcs AS REGISTER OF (id:int, kind:text, srcid:int, srcnode:text, dstid:int, dstnode:text, percentage:int, __typename:text);

CREATE OR REPLACE TYPE bv_emcp_assetlist_hierarchy_hierarchy_thing_pvalues_pvalues_property AS REGISTER OF (urn:text, __typename:text, name:text);

CREATE OR REPLACE TYPE bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_concept AS REGISTER OF (urn:text, icon:text, __typename:text);

CREATE OR REPLACE TYPE bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_pvalues_pvalues_property AS REGISTER OF (urn:text, __typename:text);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_accountlifecycle AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_accounttype AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses_addresses_addresstype AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses_addresses_country AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_classificationlevel1 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_leadingbusinessunit AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_marketsegment AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_connecteddetails AS REGISTER OF (connectable:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_hierarchy_children_children AS REGISTER OF (field_0:text);

CREATE OR REPLACE TYPE "ds_almsit_api_data_hierarchy_parent_6a433273-e985-4d4b-b16d-d8e8fe3f3112" AS REGISTER OF (commref:text, serialnumber:text, almassetidentifier:text);

CREATE OR REPLACE TYPE "ds_almsit_api_data_hierarchy_siblings_siblings_2536979f-4a60-493c-9975-029fe959df34" AS REGISTER OF (commref:text, serialnumber:text, almassetidentifier:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_identification AS REGISTER OF (commref:text, serialnumber:text, brand:text, devicetype:text, iscommrefvalidated:text, commrefvalidationsource:text, almassetidentifier:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_manufacturedby_vendordetails AS REGISTER OF (bfoaccountid:text, companyname:text, contact:text, companyaddress:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_productattributes AS REGISTER OF (brand:text, commrefstatus:text, devicerange:text, deviceshortname:text, longdescription:text, producttype:text, shortdescription:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_productcharacteristics_categories_categories_characteristics_characteristics_va_0 AS REGISTER OF (value:text, externallabel:text, externalurl:text, textbefore:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_productdetails AS REGISTER OF (longdescription:text, shortdescription:text, commrefstatus:text, devicetype:text, imageurl:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_productdocuments_productdocuments_doclocales_doclocales AS REGISTER OF (field_0:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_productimage AS REGISTER OF (imagedownloadurl:text);

CREATE OR REPLACE TYPE "ds_almsit_api_data_registration_sitedetails_6268f6d1-7d3e-4674-85e0-98db51ae3160" AS REGISTER OF (city:text, countrycode:text, countrylabel:text, gpslatitude:double, gpslongitude:double, siteaccountpublisher:text, siteid:text, sitename:text, statecode:text, statelabel:text, street:text, zipcode:text);

CREATE OR REPLACE TYPE ds_almsit_api_data_registration_userroles_userroles AS REGISTER OF (accountpublisher:text, rolestatus:text, userfedid:text, userrole:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_connecteddetails AS REGISTER OF (connectable:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_hierarchy_children_children AS REGISTER OF (field_0:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_hierarchy_parent AS REGISTER OF (commref:text, serialnumber:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_hierarchy_siblings_siblings AS REGISTER OF (commref:text, serialnumber:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_identification AS REGISTER OF (commref:text, serialnumber:text, brand:text, devicetype:text, iscommrefvalidated:text, commrefvalidationsource:text, almassetidentifier:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_manufacturedby_vendordetails AS REGISTER OF (bfoaccountid:text, companyname:text, contact:text, companyaddress:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_productdetails AS REGISTER OF (longdescription:text, shortdescription:text, commrefstatus:text, devicetype:text, imageurl:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_registration_sitedetails AS REGISTER OF (city:text, countrycode:text, countrylabel:text, gpslatitude:double, gpslongitude:double, siteaccountpublisher:text, siteid:text, sitename:text, statecode:text, statelabel:text, street:text, zipcode:text);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_registration_userroles_userroles AS REGISTER OF (accountpublisher:text, rolestatus:text, userfedid:text, userrole:text);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productattributes AS REGISTER OF (brand:text, commrefstatus:text, devicerange:text, deviceshortname:text, longdescription:text, producttype:text, shortdescription:text);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories_characteristics_ch_1 AS REGISTER OF (value:text, externallabel:text, externalurl:text, textbefore:text);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productdocuments_productdocuments_doclocales_doclocales AS REGISTER OF (field_0:text);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productimage AS REGISTER OF (imagedownloadurl:text);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarminstance_alarmconcept_alarmeventconceptcategory AS REGISTER OF (id:int, description:text, name:text, packageid:int, label:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarminstance_thing AS REGISTER OF (handle:text, label:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property_0 AS REGISTER OF (id:int, name:text, issi:text, urn:text, quantityname:text, __typename:text, symbol:text);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_pageinfo AS REGISTER OF (hasnextpage:text, haspreviouspage:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarminstance_alarmconcept_alarmeventconceptcategory AS REGISTER OF (id:int, description:text, name:text, packageid:int, label:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarminstance_thing AS REGISTER OF (handle:text, label:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property_u_0 AS REGISTER OF (id:int, name:text, issi:text, urn:text, quantityname:text, __typename:text, symbol:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_pageinfo AS REGISTER OF (hasnextpage:text, haspreviouspage:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items_businessquantity AS REGISTER OF (name:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items_measure_unit AS REGISTER OF (id:int, name:text, issi:text, symbol:text, urn:text, quantityname:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items_thingcontext_thingcontext AS REGISTER OF (type:text, id:int, urn:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items_timeseriesvalues_timeseriesvalues AS REGISTER OF (starttime:text, endtime:text, keytime:text, value:double, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_concept AS REGISTER OF (urn:text, type:text, __typename:text, label:text, name:text, description:text);

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_nodelinkdsts_nodelinkdsts AS REGISTER OF (id:int, kind:text, srcid:int, srcnode:text, dstid:int, dstnode:text, percentage:int, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_nodelinksrcs_nodelinksrcs AS REGISTER OF (id:int, kind:text, srcid:int, srcnode:text, dstid:int, dstnode:text, percentage:int, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues_property AS REGISTER OF (urn:text, __typename:text);

CREATE OR REPLACE TYPE "ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues_property_23121a0f-1ec0-4835-87c4-077e66061e55" AS REGISTER OF (urn:text, __typename:text, name:text);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items_businessquantity AS REGISTER OF (name:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items_measure_unit AS REGISTER OF (id:int, name:text, issi:text, symbol:text, urn:text, quantityname:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items_thingcontext_thingcontext AS REGISTER OF (id:int, type:text, label:text, name:text, urn:text, __typename:text, value:text);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items_timeseriesvalues_timeseriesvalues AS REGISTER OF (timestamp:text, value:double, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_tenants_tenants_childsite_concept_properties_properties AS REGISTER OF (urn:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_things_items_items_concept AS REGISTER OF (__typename:text, urn:text, icon:text, label:text, description:text, conceptkind:text);

CREATE OR REPLACE TYPE ds_emcp_apis_things_items_items_pvalues_pvalues_property_unit AS REGISTER OF (__typename:text, name:text, issi:text, quantityname:text, symbol:text);

CREATE OR REPLACE TYPE ds_emcp_asset_things_items_items_concept AS REGISTER OF (__typename:text, urn:text, icon:text, label:text, description:text, conceptkind:text);

CREATE OR REPLACE TYPE ds_emcp_asset_things_items_items_pvalues_pvalues_property_unit AS REGISTER OF (__typename:text, name:text, issi:text, quantityname:text, symbol:text);

CREATE OR REPLACE TYPE ds_emcp_sitehierarchy_tenants_tenants_childsite_concept_properties_properties AS REGISTER OF (urn:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items_businessquantity AS REGISTER OF (name:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items_measure_unit AS REGISTER OF (id:int, name:text, issi:text, symbol:text, urn:text, quantityname:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items_thingcontext_thingcontext AS REGISTER OF (id:int, type:text, label:text, name:text, urn:text, __typename:text, value:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items_timeseriesvalues_timeseriesvalues AS REGISTER OF (timestamp:text, value:double, __typename:text);

CREATE OR REPLACE TYPE ds_ess_apis_serviceoutput_serviceoutput AS REGISTER OF (__type:text, cost:double, currencyname:text, currencyuomid:int, divisionclienthierid:int, divisionname:text, month:text, serviceid:int, servicename:text, serviceuomid:int, siteclienthierid:int, sitename:text, uomname:text, usage:double);

CREATE OR REPLACE TYPE "ds_ess_apis_serviceoutput_serviceoutput_98b90dbb-0817-40ec-858e-169aea7e4e5e" AS REGISTER OF (__type:text, accountvendorname:text, accountnotexpected:text, accountnotmanaged:text, supplieraccountbegindate:text, supplieraccountenddate:text, accountid:int, accountnumber:text, accounttype:text, siteclienthierid:int, sitename:text);

CREATE OR REPLACE TYPE "ds_ess_apis_serviceoutput_serviceoutput_a2e61863-968b-4335-adf7-67a0f67295ca" AS REGISTER OF (__type:text, attributefrequency:text, attributename:text, attributetype:text, attributeuomname:text, attributevalue:text, clientattributeid:int, clienthierid:int, enddt:text, iscurrencyuom:text, startdt:text, attributevaluecount:int);

CREATE OR REPLACE TYPE ds_ess_site_list_api_serviceoutput_serviceoutput AS REGISTER OF (__type:text, city:text, countryname:text, divisionclienthierid:int, divisionname:text, geolat:double, geolong:double, idmnodeid:int, siteaddressline1:text, siteclienthierid:int, siteclosed:text, siteid:int, sitename:text, sitenotmanaged:text, sitereferencenumber:text, statename:text, timezone:text, weatherstationcode:text, zipcode:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_accountlifecycle AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_accounttype AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_address_country AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_address_stateprovince AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_businessunitcode AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_customerclassificationlevel1 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_customerclassificationlevel2 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_marketsegment AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_marketsubsegment AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_phone_phone AS REGISTER OF (phonetype:text, phonenumber:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_parameters_locale AS REGISTER OF (isocountry:text, isolanguage:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_parameters_query_string AS REGISTER OF (query:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_parameters_scope AS REGISTER OF (brand:text, channel:text, country:text, function:text, markets:text, privacy:text, program:text, project:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategor_10 AS REGISTER OF (valuationlabel:text, charid:text, charkey:text, valuekey:text, displayorder:int, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_4 AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_commercializedproduct_price AS REGISTER OF (comments:text, currency:text, price:text, validfrom:timestamptz, validto:timestamptz, value:float, oid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_documentoids_long AS REGISTER OF (documentoids:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_documentreferences_documentreferencebean AS REGISTER OF (_value:text, doctype:text, doctypeoid:long, scoped:boolean, bannerurl:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_featureandbenefitlist_productfeaturebenefitbean AS REGISTER OF (categoryid:text, featureandbenefitid:text, featurename:text, benefitvalue:text, category:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_t_0 AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_5 AS REGISTER OF (valuationlabel:text, charid:text, charkey:text, valuekey:text, displayorder:int, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_parents_productparentbean AS REGISTER OF (nodeoid:long, rangeid:text, rangeoid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_pictures_picturebean AS REGISTER OF (description:text, id:long, picturedocumentoid:long, picturedocumentreference:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_ranges_rangelightbean AS REGISTER OF (name:text, id:text, oid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_tag__0 AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_4 AS REGISTER OF (valuationlabel:text, charid:text, charkey:text, valuekey:text, displayorder:int, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_specificcountries_specificcountriesbean AS REGISTER OF (isocountry:text, publicationdate:timestamptz);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_parameters_locale AS REGISTER OF (isocountry:text, isolanguage:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_parameters_scope AS REGISTER OF (brand:text, channel:text, country:text, function:text, markets:text, privacy:text, program:text, project:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccat_10 AS REGISTER OF (valuationlabel:text, charid:text, charkey:text, valuekey:text, displayorder:int, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_4 AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_commercializedproduct_price AS REGISTER OF (comments:text, currency:text, price:text, validfrom:timestamptz, validto:timestamptz, value:float, oid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_documentoids_long AS REGISTER OF (documentoids:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_documentreferences_documentreferencebean AS REGISTER OF (_value:text, doctype:text, doctypeoid:long, scoped:boolean, bannerurl:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_featureandbenefitlist_productfeaturebenefit_0 AS REGISTER OF (categoryid:text, featureandbenefitid:text, featurename:text, benefitvalue:text, category:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_1 AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_7 AS REGISTER OF (valuationlabel:text, charid:text, charkey:text, valuekey:text, displayorder:int, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_parents_productparentbean AS REGISTER OF (nodeoid:long, rangeid:text, rangeoid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_pictures_picturebean AS REGISTER OF (description:text, id:long, picturedocumentoid:long, picturedocumentreference:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_ranges_rangelightbean AS REGISTER OF (name:text, id:text, oid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__1 AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__7 AS REGISTER OF (valuationlabel:text, charid:text, charkey:text, valuekey:text, displayorder:int, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_specificcountries_specificcountriesbean AS REGISTER OF (isocountry:text, publicationdate:timestamptz);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_accountlifecycle AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_accounttype AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_addresses_addresses_addresstype AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_addresses_addresses_country AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_classificationlevel1 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_leadingbusinessunit AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_marketsegment AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_accountlifecycle AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_accounttype AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_addresses_addresses_addresstype AS REGISTER OF (value:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_addresses_addresses_country AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_classificationlevel1 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_leadingbusinessunit AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_marketsegment AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltion_crossref_jsonarray_jsonarray_source AS REGISTER OF (publishercode:text, id:text, reltioid:text, reltiogoldenid:text);

CREATE OR REPLACE TYPE reltion_crossref_jsonarray_jsonarray_target_target_accounttype AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltion_crossref_jsonarray_jsonarray_target_target_classificationlevel1 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE reltion_crossref_jsonarray_jsonarray_target_target_name AS REGISTER OF (orgname:text);

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray_jsonarray_source AS REGISTER OF (publishercode:text, id:text, reltioid:text, reltiogoldenid:text);

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray_jsonarray_target_target_accounttype AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray_jsonarray_target_target_classificationlevel1 AS REGISTER OF (code:text, value:text);

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray_jsonarray_target_target_name AS REGISTER OF (orgname:text);

CREATE OR REPLACE TYPE _array_register_accountid_accountvendorname_supplieraccountbegindate_supplieraccountenddate_accountt AS ARRAY OF _register_accountid_accountvendorname_supplieraccountbegindate_supplieraccountenddate_accounttype;

CREATE OR REPLACE TYPE _array_register_attributename_attributevalue_startdt_enddt_attributetype AS ARRAY OF _register_attributename_attributevalue_startdt_enddt_attributetype;

CREATE OR REPLACE TYPE _array_register_attributes_array_attributes_name_value AS ARRAY OF _register_attributes_array_attributes_name_value;

CREATE OR REPLACE TYPE _array_register_cost AS ARRAY OF _register_cost;

CREATE OR REPLACE TYPE _array_register_cost_currencyname_month_servicename_usage AS ARRAY OF _register_cost_currencyname_month_servicename_usage;

CREATE OR REPLACE TYPE _array_register_id_locationtype_label_parentid AS ARRAY OF _register_id_locationtype_label_parentid;

CREATE OR REPLACE TYPE _array_register_month_usage_cost AS ARRAY OF _register_month_usage_cost;

CREATE OR REPLACE TYPE "_array_register_month_usage_cost_7193da91-a4fa-4570-9ca4-30ca6a0759ac" AS ARRAY OF "_register_month_usage_cost_7193da91-a4fa-4570-9ca4-30ca6a0759ac";

CREATE OR REPLACE TYPE _array_register_name_value AS ARRAY OF _register_name_value;

CREATE OR REPLACE TYPE _array_register_siteid_source AS ARRAY OF _register_siteid_source;

CREATE OR REPLACE TYPE _array_register_source_id AS ARRAY OF _register_source_id;

CREATE OR REPLACE TYPE _array_register_source_siteid AS ARRAY OF _register_source_siteid;

CREATE OR REPLACE TYPE _array_register_sourceid_sourcename AS ARRAY OF _register_sourceid_sourcename;

CREATE OR REPLACE TYPE _array_register_sourcename_sourceid AS ARRAY OF _register_sourcename_sourceid;

CREATE OR REPLACE TYPE _array_register_street_city_state_country_postalcode_latitude_longitude AS ARRAY OF _register_street_city_state_country_postalcode_latitude_longitude;

CREATE OR REPLACE TYPE _array_register_sublocationid_locationtype_sublocationname_parentid AS ARRAY OF _register_sublocationid_locationtype_sublocationname_parentid;

CREATE OR REPLACE TYPE _array_register_sublocationid_parentid_locationtype_sublocationname AS ARRAY OF _register_sublocationid_parentid_locationtype_sublocationname;

CREATE OR REPLACE TYPE _array_register_sublocationmasterid_locationtype_sublocationname_parentid AS ARRAY OF _register_sublocationmasterid_locationtype_sublocationname_parentid;

CREATE OR REPLACE TYPE _array_register_value_cost AS ARRAY OF _register_value_cost;

CREATE OR REPLACE TYPE _cf_unpivotregister_register_array AS ARRAY OF _cf_unpivotregister_register_array_record;

CREATE OR REPLACE TYPE _register_id_localsiteid_reltiogoldenid_name_businesstype_phone_website_seprimarycontact_marketsegme AS REGISTER OF (id:text, localsiteid:text, reltiogoldenid:text, name:text, businesstype:text, phone:text, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text, address:_register_addressline1_city_state_postalcode_country_addresstype);

CREATE OR REPLACE TYPE _register_id_name_businesstype_phone_website_seprimarycontact_marketsegment_marketsubsegment_custome AS REGISTER OF (id:text, name:text, businesstype:text, phone:text, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text, address:_register_addressline1_city_state_postalcode_country_addresstype);

CREATE OR REPLACE TYPE _register_id_name_description_productdetails_serialnumber_label_parentid_source AS REGISTER OF (id:text, name:text, description:text, productdetails:_register_brand_range_reference_description_imageurl, serialnumber:text, label:text, parentid:int, source:text);

CREATE OR REPLACE TYPE _register_id_name_description_productdetails_serialnumber_label_parentid_source_sourceid AS REGISTER OF (id:text, name:text, description:text, productdetails:_register_brand_range_reference_description_imageurl, serialnumber:text, label:text, parentid:int, source:text, sourceid:text);

CREATE OR REPLACE TYPE _register_name_label_unit_value AS REGISTER OF (name:text, label:text, unit:_register_symbol, value:_register_timestamp_value);

CREATE OR REPLACE TYPE _register_siteid_name_address_businesstype_phone_website_seprimarycontact_description_createdby_mark AS REGISTER OF (siteid:text, name:text, address:_register_addressline1_city_state_postalcode_country_addresstype, businesstype:text, phone:text, website:text, seprimarycontact:text, description:text, createdby:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text);

CREATE OR REPLACE TYPE _register_siteid_name_address_businesstype_phone_website_seprimarycontact_marketsegment_marketsubseg AS REGISTER OF (siteid:text, name:text, address:_register_addressline1_city_state_postalcode_country_addresstype, businesstype:text, phone:text, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_address AS REGISTER OF (addresstype:text, addressline1:text, city:text, stateprovince:api2_reltio_sitedetails_results_results_address_stateprovince, country:api2_reltio_sitedetails_results_results_address_country, postalcode:text);

CREATE OR REPLACE TYPE "api2_reltio_sitedetails_results_results_address_1d06b9b8-f604-4741-9c9c-09a5d480a70e" AS REGISTER OF (addresstype:text, addressline1:text, city:text, country:api2_reltio_sitedetails_results_results_address_country, postalcode:text);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results_phone AS ARRAY OF api2_reltio_sitedetails_results_results_phone_phone;

CREATE OR REPLACE TYPE apigee_token_api_product_list_json AS ARRAY OF apigee_token_api_product_list_json_api_product_list_json;

CREATE OR REPLACE TYPE bv_emcp_assetlist_hierarchy_hierarchy_thing_pvalues_pvalues AS REGISTER OF (pfval:text, property:bv_emcp_assetlist_hierarchy_hierarchy_thing_pvalues_pvalues_property, __typename:text, psval:text, pival:int);

CREATE OR REPLACE TYPE bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_pvalues_pvalues AS REGISTER OF (pival:text, pfval:text, psval:text, property:bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_pvalues_pvalues_property);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses_addresses AS REGISTER OF (addresstype:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses_addresses_addresstype, addressline1:text, postalcode:text, city:text, country:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses_addresses_country, county:text, street:text, pobox:text, stateprovince:text, premisenumber:text);

CREATE OR REPLACE TYPE "ds_almsit_api_data_367b74fa-918a-4aaf-8a4c-06f875d0f3ea" AS REGISTER OF (commref:text, productattributes:ds_almsit_api_data_productattributes);

CREATE OR REPLACE TYPE ds_almsit_api_data_hierarchy_children AS ARRAY OF ds_almsit_api_data_hierarchy_children_children;

CREATE OR REPLACE TYPE "ds_almsit_api_data_hierarchy_siblings_afccb50b-ffd2-4c37-8fff-86db4c481ec6" AS ARRAY OF "ds_almsit_api_data_hierarchy_siblings_siblings_2536979f-4a60-493c-9975-029fe959df34";

CREATE OR REPLACE TYPE ds_almsit_api_data_manufacturedby AS REGISTER OF (vendordetails:ds_almsit_api_data_manufacturedby_vendordetails);

CREATE OR REPLACE TYPE ds_almsit_api_data_productcharacteristics_categories_categories_characteristics_characteristics AS REGISTER OF (name:text, value:ds_almsit_api_data_productcharacteristics_categories_categories_characteristics_characteristics_va_0);

CREATE OR REPLACE TYPE ds_almsit_api_data_productdocuments_productdocuments_doclocales AS ARRAY OF ds_almsit_api_data_productdocuments_productdocuments_doclocales_doclocales;

CREATE OR REPLACE TYPE ds_almsit_api_data_registration_userroles AS ARRAY OF ds_almsit_api_data_registration_userroles_userroles;

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_hierarchy_children AS ARRAY OF ds_almsit_info_attribute_data_hierarchy_children_children;

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_hierarchy_siblings AS ARRAY OF ds_almsit_info_attribute_data_hierarchy_siblings_siblings;

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_manufacturedby AS REGISTER OF (vendordetails:ds_almsit_info_attribute_data_manufacturedby_vendordetails);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_registration_userroles AS ARRAY OF ds_almsit_info_attribute_data_registration_userroles_userroles;

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0 AS REGISTER OF (commref:text, productattributes:ds_almsit_info_product_data_data_0_productattributes);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories_characteristics_ch_0 AS REGISTER OF (name:text, value:ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories_characteristics_ch_1);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productdocuments_productdocuments_doclocales AS ARRAY OF ds_almsit_info_product_data_data_0_productdocuments_productdocuments_doclocales_doclocales;

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarminstance_alarmconcept AS REGISTER OF (urn:text, name:text, icon:text, label:text, description:text, alarmeventconceptcategory:ds_emcp_alarms_alarmoccurrences_items_items_alarminstance_alarmconcept_alarmeventconceptcategory, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property AS REGISTER OF (name:text, urn:text, label:text, description:text, mandatory:text, visible:text, defival:text, deffval:text, defsval:text, orderingtype:text, encodingtype:text, propertytype:text, accesstype:text, facettype:text, enumurn:text, unit:ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property_0, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarminstance_alarmconcept AS REGISTER OF (urn:text, name:text, icon:text, label:text, description:text, alarmeventconceptcategory:ds_emcp_apis_alarmoccurrences_items_items_alarminstance_alarmconcept_alarmeventconceptcategory, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property AS REGISTER OF (name:text, urn:text, label:text, description:text, mandatory:text, visible:text, defival:text, deffval:text, defsval:text, orderingtype:text, encodingtype:text, propertytype:text, accesstype:text, facettype:text, enumurn:text, unit:ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property_u_0, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items_measure AS REGISTER OF (id:int, label:text, urn:text, unit:ds_emcp_apis_binnedusagetrenddata_items_items_measure_unit, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items_thingcontext AS ARRAY OF ds_emcp_apis_binnedusagetrenddata_items_items_thingcontext_thingcontext;

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items_timeseriesvalues AS ARRAY OF ds_emcp_apis_binnedusagetrenddata_items_items_timeseriesvalues_timeseriesvalues;

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_nodelinkdsts AS ARRAY OF ds_emcp_apis_hierarchy_hierarchy_thing_nodelinkdsts_nodelinkdsts;

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_nodelinksrcs AS ARRAY OF ds_emcp_apis_hierarchy_hierarchy_thing_nodelinksrcs_nodelinksrcs;

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues AS REGISTER OF (pfval:text, property:ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues_property, __typename:text, psval:text, pival:int);

CREATE OR REPLACE TYPE "ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues_0eeeff87-fb14-47a5-84d4-5c1888b055e3" AS REGISTER OF (pfval:text, property:"ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues_property_23121a0f-1ec0-4835-87c4-077e66061e55", __typename:text, psval:text, pival:int);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items_measure AS REGISTER OF (id:int, label:text, urn:text, unit:ds_emcp_apis_rawtrenddata_items_items_measure_unit, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items_thingcontext AS ARRAY OF ds_emcp_apis_rawtrenddata_items_items_thingcontext_thingcontext;

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items_timeseriesvalues AS ARRAY OF ds_emcp_apis_rawtrenddata_items_items_timeseriesvalues_timeseriesvalues;

CREATE OR REPLACE TYPE ds_emcp_apis_tenants_tenants_childsite_concept_properties AS ARRAY OF ds_emcp_apis_tenants_tenants_childsite_concept_properties_properties;

CREATE OR REPLACE TYPE ds_emcp_apis_things_items_items_pvalues_pvalues_property AS REGISTER OF (__typename:text, name:text, urn:text, label:text, description:text, mandatory:text, visible:text, example:text, deffval:text, defsval:text, orderingtype:text, encodingtype:text, propertytype:text, accesstype:text, facettype:text, unit:ds_emcp_apis_things_items_items_pvalues_pvalues_property_unit, enumurn:text, defival:int);

CREATE OR REPLACE TYPE ds_emcp_asset_things_items_items_pvalues_pvalues_property AS REGISTER OF (__typename:text, name:text, urn:text, label:text, description:text, mandatory:text, visible:text, example:text, deffval:text, defsval:text, orderingtype:text, encodingtype:text, propertytype:text, accesstype:text, facettype:text, unit:ds_emcp_asset_things_items_items_pvalues_pvalues_property_unit, enumurn:text, defival:int);

CREATE OR REPLACE TYPE ds_emcp_assetlist_hierarchy_hierarchy_thing_nodelinkdsts AS ARRAY OF bv_emcp_assetlist_hierarchy_hierarchy_thing_nodelinkdsts_nodelinkdsts;

CREATE OR REPLACE TYPE ds_emcp_assetlist_hierarchy_hierarchy_thing_nodelinksrcs AS ARRAY OF bv_emcp_assetlist_hierarchy_hierarchy_thing_nodelinksrcs_nodelinksrcs;

CREATE OR REPLACE TYPE ds_emcp_sitehierarchy_tenants_tenants_childsite_concept_properties AS ARRAY OF ds_emcp_sitehierarchy_tenants_tenants_childsite_concept_properties_properties;

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items_measure AS REGISTER OF (id:int, label:text, urn:text, unit:ds_emcp_timeseries_rawtrenddata_items_items_measure_unit, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items_thingcontext AS ARRAY OF ds_emcp_timeseries_rawtrenddata_items_items_thingcontext_thingcontext;

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items_timeseriesvalues AS ARRAY OF ds_emcp_timeseries_rawtrenddata_items_items_timeseriesvalues_timeseriesvalues;

CREATE OR REPLACE TYPE ds_ess_apis_serviceoutput AS ARRAY OF ds_ess_apis_serviceoutput_serviceoutput;

CREATE OR REPLACE TYPE "ds_ess_apis_serviceoutput_6d0531db-753f-419c-ae7e-17b310698674" AS ARRAY OF "ds_ess_apis_serviceoutput_serviceoutput_98b90dbb-0817-40ec-858e-169aea7e4e5e";

CREATE OR REPLACE TYPE "ds_ess_apis_serviceoutput_bf4fe6cf-c485-4f5f-802f-11b5b6be92d9" AS ARRAY OF "ds_ess_apis_serviceoutput_serviceoutput_a2e61863-968b-4335-adf7-67a0f67295ca";

CREATE OR REPLACE TYPE ds_ess_site_list_api_serviceoutput AS ARRAY OF ds_ess_site_list_api_serviceoutput_serviceoutput;

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_address AS REGISTER OF (addresstype:text, addressline1:text, city:text, stateprovince:ds_reltio_sitedetails_results_results_address_stateprovince, country:ds_reltio_sitedetails_results_results_address_country, postalcode:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results_phone AS ARRAY OF ds_reltio_sitedetails_results_results_phone_phone;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_parameters_query AS ARRAY OF getproductdetailbycommercialref_parameters_query_string;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_3 AS ARRAY OF getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_4;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_9 AS ARRAY OF getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategor_10;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_commercializedproduct AS REGISTER OF (brand:text, commstatus:text, commercialisationdate:timestamptz, commercialized:boolean, deliverytime:text, description:text, endofcommercialisationdate:timestamptz, endofservicedate:timestamptz, localedistributorcode:text, localesalestatus:text, localestockstatus:text, nbdeliverydays:int, price:getproductdetailbycommercialref_return_productbean_commercializedproduct_price, oid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_documentoids AS ARRAY OF getproductdetailbycommercialref_return_productbean_documentoids_long;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_documentreferences AS ARRAY OF getproductdetailbycommercialref_return_productbean_documentreferences_documentreferencebean;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_featureandbenefitlist AS ARRAY OF getproductdetailbycommercialref_return_productbean_featureandbenefitlist_productfeaturebenefitbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_tag AS ARRAY OF getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_t_0;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_4 AS ARRAY OF getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_5;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_parents AS ARRAY OF getproductdetailbycommercialref_return_productbean_parents_productparentbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_pictures AS ARRAY OF getproductdetailbycommercialref_return_productbean_pictures_picturebean;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_ranges AS ARRAY OF getproductdetailbycommercialref_return_productbean_ranges_rangelightbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_tag AS ARRAY OF getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_tag__0;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_3 AS ARRAY OF getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_4;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_specificcountries AS ARRAY OF getproductdetailbycommercialref_return_productbean_specificcountries_specificcountriesbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_parameters AS REGISTER OF (scope:getproductdetailbycommercialrefv002_parameters_scope, locale:getproductdetailbycommercialrefv002_parameters_locale, semanticcharacteristics:boolean, commercialref:text, rangeid:text, showproductvaluedetail:boolean, scopeindependant:boolean, displayallhighlightedchar:boolean, fetchspecificcountries:boolean, fetchtaggedchars:boolean, fetchfeatureandbenefits:boolean);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_3 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_4;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_9 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccat_10;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_commercializedproduct AS REGISTER OF (brand:text, commstatus:text, commercialisationdate:timestamptz, commercialized:boolean, deliverytime:text, description:text, endofcommercialisationdate:timestamptz, endofservicedate:timestamptz, localedistributorcode:text, localesalestatus:text, localestockstatus:text, nbdeliverydays:int, price:getproductdetailbycommercialrefv002_return_productbean_commercializedproduct_price, oid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_documentoids AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_documentoids_long;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_documentreferences AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_documentreferences_documentreferencebean;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_featureandbenefitlist AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_featureandbenefitlist_productfeaturebenefit_0;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_0 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_1;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_6 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_7;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_parents AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_parents_productparentbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_pictures AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_pictures_picturebean;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_ranges AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_ranges_rangelightbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__0 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__1;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__6 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__7;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_specificcountries AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_specificcountries_specificcountriesbean;

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_addresses_addresses AS REGISTER OF (addresstype:reltio_organization_jsonarray_jsonarray_results_results_addresses_addresses_addresstype, addressline1:text, postalcode:text, city:text, country:reltio_organization_jsonarray_jsonarray_results_results_addresses_addresses_country, county:text, pobox:text, stateprovince:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_addresses_addresses AS REGISTER OF (addresstype:reltio_organization_new_jsonarray_jsonarray_results_results_addresses_addresses_addresstype, addressline1:text, postalcode:text, city:text, country:reltio_organization_new_jsonarray_jsonarray_results_results_addresses_addresses_country, county:text, street:text, pobox:text, stateprovince:text, premisenumber:text);

CREATE OR REPLACE TYPE reltion_crossref_jsonarray_jsonarray_target_target AS REGISTER OF (publishercode:text, id:text, recordtype:text, reltiogoldenid:text, deletionflag:text, accounttype:reltion_crossref_jsonarray_jsonarray_target_target_accounttype, classificationlevel1:reltion_crossref_jsonarray_jsonarray_target_target_classificationlevel1, name:reltion_crossref_jsonarray_jsonarray_target_target_name);

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray_jsonarray_target_target AS REGISTER OF (publishercode:text, id:text, recordtype:text, reltiogoldenid:text, deletionflag:text, accounttype:site_metadata_golden_id_jsonarray_jsonarray_target_target_accounttype, classificationlevel1:site_metadata_golden_id_jsonarray_jsonarray_target_target_classificationlevel1, name:site_metadata_golden_id_jsonarray_jsonarray_target_target_name);

CREATE OR REPLACE TYPE _array_register_id_name_description_productdetails_serialnumber_label_parentid_source AS ARRAY OF _register_id_name_description_productdetails_serialnumber_label_parentid_source;

CREATE OR REPLACE TYPE _array_register_id_name_description_productdetails_serialnumber_label_parentid_source_sourceid AS ARRAY OF _register_id_name_description_productdetails_serialnumber_label_parentid_source_sourceid;

CREATE OR REPLACE TYPE _array_register_name_label_unit_value AS ARRAY OF _register_name_label_unit_value;

CREATE OR REPLACE TYPE _array_register_siteid_name_address_businesstype_phone_website_seprimarycontact_description_createdb AS ARRAY OF _register_siteid_name_address_businesstype_phone_website_seprimarycontact_description_createdby_mark;

CREATE OR REPLACE TYPE _array_register_siteid_name_address_businesstype_phone_website_seprimarycontact_marketsegment_market AS ARRAY OF _register_siteid_name_address_businesstype_phone_website_seprimarycontact_marketsegment_marketsubseg;

CREATE OR REPLACE TYPE _register_accounts AS REGISTER OF (accounts:_array_register_accountid_accountvendorname_supplieraccountbegindate_supplieraccountenddate_accountt);

CREATE OR REPLACE TYPE _register_attributes AS REGISTER OF (attributes:_array_register_name_value);

CREATE OR REPLACE TYPE _register_hierarchy AS REGISTER OF (hierarchy:_array_register_sublocationid_locationtype_sublocationname_parentid);

CREATE OR REPLACE TYPE "_register_hierarchy_d31a447c-07fa-46c4-a4c6-14c2349636df" AS REGISTER OF (hierarchy:_array_register_sublocationmasterid_locationtype_sublocationname_parentid);

CREATE OR REPLACE TYPE _register_id_name_address_businesstype_phone_website_seprimarycontact_description_createdby_marketse AS REGISTER OF (id:text, name:text, address:api2_reltio_sitedetails_results_results_address, businesstype:text, phone:api2_reltio_sitedetails_results_results_phone, website:text, seprimarycontact:text, description:text, createdby:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text);

CREATE OR REPLACE TYPE _register_id_name_address_createdby_creationdate_lastmodifiedby_lastmodifieddate AS REGISTER OF (id:text, name:text, address:_array_register_street_city_state_country_postalcode_latitude_longitude, createdby:text, creationdate:text, lastmodifiedby:text, lastmodifieddate:text);

CREATE OR REPLACE TYPE _register_metrics AS REGISTER OF (metrics:_array_register_attributename_attributevalue_startdt_enddt_attributetype);

CREATE OR REPLACE TYPE "_register_siteid_name_address_businesstype_phone_website_seprima4c666546-1192-4d2d-ab44-eca566fc1c64" AS REGISTER OF (siteid:text, name:text, address:_register_addressline1_city_state_postalcode_country_addresstype, businesstype:text, phone:text, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text, sublocations:_array_register_id_locationtype_label_parentid);

CREATE OR REPLACE TYPE _register_timeseriesdata AS REGISTER OF (timeseriesdata:_array_register_month_usage_cost);

CREATE OR REPLACE TYPE _register_usage AS REGISTER OF (usage:_array_register_cost_currencyname_month_servicename_usage);

CREATE OR REPLACE TYPE "_register_usagename_timeseriesdata_8af39305-a1a9-4e01-a72f-7c3d166311ca" AS REGISTER OF (usagename:text, timeseriesdata:"_array_register_month_usage_cost_7193da91-a4fa-4570-9ca4-30ca6a0759ac");

CREATE OR REPLACE TYPE "_register_usagename_timeseriesdata_f7097a12-737d-41b0-a66f-eb2853fa45f6" AS REGISTER OF (usagename:text, timeseriesdata:_array_register_month_usage_cost);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results_results AS REGISTER OF (publisherid:text, publishercode:text, goldenid:text, accountowner:text, accounttype:api2_reltio_sitedetails_results_results_accounttype, name:text, customerclassificationlevel1:api2_reltio_sitedetails_results_results_customerclassificationlevel1, customerclassificationlevel2:api2_reltio_sitedetails_results_results_customerclassificationlevel2, businessunitcode:api2_reltio_sitedetails_results_results_businessunitcode, marketsegment:api2_reltio_sitedetails_results_results_marketsegment, marketsubsegment:api2_reltio_sitedetails_results_results_marketsubsegment, accountlifecycle:api2_reltio_sitedetails_results_results_accountlifecycle, deletionflag:text, phone:api2_reltio_sitedetails_results_results_phone, blockbfo:text, reltiocertified:text, address:api2_reltio_sitedetails_results_results_address, website:text);

CREATE OR REPLACE TYPE "api2_reltio_sitedetails_results_results_f30c8678-a536-4edc-92f6-3615f85a25f1" AS REGISTER OF (publisherid:text, publishercode:text, goldenid:text, accountowner:text, accounttype:api2_reltio_sitedetails_results_results_accounttype, name:text, customerclassificationlevel1:api2_reltio_sitedetails_results_results_customerclassificationlevel1, businessunitcode:api2_reltio_sitedetails_results_results_businessunitcode, marketsegment:api2_reltio_sitedetails_results_results_marketsegment, accountlifecycle:api2_reltio_sitedetails_results_results_accountlifecycle, deletionflag:text, blockbfo:text, reltiocertified:text, address:"api2_reltio_sitedetails_results_results_address_1d06b9b8-f604-4741-9c9c-09a5d480a70e", dunsnumber:text);

CREATE OR REPLACE TYPE bv_emcp_assetlist_hierarchy_hierarchy_thing_pvalues AS ARRAY OF bv_emcp_assetlist_hierarchy_hierarchy_thing_pvalues_pvalues;

CREATE OR REPLACE TYPE bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_pvalues AS ARRAY OF bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_pvalues_pvalues;

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses AS ARRAY OF bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses_addresses;

CREATE OR REPLACE TYPE "ds_almsit_api_data_hierarchy_baa35fae-d166-4ee1-92b2-2aa8ee30fa2a" AS REGISTER OF (parent:"ds_almsit_api_data_hierarchy_parent_6a433273-e985-4d4b-b16d-d8e8fe3f3112", children:ds_almsit_api_data_hierarchy_children, siblings:"ds_almsit_api_data_hierarchy_siblings_afccb50b-ffd2-4c37-8fff-86db4c481ec6");

CREATE OR REPLACE TYPE ds_almsit_api_data_productcharacteristics_categories_categories_characteristics AS ARRAY OF ds_almsit_api_data_productcharacteristics_categories_categories_characteristics_characteristics;

CREATE OR REPLACE TYPE ds_almsit_api_data_productdocuments_productdocuments AS REGISTER OF (doctitle:text, docdescription:text, docdownloadurl:text, docsize:text, doctype:text, docname:text, docreference:text, doclocales:ds_almsit_api_data_productdocuments_productdocuments_doclocales, mobiledownloadurl:text, docrevision:text, docversion:text);

CREATE OR REPLACE TYPE "ds_almsit_api_data_registration_043ee101-4ded-4074-be4a-b259db7d8ce7" AS REGISTER OF (almassetidentifier:text, assetname:text, commref:text, createdby:text, creationtime:text, creatorfirstname:text, creatorlastname:text, isseuser:text, lastmodifiedby:text, lastmodifiedtime:text, lastmodifierlastname:text, lastmodifierfirstname:text, locationtype:text, publishercode:text, serialnumber:text, sitedetails:"ds_almsit_api_data_registration_sitedetails_6268f6d1-7d3e-4674-85e0-98db51ae3160", registerforself:text, siteid:text, userroles:ds_almsit_api_data_registration_userroles);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_hierarchy AS REGISTER OF (parent:ds_almsit_info_attribute_data_hierarchy_parent, children:ds_almsit_info_attribute_data_hierarchy_children, siblings:ds_almsit_info_attribute_data_hierarchy_siblings);

CREATE OR REPLACE TYPE ds_almsit_info_attribute_data_registration AS REGISTER OF (almassetidentifier:text, commref:text, createdby:text, creationtime:text, creatorfirstname:text, creatorlastname:text, installationdate:text, isseuser:text, lastmodifiedby:text, lastmodifiedtime:text, lastmodifierlastname:text, lastmodifierfirstname:text, locationtype:text, longdescription:text, publishercode:text, serialnumber:text, shortdescription:text, sitedetails:ds_almsit_info_attribute_data_registration_sitedetails, registerforself:text, siteid:text, userroles:ds_almsit_info_attribute_data_registration_userroles);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories_characteristics AS ARRAY OF ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories_characteristics_ch_0;

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productdocuments_productdocuments AS REGISTER OF (doctitle:text, docdescription:text, docdownloadurl:text, docsize:text, doctype:text, docname:text, docreference:text, doclocales:ds_almsit_info_product_data_data_0_productdocuments_productdocuments_doclocales, mobiledownloadurl:text, docrevision:text, docversion:text);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarminstance AS REGISTER OF (id:int, alarmcontrol:text, alarmfamily:text, alarmmodel:text, alarmpriority:text, alarmstate:text, alarmconceptid:int, thingid:int, tsmath:text, alarmconcept:ds_emcp_alarms_alarmoccurrences_items_items_alarminstance_alarmconcept, thing:ds_emcp_alarms_alarmoccurrences_items_items_alarminstance_thing, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues AS REGISTER OF (psval:text, property:ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property, __typename:text, ptsval:text, pival:int, pfval:double);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarminstance AS REGISTER OF (id:int, alarmcontrol:text, alarmfamily:text, alarmmodel:text, alarmpriority:text, alarmstate:text, alarmconceptid:int, thingid:int, tsmath:text, alarmconcept:ds_emcp_apis_alarmoccurrences_items_items_alarminstance_alarmconcept, thing:ds_emcp_apis_alarmoccurrences_items_items_alarminstance_thing, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues AS REGISTER OF (psval:text, property:ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues_property, __typename:text, ptsval:text, pival:int, pfval:double);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items_items AS REGISTER OF (usageid:int, businessquantity:ds_emcp_apis_binnedusagetrenddata_items_items_businessquantity, measure:ds_emcp_apis_binnedusagetrenddata_items_items_measure, thingid:int, thinglabel:text, thingcontext:ds_emcp_apis_binnedusagetrenddata_items_items_thingcontext, timezone:text, timeseriesvalues:ds_emcp_apis_binnedusagetrenddata_items_items_timeseriesvalues, __typename:text, surfaceareavalue:double);

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing_pvalues AS ARRAY OF ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues;

CREATE OR REPLACE TYPE "ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_a84a46aa-a6f6-42bc-bc52-8a16559ad0e7" AS ARRAY OF "ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_pvalues_0eeeff87-fb14-47a5-84d4-5c1888b055e3";

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items_items AS REGISTER OF (businessquantity:ds_emcp_apis_rawtrenddata_items_items_businessquantity, measure:ds_emcp_apis_rawtrenddata_items_items_measure, thingid:int, thinglabel:text, thingcontext:ds_emcp_apis_rawtrenddata_items_items_thingcontext, timezone:text, timeseriesvalues:ds_emcp_apis_rawtrenddata_items_items_timeseriesvalues, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_tenants_tenants_childsite_concept AS REGISTER OF (urn:text, type:text, properties:ds_emcp_apis_tenants_tenants_childsite_concept_properties, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_things_items_items_pvalues_pvalues AS REGISTER OF (__typename:text, pfval:text, psval:text, property:ds_emcp_apis_things_items_items_pvalues_pvalues_property, pival:int);

CREATE OR REPLACE TYPE ds_emcp_asset_things_items_items_pvalues_pvalues AS REGISTER OF (__typename:text, pfval:text, psval:text, property:ds_emcp_asset_things_items_items_pvalues_pvalues_property, pival:int);

CREATE OR REPLACE TYPE ds_emcp_sitehierarchy_tenants_tenants_childsite_concept AS REGISTER OF (urn:text, type:text, properties:ds_emcp_sitehierarchy_tenants_tenants_childsite_concept_properties, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items_items AS REGISTER OF (businessquantity:ds_emcp_timeseries_rawtrenddata_items_items_businessquantity, measure:ds_emcp_timeseries_rawtrenddata_items_items_measure, thingid:int, thinglabel:text, thingcontext:ds_emcp_timeseries_rawtrenddata_items_items_thingcontext, timezone:text, timeseriesvalues:ds_emcp_timeseries_rawtrenddata_items_items_timeseriesvalues, __typename:text);

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results_results AS REGISTER OF (publisherid:text, publishercode:text, goldenid:text, accountowner:text, accounttype:ds_reltio_sitedetails_results_results_accounttype, name:text, customerclassificationlevel1:ds_reltio_sitedetails_results_results_customerclassificationlevel1, customerclassificationlevel2:ds_reltio_sitedetails_results_results_customerclassificationlevel2, businessunitcode:ds_reltio_sitedetails_results_results_businessunitcode, marketsegment:ds_reltio_sitedetails_results_results_marketsegment, marketsubsegment:ds_reltio_sitedetails_results_results_marketsubsegment, accountlifecycle:ds_reltio_sitedetails_results_results_accountlifecycle, deletionflag:text, phone:ds_reltio_sitedetails_results_results_phone, blockbfo:text, reltiocertified:text, address:ds_reltio_sitedetails_results_results_address, website:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_parameters AS REGISTER OF (scope:getproductdetailbycommercialref_parameters_scope, locale:getproductdetailbycommercialref_parameters_locale, semanticcharacteristics:boolean, commercialref:text, rangeid:text, datasource:text, version:long, showproductvaluedetail:boolean, scopeindependant:boolean, displayallhighlightedchar:boolean, fetchspecificcountries:boolean, fetchtaggedchars:boolean, fetchfeatureandbenefits:boolean, query:getproductdetailbycommercialref_parameters_query);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_8 AS REGISTER OF (valuationlabel:text, valuelineitems:getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_9, charid:text, displayorder:int, lockcase:boolean, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_3 AS REGISTER OF (valuationlabel:text, valuelineitems:getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_4, charid:text, displayorder:int, lockcase:boolean, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_2 AS REGISTER OF (valuationlabel:text, valuelineitems:getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_3, charid:text, displayorder:int, lockcase:boolean, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_8 AS REGISTER OF (valuationlabel:text, valuelineitems:getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_9, charid:text, displayorder:int, lockcase:boolean, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_5 AS REGISTER OF (valuationlabel:text, valuelineitems:getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_6, charid:text, displayorder:int, lockcase:boolean, valuationid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__5 AS REGISTER OF (valuationlabel:text, valuelineitems:getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__6, charid:text, displayorder:int, lockcase:boolean, valuationid:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results_addresses AS ARRAY OF reltio_organization_jsonarray_jsonarray_results_results_addresses_addresses;

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results_addresses AS ARRAY OF reltio_organization_new_jsonarray_jsonarray_results_results_addresses_addresses;

CREATE OR REPLACE TYPE reltion_crossref_jsonarray_jsonarray_target AS ARRAY OF reltion_crossref_jsonarray_jsonarray_target_target;

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray_jsonarray_target AS ARRAY OF site_metadata_golden_id_jsonarray_jsonarray_target_target;

CREATE OR REPLACE TYPE _array_register_accounts AS ARRAY OF _register_accounts;

CREATE OR REPLACE TYPE _array_register_attributes AS ARRAY OF _register_attributes;

CREATE OR REPLACE TYPE _array_register_hierarchy AS ARRAY OF _register_hierarchy;

CREATE OR REPLACE TYPE "_array_register_hierarchy_d31a447c-07fa-46c4-a4c6-14c2349636df" AS ARRAY OF "_register_hierarchy_d31a447c-07fa-46c4-a4c6-14c2349636df";

CREATE OR REPLACE TYPE _array_register_id_name_address_businesstype_phone_website_seprimarycontact_description_createdby_ma AS ARRAY OF _register_id_name_address_businesstype_phone_website_seprimarycontact_description_createdby_marketse;

CREATE OR REPLACE TYPE _array_register_id_name_address_createdby_creationdate_lastmodifiedby_lastmodifieddate AS ARRAY OF _register_id_name_address_createdby_creationdate_lastmodifiedby_lastmodifieddate;

CREATE OR REPLACE TYPE _array_register_metrics AS ARRAY OF _register_metrics;

CREATE OR REPLACE TYPE "_array_register_siteid_name_address_businesstype_phone_website_seprima4c666546-1192-4d2d-ab44-eca566" AS ARRAY OF "_register_siteid_name_address_businesstype_phone_website_seprima4c666546-1192-4d2d-ab44-eca566fc1c64";

CREATE OR REPLACE TYPE _array_register_timeseriesdata AS ARRAY OF _register_timeseriesdata;

CREATE OR REPLACE TYPE _array_register_usage AS ARRAY OF _register_usage;

CREATE OR REPLACE TYPE "_array_register_usagename_timeseriesdata_8af39305-a1a9-4e01-a72f-7c3d166311ca" AS ARRAY OF "_register_usagename_timeseriesdata_8af39305-a1a9-4e01-a72f-7c3d166311ca";

CREATE OR REPLACE TYPE "_array_register_usagename_timeseriesdata_f7097a12-737d-41b0-a66f-eb2853fa45f6" AS ARRAY OF "_register_usagename_timeseriesdata_f7097a12-737d-41b0-a66f-eb2853fa45f6";

CREATE OR REPLACE TYPE "_register_customerid_name_address_businesstype_phone_website_sepd912b712-9f7d-4a3f-9853-3294fa51254d" AS REGISTER OF (customerid:text, name:text, address:_register_addressline1_city_state_postalcode_country_addresstype, businesstype:text, phone:text, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text, hierarchy:_array_register_siteid_name_address_businesstype_phone_website_seprimarycontact_marketsegment_market);

CREATE OR REPLACE TYPE _register_customerid_name_address_businesstype_phone_website_seprimarycontact_marketsegment_marketsu AS REGISTER OF (customerid:text, name:text, address:_register_addressline1_city_state_postalcode_country_addresstype, businesstype:text, phone:text, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text, hierarchy:_array_register_siteid_name_address_businesstype_phone_website_seprimarycontact_description_createdb);

CREATE OR REPLACE TYPE api2_reltio_sitedetails_results AS ARRAY OF api2_reltio_sitedetails_results_results;

CREATE OR REPLACE TYPE "api2_reltio_sitedetails_results_4f48f8fd-58bd-4cae-a745-56b3ec4f7b3e" AS ARRAY OF "api2_reltio_sitedetails_results_results_f30c8678-a536-4edc-92f6-3615f85a25f1";

CREATE OR REPLACE TYPE "bv_emcp_assetlist_hierarchy_hierarchy_thing_71425c47-cfa4-4167-aa86-48096ffc1b1a" AS REGISTER OF (id:int, label:text, handle:text, concept:bv_emcp_assetlist_hierarchy_hierarchy_thing_concept, nodelinkdsts:ds_emcp_assetlist_hierarchy_hierarchy_thing_nodelinkdsts, nodelinksrcs:ds_emcp_assetlist_hierarchy_hierarchy_thing_nodelinksrcs, pvalues:bv_emcp_assetlist_hierarchy_hierarchy_thing_pvalues, __typename:text);

CREATE OR REPLACE TYPE bv_emcp_sitelist_api1_hierarchy_hierarchy_thing AS REGISTER OF (id:int, name:text, label:text, concept:bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_concept, pvalues:bv_emcp_sitelist_api1_hierarchy_hierarchy_thing_pvalues);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results_results AS REGISTER OF (goldenid:text, entityid:text, createdby:text, createdtime:text, updatedby:text, updatedtime:text, name:text, addresses:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_addresses, classificationlevel1:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_classificationlevel1, leadingbusinessunit:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_leadingbusinessunit, marketsegment:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_marketsegment, accountlifecycle:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_accountlifecycle, accountowner:text, accounttype:bv_reltio_mdm_details_jsonarray_jsonarray_results_results_accounttype, localorganizationname:text, shortorganizationname:text);

CREATE OR REPLACE TYPE "ds_almsit_api_data_7105425c-91f8-4165-9cd3-a8470eabc2a0" AS REGISTER OF (isalmasset:text, publishercode:text, almassetidentifier:text, equipmenttype:text, lastmodifierfirstname:text, assetinstallationtype:text, creationdate:text, createdby:text, lifecyclestatus:text, lastmodifiedtime:text, assetname:text, lastmodifierlastname:text, lastmodifiedby:text, description:text, lastmodifieddate:text, connecteddetails:ds_almsit_api_data_connecteddetails, iscertificationavailable:text, isproductionimageavailable:text, manufacturedby:ds_almsit_api_data_manufacturedby, devicerange:text, identification:ds_almsit_api_data_identification, productdetails:ds_almsit_api_data_productdetails, hierarchy:"ds_almsit_api_data_hierarchy_baa35fae-d166-4ee1-92b2-2aa8ee30fa2a", registration:"ds_almsit_api_data_registration_043ee101-4ded-4074-be4a-b259db7d8ce7");

CREATE OR REPLACE TYPE ds_almsit_api_data_productcharacteristics_categories_categories AS REGISTER OF (name:text, characteristics:ds_almsit_api_data_productcharacteristics_categories_categories_characteristics);

CREATE OR REPLACE TYPE ds_almsit_api_data_productdocuments AS ARRAY OF ds_almsit_api_data_productdocuments_productdocuments;

CREATE OR REPLACE TYPE "ds_almsit_info_attribute_data_cab67e7f-a5f9-4ae9-b064-c43ae6a611fb" AS REGISTER OF (isalmasset:text, publishercode:text, almassetidentifier:text, equipmenttype:text, commissioningdate:text, lastmodifierfirstname:text, assetinstallationtype:text, creationdate:text, createdby:text, lifecyclestatus:text, creatorlastname:text, lastmodifiedtime:text, assetname:text, creatorfirstname:text, lastmodifierlastname:text, lastmodifiedby:text, lastmodifieddate:text, description:text, connecteddetails:ds_almsit_info_attribute_data_connecteddetails, iscertificationavailable:text, isproductionimageavailable:text, manufacturedby:ds_almsit_info_attribute_data_manufacturedby, devicerange:text, identification:ds_almsit_info_attribute_data_identification, productdetails:ds_almsit_info_attribute_data_productdetails, hierarchy:ds_almsit_info_attribute_data_hierarchy, registration:ds_almsit_info_attribute_data_registration);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories AS REGISTER OF (name:text, characteristics:ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories_characteristics);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productdocuments AS ARRAY OF ds_almsit_info_product_data_data_0_productdocuments_productdocuments;

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues AS ARRAY OF ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues;

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues AS ARRAY OF ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues_alarmoccurrencepvalues;

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata_items AS ARRAY OF ds_emcp_apis_binnedusagetrenddata_items_items;

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy_thing AS REGISTER OF (id:int, label:text, handle:text, concept:ds_emcp_apis_hierarchy_hierarchy_thing_concept, nodelinkdsts:ds_emcp_apis_hierarchy_hierarchy_thing_nodelinkdsts, nodelinksrcs:ds_emcp_apis_hierarchy_hierarchy_thing_nodelinksrcs, pvalues:ds_emcp_apis_hierarchy_hierarchy_thing_pvalues, __typename:text);

CREATE OR REPLACE TYPE "ds_emcp_apis_hierarchy_hierarchy_thing_5ac9bbaf-ae5b-46ef-a810-0cc984fb7323" AS REGISTER OF (id:int, label:text, handle:text, concept:ds_emcp_apis_hierarchy_hierarchy_thing_concept, nodelinkdsts:ds_emcp_apis_hierarchy_hierarchy_thing_nodelinkdsts, nodelinksrcs:ds_emcp_apis_hierarchy_hierarchy_thing_nodelinksrcs, pvalues:"ds_emcp_apis_hierarchy_hierarchy_thing_pvalues_a84a46aa-a6f6-42bc-bc52-8a16559ad0e7", __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata_items AS ARRAY OF ds_emcp_apis_rawtrenddata_items_items;

CREATE OR REPLACE TYPE ds_emcp_apis_tenants_tenants_childsite AS REGISTER OF (siteid:int, name:text, label:text, tenantid:int, concept:ds_emcp_apis_tenants_tenants_childsite_concept, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_things_items_items_pvalues AS ARRAY OF ds_emcp_apis_things_items_items_pvalues_pvalues;

CREATE OR REPLACE TYPE ds_emcp_asset_things_items_items_pvalues AS ARRAY OF ds_emcp_asset_things_items_items_pvalues_pvalues;

CREATE OR REPLACE TYPE ds_emcp_sitehierarchy_tenants_tenants_childsite AS REGISTER OF (siteid:int, name:text, label:text, tenantid:int, concept:ds_emcp_sitehierarchy_tenants_tenants_childsite_concept, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata_items AS ARRAY OF ds_emcp_timeseries_rawtrenddata_items_items;

CREATE OR REPLACE TYPE ds_reltio_sitedetails_results AS ARRAY OF ds_reltio_sitedetails_results_results;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_7 AS ARRAY OF getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_8;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_2 AS ARRAY OF getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_3;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_1 AS ARRAY OF getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_2;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_7 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_8;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_4 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_5;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__4 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__5;

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results_results AS REGISTER OF (goldenid:text, entityid:text, createdby:text, createdtime:text, updatedby:text, updatedtime:text, name:text, addresses:reltio_organization_jsonarray_jsonarray_results_results_addresses, classificationlevel1:reltio_organization_jsonarray_jsonarray_results_results_classificationlevel1, leadingbusinessunit:reltio_organization_jsonarray_jsonarray_results_results_leadingbusinessunit, marketsegment:reltio_organization_jsonarray_jsonarray_results_results_marketsegment, accountlifecycle:reltio_organization_jsonarray_jsonarray_results_results_accountlifecycle, accountowner:text, accounttype:reltio_organization_jsonarray_jsonarray_results_results_accounttype, localorganizationname:text, shortorganizationname:text);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results_results AS REGISTER OF (goldenid:text, entityid:text, createdby:text, createdtime:text, updatedby:text, updatedtime:text, name:text, addresses:reltio_organization_new_jsonarray_jsonarray_results_results_addresses, classificationlevel1:reltio_organization_new_jsonarray_jsonarray_results_results_classificationlevel1, leadingbusinessunit:reltio_organization_new_jsonarray_jsonarray_results_results_leadingbusinessunit, marketsegment:reltio_organization_new_jsonarray_jsonarray_results_results_marketsegment, accountlifecycle:reltio_organization_new_jsonarray_jsonarray_results_results_accountlifecycle, accountowner:text, accounttype:reltio_organization_new_jsonarray_jsonarray_results_results_accounttype, localorganizationname:text, shortorganizationname:text);

CREATE OR REPLACE TYPE reltion_crossref_jsonarray_jsonarray AS REGISTER OF (source:reltion_crossref_jsonarray_jsonarray_source, target:reltion_crossref_jsonarray_jsonarray_target);

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray_jsonarray AS REGISTER OF (source:site_metadata_golden_id_jsonarray_jsonarray_source, target:site_metadata_golden_id_jsonarray_jsonarray_target);

CREATE OR REPLACE TYPE "_array_register_customerid_name_address_businesstype_phone_website_sepd912b712-9f7d-4a3f-9853-3294fa" AS ARRAY OF "_register_customerid_name_address_businesstype_phone_website_sepd912b712-9f7d-4a3f-9853-3294fa51254d";

CREATE OR REPLACE TYPE _array_register_customerid_name_address_businesstype_phone_website_seprimarycontact_marketsegment_ma AS ARRAY OF _register_customerid_name_address_businesstype_phone_website_seprimarycontact_marketsegment_marketsu;

CREATE OR REPLACE TYPE "_register_customerid_name_address_businesstype_phone_website_sep1c3c5c55-7298-4261-8b00-af1cca79131b" AS REGISTER OF (customerid:text, name:text, address:api2_reltio_sitedetails_results_results_address, businesstype:text, phone:api2_reltio_sitedetails_results_results_phone, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text, hierarchy:_array_register_id_name_address_businesstype_phone_website_seprimarycontact_description_createdby_ma);

CREATE OR REPLACE TYPE "_register_usage_772bb696-b9b9-4672-8f69-d71f7399369b" AS REGISTER OF (usage:"_array_register_usagename_timeseriesdata_8af39305-a1a9-4e01-a72f-7c3d166311ca");

CREATE OR REPLACE TYPE "bv_emcp_assetlist_hierarchy_hierarchy_e3a84c26-f8bf-4c14-9cae-061a2dfdb913" AS REGISTER OF (parentid:int, thing:"bv_emcp_assetlist_hierarchy_hierarchy_thing_71425c47-cfa4-4167-aa86-48096ffc1b1a", __typename:text);

CREATE OR REPLACE TYPE bv_emcp_sitelist_api1_hierarchy_hierarchy AS REGISTER OF (level:int, thing:bv_emcp_sitelist_api1_hierarchy_hierarchy_thing);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray_results AS ARRAY OF bv_reltio_mdm_details_jsonarray_jsonarray_results_results;

CREATE OR REPLACE TYPE ds_almsit_api_data_productcharacteristics_categories AS ARRAY OF ds_almsit_api_data_productcharacteristics_categories_categories;

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productcharacteristics_categories AS ARRAY OF ds_almsit_info_product_data_data_0_productcharacteristics_categories_categories;

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items_items AS REGISTER OF (id:int, starttime:text, endtime:text, alarmstate:text, measures:text, possiblecause:text, possibleproblem:text, possiblerecommendation:text, possiblerisk:text, alarmoccurrencepvalues:ds_emcp_alarms_alarmoccurrences_items_items_alarmoccurrencepvalues, alarminstance:ds_emcp_alarms_alarmoccurrences_items_items_alarminstance, acknowledgementalarmstatetransition:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items_items AS REGISTER OF (id:int, starttime:text, endtime:text, alarmstate:text, measures:text, possiblecause:text, possibleproblem:text, possiblerecommendation:text, possiblerisk:text, alarmoccurrencepvalues:ds_emcp_apis_alarmoccurrences_items_items_alarmoccurrencepvalues, alarminstance:ds_emcp_apis_alarmoccurrences_items_items_alarminstance, acknowledgementalarmstatetransition:text, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_binnedusagetrenddata AS REGISTER OF (items:ds_emcp_apis_binnedusagetrenddata_items, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy_hierarchy AS REGISTER OF (parentid:int, thing:ds_emcp_apis_hierarchy_hierarchy_thing, __typename:text);

CREATE OR REPLACE TYPE "ds_emcp_apis_hierarchy_hierarchy_eb6bd6fa-b39a-41b7-9255-d83d18ae7e23" AS REGISTER OF (parentid:int, thing:"ds_emcp_apis_hierarchy_hierarchy_thing_5ac9bbaf-ae5b-46ef-a810-0cc984fb7323", __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_rawtrenddata AS REGISTER OF (totalcount:int, items:ds_emcp_apis_rawtrenddata_items, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_tenants_tenants AS REGISTER OF (level:int, parentid:int, childsite:ds_emcp_apis_tenants_tenants_childsite, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_things_items_items AS REGISTER OF (__typename:text, id:int, name:text, label:text, handle:text, concept:ds_emcp_apis_things_items_items_concept, pvalues:ds_emcp_apis_things_items_items_pvalues);

CREATE OR REPLACE TYPE ds_emcp_asset_things_items_items AS REGISTER OF (__typename:text, id:int, name:text, label:text, handle:text, concept:ds_emcp_asset_things_items_items_concept, pvalues:ds_emcp_asset_things_items_items_pvalues);

CREATE OR REPLACE TYPE ds_emcp_sitehierarchy_tenants_tenants AS REGISTER OF (level:int, parentid:int, childsite:ds_emcp_sitehierarchy_tenants_tenants_childsite, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_timeseries_rawtrenddata AS REGISTER OF (totalcount:int, items:ds_emcp_timeseries_rawtrenddata_items, __typename:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_6 AS REGISTER OF (externeturl:text, internaldocoid:long, labelurl:text, valuelines:getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_7, keepvalue:boolean, symbolictobedisplayed:text, textafter:text, textbefore:text, charkey:text, countryiso:text, countryname:text, countryoid:long, lockcase:boolean, oid:long, unity:text, unityid:text, value:text, valueid:text, valuerendition:text, visible:boolean);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_1 AS REGISTER OF (externeturl:text, internaldocoid:long, labelurl:text, valuelines:getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_2, keepvalue:boolean, symbolictobedisplayed:text, textafter:text, textbefore:text, charkey:text, countryiso:text, countryname:text, countryoid:long, lockcase:boolean, oid:long, unity:text, unityid:text, value:text, valueid:text, valuerendition:text, visible:boolean);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_0 AS REGISTER OF (externeturl:text, internaldocoid:long, labelurl:text, valuelines:getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_1, keepvalue:boolean, symbolictobedisplayed:text, textafter:text, textbefore:text, charkey:text, countryiso:text, countryname:text, countryoid:long, lockcase:boolean, oid:long, unity:text, unityid:text, value:text, valueid:text, valuerendition:text, visible:boolean);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_6 AS REGISTER OF (externeturl:text, internaldocoid:long, labelurl:text, valuelines:getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_7, keepvalue:boolean, symbolictobedisplayed:text, textafter:text, textbefore:text, charkey:text, countryiso:text, countryname:text, countryoid:long, lockcase:boolean, oid:long, unity:text, unityid:text, value:text, valueid:text, valuerendition:text, visible:boolean);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_3 AS REGISTER OF (externeturl:text, internaldocoid:long, labelurl:text, valuelines:getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_4, keepvalue:boolean, symbolictobedisplayed:text, textafter:text, textbefore:text, charkey:text, countryiso:text, countryname:text, countryoid:long, lockcase:boolean, oid:long, unity:text, unityid:text, value:text, valueid:text, valuerendition:text, visible:boolean);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__3 AS REGISTER OF (externeturl:text, internaldocoid:long, labelurl:text, valuelines:getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__4, keepvalue:boolean, symbolictobedisplayed:text, textafter:text, textbefore:text, charkey:text, countryiso:text, countryname:text, countryoid:long, lockcase:boolean, oid:long, unity:text, unityid:text, value:text, valueid:text, valuerendition:text, visible:boolean);

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray_results AS ARRAY OF reltio_organization_jsonarray_jsonarray_results_results;

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray_results AS ARRAY OF reltio_organization_new_jsonarray_jsonarray_results_results;

CREATE OR REPLACE TYPE reltion_crossref_jsonarray AS ARRAY OF reltion_crossref_jsonarray_jsonarray;

CREATE OR REPLACE TYPE site_metadata_golden_id_jsonarray AS ARRAY OF site_metadata_golden_id_jsonarray_jsonarray;

CREATE OR REPLACE TYPE "_array_register_customerid_name_address_businesstype_phone_website_sep1c3c5c55-7298-4261-8b00-af1cca" AS ARRAY OF "_register_customerid_name_address_businesstype_phone_website_sep1c3c5c55-7298-4261-8b00-af1cca79131b";

CREATE OR REPLACE TYPE "_array_register_usage_772bb696-b9b9-4672-8f69-d71f7399369b" AS ARRAY OF "_register_usage_772bb696-b9b9-4672-8f69-d71f7399369b";

CREATE OR REPLACE TYPE "bv_emcp_assetlist_hierarchy_8ed4a898-b2b4-492f-a47f-c1ea51c0e54d" AS ARRAY OF "bv_emcp_assetlist_hierarchy_hierarchy_e3a84c26-f8bf-4c14-9cae-061a2dfdb913";

CREATE OR REPLACE TYPE bv_emcp_sitelist_api1_hierarchy AS ARRAY OF bv_emcp_sitelist_api1_hierarchy_hierarchy;

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray_jsonarray AS REGISTER OF (total:int, max:int, offset_0:int, results:bv_reltio_mdm_details_jsonarray_jsonarray_results);

CREATE OR REPLACE TYPE ds_almsit_api_data_productcharacteristics AS REGISTER OF (categories:ds_almsit_api_data_productcharacteristics_categories);

CREATE OR REPLACE TYPE ds_almsit_info_product_data_data_0_productcharacteristics AS REGISTER OF (categories:ds_almsit_info_product_data_data_0_productcharacteristics_categories);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences_items AS ARRAY OF ds_emcp_alarms_alarmoccurrences_items_items;

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences_items AS ARRAY OF ds_emcp_apis_alarmoccurrences_items_items;

CREATE OR REPLACE TYPE ds_emcp_apis_hierarchy AS ARRAY OF ds_emcp_apis_hierarchy_hierarchy;

CREATE OR REPLACE TYPE "ds_emcp_apis_hierarchy_6982bfa3-a6ce-49ce-9ae6-4839815a1025" AS ARRAY OF "ds_emcp_apis_hierarchy_hierarchy_eb6bd6fa-b39a-41b7-9255-d83d18ae7e23";

CREATE OR REPLACE TYPE ds_emcp_apis_tenants AS ARRAY OF ds_emcp_apis_tenants_tenants;

CREATE OR REPLACE TYPE ds_emcp_apis_things_items AS ARRAY OF ds_emcp_apis_things_items_items;

CREATE OR REPLACE TYPE ds_emcp_asset_things_items AS ARRAY OF ds_emcp_asset_things_items_items;

CREATE OR REPLACE TYPE ds_emcp_sitehierarchy_tenants AS ARRAY OF ds_emcp_sitehierarchy_tenants_tenants;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_5 AS ARRAY OF getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_6;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_0 AS ARRAY OF getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_1;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_values AS ARRAY OF getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_valu_0;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_5 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_6;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_2 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_3;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__2 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__3;

CREATE OR REPLACE TYPE reltio_organization_jsonarray_jsonarray AS REGISTER OF (total:int, max:int, offset_0:int, results:reltio_organization_jsonarray_jsonarray_results);

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray_jsonarray AS REGISTER OF (total:int, max:int, offset_0:int, results:reltio_organization_new_jsonarray_jsonarray_results);

CREATE OR REPLACE TYPE _register_assetid_name_label_description_hierarchy_timeseriesdata_attributes_alarms_registration_sou AS REGISTER OF (assetid:text, name:text, label:text, description:text, hierarchy:"ds_almsit_api_data_hierarchy_baa35fae-d166-4ee1-92b2-2aa8ee30fa2a", timeseriesdata:_array_register_name_label_unit_value, attributes:_array_register_name_value, alarms:ds_emcp_apis_alarmoccurrences_items, registration:_array_register_id_name_address_createdby_creationdate_lastmodifiedby_lastmodifieddate, sourcereferences:_array_register_source_id);

CREATE OR REPLACE TYPE "_register_productattributes_productdocuments_productimage_producc64093e8-82ae-4f1b-84fb-009e46ad860b" AS REGISTER OF (productattributes:ds_almsit_info_product_data_data_0_productattributes, productdocuments:ds_almsit_info_product_data_data_0_productdocuments, productimage:ds_almsit_info_product_data_data_0_productimage, productcharacteristics:ds_almsit_info_product_data_data_0_productcharacteristics);

CREATE OR REPLACE TYPE "_register_productattributes_productdocuments_productimage_producebc30b93-05ad-49fc-9681-4c380f1a6ae2" AS REGISTER OF (productattributes:ds_almsit_info_product_data_data_0_productattributes, productdocuments:ds_almsit_info_product_data_data_0_productdocuments, productimage:ds_almsit_info_product_data_data_0_productimage, productcharacteristics:ds_almsit_info_product_data_data_0_productcharacteristics);

CREATE OR REPLACE TYPE _register_productattributes_productdocuments_productimage_productcharacteristics AS REGISTER OF (productattributes:ds_almsit_info_product_data_data_0_productattributes, productdocuments:ds_almsit_info_product_data_data_0_productdocuments, productimage:ds_almsit_info_product_data_data_0_productimage, productcharacteristics:ds_almsit_info_product_data_data_0_productcharacteristics);

CREATE OR REPLACE TYPE _register_productattributes_productimage_productdocuments_productcharacteristics AS REGISTER OF (productattributes:ds_almsit_api_data_productattributes, productimage:ds_almsit_api_data_productimage, productdocuments:ds_almsit_api_data_productdocuments, productcharacteristics:ds_almsit_api_data_productcharacteristics);

CREATE OR REPLACE TYPE bv_reltio_mdm_details_jsonarray AS ARRAY OF bv_reltio_mdm_details_jsonarray_jsonarray;

CREATE OR REPLACE TYPE ds_almsit_api_data AS REGISTER OF (commref:text, productattributes:ds_almsit_api_data_productattributes, productimage:ds_almsit_api_data_productimage, productdocuments:ds_almsit_api_data_productdocuments, productcharacteristics:ds_almsit_api_data_productcharacteristics);

CREATE OR REPLACE TYPE "ds_almsit_info_product_data_data_0_c7bfc6a3-d967-437f-af09-34d655b812ed" AS REGISTER OF (commref:text, productattributes:ds_almsit_info_product_data_data_0_productattributes, productimage:ds_almsit_info_product_data_data_0_productimage, productdocuments:ds_almsit_info_product_data_data_0_productdocuments, productcharacteristics:ds_almsit_info_product_data_data_0_productcharacteristics);

CREATE OR REPLACE TYPE ds_emcp_alarms_alarmoccurrences AS REGISTER OF (totalcount:int, pageinfo:ds_emcp_alarms_alarmoccurrences_pageinfo, items:ds_emcp_alarms_alarmoccurrences_items, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_alarmoccurrences AS REGISTER OF (totalcount:int, pageinfo:ds_emcp_apis_alarmoccurrences_pageinfo, items:ds_emcp_apis_alarmoccurrences_items, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_apis_things AS REGISTER OF (totalcount:int, items:ds_emcp_apis_things_items, __typename:text);

CREATE OR REPLACE TYPE ds_emcp_asset_things AS REGISTER OF (totalcount:int, items:ds_emcp_asset_things_items, __typename:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_2 AS REGISTER OF (tag:getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_3, description:text, values:getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_5, charid:text, charkey:text, name:text, oid:long, showninproductdetails:boolean, showinproductlist:boolean, displayname:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean AS REGISTER OF (tag:getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_tag, description:text, values:getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean_v_0, charid:text, charkey:text, name:text, oid:long, showninproductdetails:boolean, showinproductlist:boolean, displayname:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean AS REGISTER OF (tag:getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_tag, description:text, values:getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean_values, charid:text, charkey:text, name:text, oid:long, showninproductdetails:boolean, showinproductlist:boolean, displayname:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_2 AS REGISTER OF (tag:getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_3, description:text, values:getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_5, charid:text, charkey:text, name:text, oid:long, showninproductdetails:boolean, showinproductlist:boolean, displayname:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbean AS REGISTER OF (tag:getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_0, description:text, values:getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbe_2, charid:text, charkey:text, name:text, oid:long, showninproductdetails:boolean, showinproductlist:boolean, displayname:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean AS REGISTER OF (tag:getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__0, description:text, values:getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean__2, charid:text, charkey:text, name:text, oid:long, showninproductdetails:boolean, showinproductlist:boolean, displayname:text);

CREATE OR REPLACE TYPE reltio_organization_jsonarray AS ARRAY OF reltio_organization_jsonarray_jsonarray;

CREATE OR REPLACE TYPE reltio_organization_new_jsonarray AS ARRAY OF reltio_organization_new_jsonarray_jsonarray;

CREATE OR REPLACE TYPE _array_register_assetid_name_label_description_hierarchy_timeseriesdata_attributes_alarms_registrati AS ARRAY OF _register_assetid_name_label_description_hierarchy_timeseriesdata_attributes_alarms_registration_sou;

CREATE OR REPLACE TYPE "_array_register_productattributes_productdocuments_productimage_producc64093e8-82ae-4f1b-84fb-009e46" AS ARRAY OF "_register_productattributes_productdocuments_productimage_producc64093e8-82ae-4f1b-84fb-009e46ad860b";

CREATE OR REPLACE TYPE "_array_register_productattributes_productdocuments_productimage_producebc30b93-05ad-49fc-9681-4c380f" AS ARRAY OF "_register_productattributes_productdocuments_productimage_producebc30b93-05ad-49fc-9681-4c380f1a6ae2";

CREATE OR REPLACE TYPE _array_register_productattributes_productdocuments_productimage_productcharacteristics AS ARRAY OF _register_productattributes_productdocuments_productimage_productcharacteristics;

CREATE OR REPLACE TYPE _array_register_productattributes_productimage_productdocuments_productcharacteristics AS ARRAY OF _register_productattributes_productimage_productdocuments_productcharacteristics;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_1 AS ARRAY OF getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_2;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_highligthedcharacteristics AS ARRAY OF getproductdetailbycommercialref_return_productbean_highligthedcharacteristics_characteristicbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_semanticcharacteristics AS ARRAY OF getproductdetailbycommercialref_return_productbean_semanticcharacteristics_characteristicbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_1 AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_2;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics_characteristicbean;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics_characteristicbean;

CREATE OR REPLACE TYPE _register_data AS REGISTER OF (data:_array_register_assetid_name_label_description_hierarchy_timeseriesdata_attributes_alarms_registrati);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_0 AS REGISTER OF (characteristics:getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_1, name:text, oid:long);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_0 AS REGISTER OF (characteristics:getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_1, name:text, oid:long);

CREATE OR REPLACE TYPE _array_register_data AS ARRAY OF _register_data;

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean_characteristiccategories AS ARRAY OF getproductdetailbycommercialref_return_productbean_characteristiccategories_characteristiccategory_0;

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean_characteristiccategories AS ARRAY OF getproductdetailbycommercialrefv002_return_productbean_characteristiccategories_characteristiccate_0;

CREATE OR REPLACE TYPE "_register_customerid_name_address_businesstype_phone_website_sepcac76bdd-581d-4149-bc86-95844deb3038" AS REGISTER OF (customerid:text, name:text, address:_register_addressline1_city_state_postalcode_country_addresstype, businesstype:text, phone:text, website:text, seprimarycontact:text, marketsegment:text, marketsubsegment:text, customerclassificationlevel1:text, customerclassificationlevel2:text, sitedetails:"_array_register_siteid_name_address_businesstype_phone_website_seprima4c666546-1192-4d2d-ab44-eca566", assets:_array_register_data);

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return_productbean AS REGISTER OF (characteristiccategories:getproductdetailbycommercialref_return_productbean_characteristiccategories, commercialreference:text, commercializedproduct:getproductdetailbycommercialref_return_productbean_commercializedproduct, description:text, documentoids:getproductdetailbycommercialref_return_productbean_documentoids, eancode:text, epdsdocumentoid:long, greenpremium:boolean, highligthedcharacteristics:getproductdetailbycommercialref_return_productbean_highligthedcharacteristics, logodocumentoid:long, longdescription:text, parentnodeoid:long, parentrangeid:text, parentrangeoid:long, picturedocumentoid:long, parents:getproductdetailbycommercialref_return_productbean_parents, ranges:getproductdetailbycommercialref_return_productbean_ranges, semanticcharacteristics:getproductdetailbycommercialref_return_productbean_semanticcharacteristics, shortdescription:text, documentreferences:getproductdetailbycommercialref_return_productbean_documentreferences, picturedocumentreference:text, pictures:getproductdetailbycommercialref_return_productbean_pictures, type:text, subtype:text, specificcountries:getproductdetailbycommercialref_return_productbean_specificcountries, featureandbenefitlist:getproductdetailbycommercialref_return_productbean_featureandbenefitlist, globalstatus:text, oid:long, productid:text);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return_productbean AS REGISTER OF (characteristiccategories:getproductdetailbycommercialrefv002_return_productbean_characteristiccategories, commercialreference:text, commercializedproduct:getproductdetailbycommercialrefv002_return_productbean_commercializedproduct, description:text, documentoids:getproductdetailbycommercialrefv002_return_productbean_documentoids, eancode:text, epdsdocumentoid:long, greenpremium:boolean, highligthedcharacteristics:getproductdetailbycommercialrefv002_return_productbean_highligthedcharacteristics, logodocumentoid:long, longdescription:text, parentnodeoid:long, parentrangeid:text, parentrangeoid:long, picturedocumentoid:long, parents:getproductdetailbycommercialrefv002_return_productbean_parents, ranges:getproductdetailbycommercialrefv002_return_productbean_ranges, semanticcharacteristics:getproductdetailbycommercialrefv002_return_productbean_semanticcharacteristics, shortdescription:text, documentreferences:getproductdetailbycommercialrefv002_return_productbean_documentreferences, picturedocumentreference:text, pictures:getproductdetailbycommercialrefv002_return_productbean_pictures, type:text, subtype:text, specificcountries:getproductdetailbycommercialrefv002_return_productbean_specificcountries, featureandbenefitlist:getproductdetailbycommercialrefv002_return_productbean_featureandbenefitlist, globalstatus:text, oid:long, productid:text);

CREATE OR REPLACE TYPE "_array_register_customerid_name_address_businesstype_phone_website_sepcac76bdd-581d-4149-bc86-95844d" AS ARRAY OF "_register_customerid_name_address_businesstype_phone_website_sepcac76bdd-581d-4149-bc86-95844deb3038";

CREATE OR REPLACE TYPE getproductdetailbycommercialref_return AS REGISTER OF (productbean:getproductdetailbycommercialref_return_productbean);

CREATE OR REPLACE TYPE getproductdetailbycommercialrefv002_return AS REGISTER OF (productbean:getproductdetailbycommercialrefv002_return_productbean);

# #######################################
# MAPS
# #######################################
# No maps
# #######################################
# BASE VIEWS
# #######################################
CREATE OR REPLACE TABLE bv_alm_app_token I18N es_euro (
        access_token:text (description = 'test4'),
        expires_in:int,
        token_type:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE PARTIAL
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE 3500
    ADD SEARCHMETHOD alm_app_token(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token NOS ZERO ()
             ADD expires_in NOS ZERO ()
             ADD token_type NOS ZERO ()
        )
        OUTPUTLIST (access_token, expires_in, token_type
        )
        WRAPPER (json alm_app_token)
    );

CREATE OR REPLACE TABLE bv_alm_dynamodb_productdata I18N es_euro (
        commref:text (original_name = 'commRef', sourcetypeid = '12'),
        devicerange:text (original_name = 'deviceRange', sourcetypeid = '12'),
        brand:text (original_name = 'brand', sourcetypeid = '12'),
        shortdescription:text (original_name = 'shortDescription', sourcetypeid = '12'),
        picturedocumentreference:text (original_name = 'pictureDocumentReference', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD commref (any) OPT ANY
             ADD devicerange (any) OPT ANY
             ADD brand (any) OPT ANY
             ADD shortdescription (any) OPT ANY
             ADD picturedocumentreference (any) OPT ANY
        )
        OUTPUTLIST (brand, commref, devicerange, picturedocumentreference, shortdescription
        )
        WRAPPER (custom "ds_dynamodb_almsit_2dcde72d-4873-4174-a20a-fd226c85ea8d")
    );

CREATE OR REPLACE TABLE bv_almsit_api_info_attribute_all I18N es_euro (
        path:text (extern),
        instanceid:text,
        data:"ds_almsit_api_data_7105425c-91f8-4165-9cd3-a8470eabc2a0"
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_almsit_api(
        I18N es_euro
        CONSTRAINTS (
             ADD path (=) OBL ONE
             ADD instanceid NOS ZERO ()
             ADD data NOS ZERO ()
             ADD data.isalmasset NOS ZERO ()
             ADD data.publishercode NOS ZERO ()
             ADD data.almassetidentifier NOS ZERO ()
             ADD data.equipmenttype NOS ZERO ()
             ADD data.lastmodifierfirstname NOS ZERO ()
             ADD data.assetinstallationtype NOS ZERO ()
             ADD data.creationdate NOS ZERO ()
             ADD data.createdby NOS ZERO ()
             ADD data.lifecyclestatus NOS ZERO ()
             ADD data.lastmodifiedtime NOS ZERO ()
             ADD data.assetname NOS ZERO ()
             ADD data.lastmodifierlastname NOS ZERO ()
             ADD data.lastmodifiedby NOS ZERO ()
             ADD data.description NOS ZERO ()
             ADD data.lastmodifieddate NOS ZERO ()
             ADD data.connecteddetails NOS ZERO ()
             ADD data.connecteddetails.connectable NOS ZERO ()
             ADD data.iscertificationavailable NOS ZERO ()
             ADD data.isproductionimageavailable NOS ZERO ()
             ADD data.manufacturedby NOS ZERO ()
             ADD data.manufacturedby.vendordetails NOS ZERO ()
             ADD data.manufacturedby.vendordetails.bfoaccountid NOS ZERO ()
             ADD data.manufacturedby.vendordetails.companyname NOS ZERO ()
             ADD data.manufacturedby.vendordetails.contact NOS ZERO ()
             ADD data.manufacturedby.vendordetails.companyaddress NOS ZERO ()
             ADD data.devicerange NOS ZERO ()
             ADD data.identification NOS ZERO ()
             ADD data.identification.commref NOS ZERO ()
             ADD data.identification.serialnumber NOS ZERO ()
             ADD data.identification.brand NOS ZERO ()
             ADD data.identification.devicetype NOS ZERO ()
             ADD data.identification.iscommrefvalidated NOS ZERO ()
             ADD data.identification.commrefvalidationsource NOS ZERO ()
             ADD data.identification.almassetidentifier NOS ZERO ()
             ADD data.productdetails NOS ZERO ()
             ADD data.productdetails.longdescription NOS ZERO ()
             ADD data.productdetails.shortdescription NOS ZERO ()
             ADD data.productdetails.commrefstatus NOS ZERO ()
             ADD data.productdetails.devicetype NOS ZERO ()
             ADD data.productdetails.imageurl NOS ZERO ()
             ADD data.hierarchy NOS ZERO ()
             ADD data.hierarchy.parent NOS ZERO ()
             ADD data.hierarchy.parent.commref NOS ZERO ()
             ADD data.hierarchy.parent.serialnumber NOS ZERO ()
             ADD data.hierarchy.parent.almassetidentifier NOS ZERO ()
             ADD data.hierarchy.children NOS ZERO ()
             ADD data.hierarchy.children NOS ZERO ()
             ADD data.hierarchy.children.field_0 NOS ZERO ()
             ADD data.hierarchy.siblings NOS ZERO ()
             ADD data.hierarchy.siblings NOS ZERO ()
             ADD data.hierarchy.siblings.commref NOS ZERO ()
             ADD data.hierarchy.siblings.serialnumber NOS ZERO ()
             ADD data.hierarchy.siblings.almassetidentifier NOS ZERO ()
             ADD data.registration NOS ZERO ()
             ADD data.registration.almassetidentifier NOS ZERO ()
             ADD data.registration.assetname NOS ZERO ()
             ADD data.registration.commref NOS ZERO ()
             ADD data.registration.createdby NOS ZERO ()
             ADD data.registration.creationtime NOS ZERO ()
             ADD data.registration.creatorfirstname NOS ZERO ()
             ADD data.registration.creatorlastname NOS ZERO ()
             ADD data.registration.isseuser NOS ZERO ()
             ADD data.registration.lastmodifiedby NOS ZERO ()
             ADD data.registration.lastmodifiedtime NOS ZERO ()
             ADD data.registration.lastmodifierlastname NOS ZERO ()
             ADD data.registration.lastmodifierfirstname NOS ZERO ()
             ADD data.registration.locationtype NOS ZERO ()
             ADD data.registration.publishercode NOS ZERO ()
             ADD data.registration.serialnumber NOS ZERO ()
             ADD data.registration.sitedetails NOS ZERO ()
             ADD data.registration.sitedetails.city NOS ZERO ()
             ADD data.registration.sitedetails.countrycode NOS ZERO ()
             ADD data.registration.sitedetails.countrylabel NOS ZERO ()
             ADD data.registration.sitedetails.gpslatitude NOS ZERO ()
             ADD data.registration.sitedetails.gpslongitude NOS ZERO ()
             ADD data.registration.sitedetails.siteaccountpublisher NOS ZERO ()
             ADD data.registration.sitedetails.siteid NOS ZERO ()
             ADD data.registration.sitedetails.sitename NOS ZERO ()
             ADD data.registration.sitedetails.statecode NOS ZERO ()
             ADD data.registration.sitedetails.statelabel NOS ZERO ()
             ADD data.registration.sitedetails.street NOS ZERO ()
             ADD data.registration.sitedetails.zipcode NOS ZERO ()
             ADD data.registration.registerforself NOS ZERO ()
             ADD data.registration.siteid NOS ZERO ()
             ADD data.registration.userroles NOS ZERO ()
             ADD data.registration.userroles NOS ZERO ()
             ADD data.registration.userroles.accountpublisher NOS ZERO ()
             ADD data.registration.userroles.rolestatus NOS ZERO ()
             ADD data.registration.userroles.userfedid NOS ZERO ()
             ADD data.registration.userroles.userrole NOS ZERO ()
        )
        OUTPUTLIST (data, instanceid
        )
        WRAPPER (json "ds_almsit_api_3e06ebc7-4396-4655-8f73-0de42f761033")
    );

CREATE OR REPLACE TABLE bv_almsit_api_info_product_data_attributes I18N es_euro (
        path:text (extern),
        instanceid:text,
        data:"ds_almsit_api_data_367b74fa-918a-4aaf-8a4c-06f875d0f3ea"
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_almsit_api(
        I18N es_euro
        CONSTRAINTS (
             ADD path (=) OBL ONE
             ADD instanceid NOS ZERO ()
             ADD data NOS ZERO ()
             ADD data.commref NOS ZERO ()
             ADD data.productattributes NOS ZERO ()
             ADD data.productattributes.brand NOS ZERO ()
             ADD data.productattributes.commrefstatus NOS ZERO ()
             ADD data.productattributes.devicerange NOS ZERO ()
             ADD data.productattributes.deviceshortname NOS ZERO ()
             ADD data.productattributes.longdescription NOS ZERO ()
             ADD data.productattributes.producttype NOS ZERO ()
             ADD data.productattributes.shortdescription NOS ZERO ()
        )
        OUTPUTLIST (data, instanceid
        )
        WRAPPER (json "ds_almsit_api_eca6c7b7-9f49-4b98-91f4-cac27c809af0")
    );

CREATE OR REPLACE TABLE bv_almsit_api_product_data_all I18N es_euro (
        path:text (extern),
        instanceid:text,
        data:ds_almsit_api_data
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE 3600
    ADD SEARCHMETHOD ds_almsit_api(
        I18N es_euro
        CONSTRAINTS (
             ADD path (=) OBL ONE
             ADD instanceid NOS ZERO ()
             ADD data NOS ZERO ()
             ADD data.commref NOS ZERO ()
             ADD data.productattributes NOS ZERO ()
             ADD data.productattributes.brand NOS ZERO ()
             ADD data.productattributes.commrefstatus NOS ZERO ()
             ADD data.productattributes.devicerange NOS ZERO ()
             ADD data.productattributes.deviceshortname NOS ZERO ()
             ADD data.productattributes.longdescription NOS ZERO ()
             ADD data.productattributes.producttype NOS ZERO ()
             ADD data.productattributes.shortdescription NOS ZERO ()
             ADD data.productimage NOS ZERO ()
             ADD data.productimage.imagedownloadurl NOS ZERO ()
             ADD data.productdocuments NOS ZERO ()
             ADD data.productdocuments NOS ZERO ()
             ADD data.productdocuments.doctitle NOS ZERO ()
             ADD data.productdocuments.docdescription NOS ZERO ()
             ADD data.productdocuments.docdownloadurl NOS ZERO ()
             ADD data.productdocuments.docsize NOS ZERO ()
             ADD data.productdocuments.doctype NOS ZERO ()
             ADD data.productdocuments.docname NOS ZERO ()
             ADD data.productdocuments.docreference NOS ZERO ()
             ADD data.productdocuments.doclocales NOS ZERO ()
             ADD data.productdocuments.doclocales NOS ZERO ()
             ADD data.productdocuments.doclocales.field_0 NOS ZERO ()
             ADD data.productdocuments.mobiledownloadurl NOS ZERO ()
             ADD data.productdocuments.docrevision NOS ZERO ()
             ADD data.productdocuments.docversion NOS ZERO ()
             ADD data.productcharacteristics NOS ZERO ()
             ADD data.productcharacteristics.categories NOS ZERO ()
             ADD data.productcharacteristics.categories NOS ZERO ()
             ADD data.productcharacteristics.categories.name NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics.name NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics.value NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics.value.value NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics.value.externallabel NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics.value.externalurl NOS ZERO ()
             ADD data.productcharacteristics.categories.characteristics.value.textbefore NOS ZERO ()
        )
        OUTPUTLIST (data, instanceid
        )
        WRAPPER (json ds_almsit_api)
    );

CREATE OR REPLACE TABLE bv_almsit_info_attribute I18N es_euro (
        access_token:text (extern),
        almassetidentifier:text (extern),
        instanceid:text,
        data:"ds_almsit_info_attribute_data_cab67e7f-a5f9-4ae9-b064-c43ae6a611fb"
    )
    FOLDER = '/1 - connectivity/2 - base views'
    DESCRIPTION = 'Base view to call and get the response from GET /info/v2/assets API'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_almsit_info_attribute(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD almassetidentifier (=) OBL ONE
             ADD instanceid NOS ZERO ()
             ADD data NOS ZERO ()
             ADD data.isalmasset NOS ZERO ()
             ADD data.publishercode NOS ZERO ()
             ADD data.almassetidentifier NOS ZERO ()
             ADD data.equipmenttype NOS ZERO ()
             ADD data.commissioningdate NOS ZERO ()
             ADD data.lastmodifierfirstname NOS ZERO ()
             ADD data.assetinstallationtype NOS ZERO ()
             ADD data.creationdate NOS ZERO ()
             ADD data.createdby NOS ZERO ()
             ADD data.lifecyclestatus NOS ZERO ()
             ADD data.creatorlastname NOS ZERO ()
             ADD data.lastmodifiedtime NOS ZERO ()
             ADD data.assetname NOS ZERO ()
             ADD data.creatorfirstname NOS ZERO ()
             ADD data.lastmodifierlastname NOS ZERO ()
             ADD data.lastmodifiedby NOS ZERO ()
             ADD data.lastmodifieddate NOS ZERO ()
             ADD data.description NOS ZERO ()
             ADD data.connecteddetails NOS ZERO ()
             ADD data.connecteddetails.connectable NOS ZERO ()
             ADD data.iscertificationavailable NOS ZERO ()
             ADD data.isproductionimageavailable NOS ZERO ()
             ADD data.manufacturedby NOS ZERO ()
             ADD data.manufacturedby.vendordetails NOS ZERO ()
             ADD data.manufacturedby.vendordetails.bfoaccountid NOS ZERO ()
             ADD data.manufacturedby.vendordetails.companyname NOS ZERO ()
             ADD data.manufacturedby.vendordetails.contact NOS ZERO ()
             ADD data.manufacturedby.vendordetails.companyaddress NOS ZERO ()
             ADD data.devicerange NOS ZERO ()
             ADD data.identification NOS ZERO ()
             ADD data.identification.commref NOS ZERO ()
             ADD data.identification.serialnumber NOS ZERO ()
             ADD data.identification.brand NOS ZERO ()
             ADD data.identification.devicetype NOS ZERO ()
             ADD data.identification.iscommrefvalidated NOS ZERO ()
             ADD data.identification.commrefvalidationsource NOS ZERO ()
             ADD data.identification.almassetidentifier NOS ZERO ()
             ADD data.productdetails NOS ZERO ()
             ADD data.productdetails.longdescription NOS ZERO ()
             ADD data.productdetails.shortdescription NOS ZERO ()
             ADD data.productdetails.commrefstatus NOS ZERO ()
             ADD data.productdetails.devicetype NOS ZERO ()
             ADD data.productdetails.imageurl NOS ZERO ()
             ADD data.hierarchy NOS ZERO ()
             ADD data.hierarchy.parent NOS ZERO ()
             ADD data.hierarchy.parent.commref NOS ZERO ()
             ADD data.hierarchy.parent.serialnumber NOS ZERO ()
             ADD data.hierarchy.children NOS ZERO ()
             ADD data.hierarchy.children NOS ZERO ()
             ADD data.hierarchy.children.field_0 NOS ZERO ()
             ADD data.hierarchy.siblings NOS ZERO ()
             ADD data.hierarchy.siblings NOS ZERO ()
             ADD data.hierarchy.siblings.commref NOS ZERO ()
             ADD data.hierarchy.siblings.serialnumber NOS ZERO ()
             ADD data.registration NOS ZERO ()
             ADD data.registration.almassetidentifier NOS ZERO ()
             ADD data.registration.commref NOS ZERO ()
             ADD data.registration.createdby NOS ZERO ()
             ADD data.registration.creationtime NOS ZERO ()
             ADD data.registration.creatorfirstname NOS ZERO ()
             ADD data.registration.creatorlastname NOS ZERO ()
             ADD data.registration.installationdate NOS ZERO ()
             ADD data.registration.isseuser NOS ZERO ()
             ADD data.registration.lastmodifiedby NOS ZERO ()
             ADD data.registration.lastmodifiedtime NOS ZERO ()
             ADD data.registration.lastmodifierlastname NOS ZERO ()
             ADD data.registration.lastmodifierfirstname NOS ZERO ()
             ADD data.registration.locationtype NOS ZERO ()
             ADD data.registration.longdescription NOS ZERO ()
             ADD data.registration.publishercode NOS ZERO ()
             ADD data.registration.serialnumber NOS ZERO ()
             ADD data.registration.shortdescription NOS ZERO ()
             ADD data.registration.sitedetails NOS ZERO ()
             ADD data.registration.sitedetails.city NOS ZERO ()
             ADD data.registration.sitedetails.countrycode NOS ZERO ()
             ADD data.registration.sitedetails.countrylabel NOS ZERO ()
             ADD data.registration.sitedetails.gpslatitude NOS ZERO ()
             ADD data.registration.sitedetails.gpslongitude NOS ZERO ()
             ADD data.registration.sitedetails.siteaccountpublisher NOS ZERO ()
             ADD data.registration.sitedetails.siteid NOS ZERO ()
             ADD data.registration.sitedetails.sitename NOS ZERO ()
             ADD data.registration.sitedetails.statecode NOS ZERO ()
             ADD data.registration.sitedetails.statelabel NOS ZERO ()
             ADD data.registration.sitedetails.street NOS ZERO ()
             ADD data.registration.sitedetails.zipcode NOS ZERO ()
             ADD data.registration.registerforself NOS ZERO ()
             ADD data.registration.siteid NOS ZERO ()
             ADD data.registration.userroles NOS ZERO ()
             ADD data.registration.userroles NOS ZERO ()
             ADD data.registration.userroles.accountpublisher NOS ZERO ()
             ADD data.registration.userroles.rolestatus NOS ZERO ()
             ADD data.registration.userroles.userfedid NOS ZERO ()
             ADD data.registration.userroles.userrole NOS ZERO ()
        )
        OUTPUTLIST (data, instanceid
        )
        WRAPPER (json "ds_almsit_info_attribute_374dc2d0-ecfb-4592-aa0f-62231bafc31d")
    );

CREATE OR REPLACE TABLE bv_almsit_info_product_data_all I18N es_euro (
        access_token:text (extern),
        data:text (extern),
        commref:text (extern),
        instanceid:text,
        data_0:"ds_almsit_info_product_data_data_0_c7bfc6a3-d967-437f-af09-34d655b812ed"
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_almsit_info_product_data(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD data (=) OBL ONE
             ADD commref (=) OBL ONE
             ADD instanceid NOS ZERO ()
             ADD data_0 NOS ZERO ()
             ADD data_0.commref NOS ZERO ()
             ADD data_0.productattributes NOS ZERO ()
             ADD data_0.productattributes.brand NOS ZERO ()
             ADD data_0.productattributes.commrefstatus NOS ZERO ()
             ADD data_0.productattributes.devicerange NOS ZERO ()
             ADD data_0.productattributes.deviceshortname NOS ZERO ()
             ADD data_0.productattributes.longdescription NOS ZERO ()
             ADD data_0.productattributes.producttype NOS ZERO ()
             ADD data_0.productattributes.shortdescription NOS ZERO ()
             ADD data_0.productimage NOS ZERO ()
             ADD data_0.productimage.imagedownloadurl NOS ZERO ()
             ADD data_0.productdocuments NOS ZERO ()
             ADD data_0.productdocuments NOS ZERO ()
             ADD data_0.productdocuments.doctitle NOS ZERO ()
             ADD data_0.productdocuments.docdescription NOS ZERO ()
             ADD data_0.productdocuments.docdownloadurl NOS ZERO ()
             ADD data_0.productdocuments.docsize NOS ZERO ()
             ADD data_0.productdocuments.doctype NOS ZERO ()
             ADD data_0.productdocuments.docname NOS ZERO ()
             ADD data_0.productdocuments.docreference NOS ZERO ()
             ADD data_0.productdocuments.doclocales NOS ZERO ()
             ADD data_0.productdocuments.doclocales NOS ZERO ()
             ADD data_0.productdocuments.doclocales.field_0 NOS ZERO ()
             ADD data_0.productdocuments.mobiledownloadurl NOS ZERO ()
             ADD data_0.productdocuments.docrevision NOS ZERO ()
             ADD data_0.productdocuments.docversion NOS ZERO ()
             ADD data_0.productcharacteristics NOS ZERO ()
             ADD data_0.productcharacteristics.categories NOS ZERO ()
             ADD data_0.productcharacteristics.categories NOS ZERO ()
             ADD data_0.productcharacteristics.categories.name NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics.name NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics.value NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics.value.value NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics.value.externallabel NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics.value.externalurl NOS ZERO ()
             ADD data_0.productcharacteristics.categories.characteristics.value.textbefore NOS ZERO ()
        )
        OUTPUTLIST (data_0, instanceid
        )
        WRAPPER (json "ds_almsit_info_product_data_8d957eca-2f88-4376-8236-4818901282c6")
    );

CREATE OR REPLACE TABLE bv_almsit_info_product_data_attributes I18N es_euro (
        access_token:text (extern),
        data:text (extern),
        commref:text (extern),
        instanceid:text,
        data_0:ds_almsit_info_product_data_data_0
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_almsit_info_product_data(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD data (=) OBL ONE
             ADD commref (=) OBL ONE
             ADD instanceid NOS ZERO ()
             ADD data_0 NOS ZERO ()
             ADD data_0.commref NOS ZERO ()
             ADD data_0.productattributes NOS ZERO ()
             ADD data_0.productattributes.brand NOS ZERO ()
             ADD data_0.productattributes.commrefstatus NOS ZERO ()
             ADD data_0.productattributes.devicerange NOS ZERO ()
             ADD data_0.productattributes.deviceshortname NOS ZERO ()
             ADD data_0.productattributes.longdescription NOS ZERO ()
             ADD data_0.productattributes.producttype NOS ZERO ()
             ADD data_0.productattributes.shortdescription NOS ZERO ()
        )
        OUTPUTLIST (data_0, instanceid
        )
        WRAPPER (json ds_almsit_info_product_data)
    );

CREATE OR REPLACE TABLE bv_apigee_token I18N es_euro (
        refresh_token_expires_in:text,
        api_product_list:text,
        api_product_list_json:apigee_token_api_product_list_json,
        organization_name:text,
        developeremail_0:text,
        token_type:text,
        issued_at:text,
        client_id:text,
        access_token:text,
        application_name:text,
        scope:text,
        expires_in:text,
        refresh_count:text,
        status:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE PARTIAL
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE 3500
    ADD SEARCHMETHOD apigee_token(
        I18N es_euro
        CONSTRAINTS (
             ADD refresh_token_expires_in NOS ZERO ()
             ADD api_product_list NOS ZERO ()
             ADD api_product_list_json NOS ZERO ()
             ADD api_product_list_json NOS ZERO ()
             ADD api_product_list_json.field_0 NOS ZERO ()
             ADD organization_name NOS ZERO ()
             ADD developeremail_0 NOS ZERO ()
             ADD token_type NOS ZERO ()
             ADD issued_at NOS ZERO ()
             ADD client_id NOS ZERO ()
             ADD access_token NOS ZERO ()
             ADD application_name NOS ZERO ()
             ADD scope NOS ZERO ()
             ADD expires_in NOS ZERO ()
             ADD refresh_count NOS ZERO ()
             ADD status NOS ZERO ()
        )
        OUTPUTLIST (access_token, api_product_list, api_product_list_json, application_name, client_id, developeremail_0, expires_in, issued_at, organization_name, refresh_count, refresh_token_expires_in, scope, status, token_type
        )
        WRAPPER (json apigee_token)
    )
    ATSOURCE_THROUGH_VDP_ONLY;

CREATE OR REPLACE TABLE bv_bsl_soap_getproductdetailbycommercialref I18N es_euro (
        parameters:getproductdetailbycommercialref_parameters,
        return:getproductdetailbycommercialref_return
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD getproductdetailbycommercialref(
        I18N es_euro
        CONSTRAINTS (
             ADD parameters (=,is null) OPT ONE
             ADD parameters.scope (=,is null) OPT ONE
             ADD parameters.scope.brand (=,is null) OPT ANY
             ADD parameters.scope.channel (=,is null) OPT ANY
             ADD parameters.scope.country (=,is null) OPT ANY
             ADD parameters.scope.function (=,is null) OPT ANY
             ADD parameters.scope.markets (=,is null) OPT ANY
             ADD parameters.scope.privacy (=,is null) OPT ANY
             ADD parameters.scope.program (=,is null) OPT ANY
             ADD parameters.scope.project (=,is null) OPT ANY
             ADD parameters.locale (=,is null) OPT ONE
             ADD parameters.locale.isocountry (=) OBL ONE
             ADD parameters.locale.isolanguage (=) OBL ONE
             ADD parameters.semanticcharacteristics (=,is null) OPT ANY
             ADD parameters.commercialref (=) OBL ONE
             ADD parameters.rangeid (=,is null) OPT ANY
             ADD parameters.datasource (=,is null) OPT ANY
             ADD parameters.version (=,is null) OPT ANY
             ADD parameters.showproductvaluedetail (=,is null) OPT ANY
             ADD parameters.scopeindependant (=,is null) OPT ANY
             ADD parameters.displayallhighlightedchar (=,is null) OPT ANY
             ADD parameters.fetchspecificcountries (=,is null) OPT ANY
             ADD parameters.fetchtaggedchars (=,is null) OPT ANY
             ADD parameters.fetchfeatureandbenefits (=,is null) OPT ANY
             ADD parameters.query (=,is null) OPT ANY
             ADD parameters.query (=,is null) OPT ONE
             ADD parameters.query.query (=) OBL ONE
             ADD return NOS ZERO ()
             ADD return.productbean NOS ZERO ()
             ADD return.productbean.characteristiccategories NOS ZERO ()
             ADD return.productbean.characteristiccategories NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.tag NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.tag NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.tag.value NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.description NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.externeturl NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.internaldocoid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.labelurl NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuationlabel NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.valuationlabel NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.charid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.charkey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.valuekey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.displayorder NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.valuationid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.charid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.displayorder NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.lockcase NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuationid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.keepvalue NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.symbolictobedisplayed NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.textafter NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.textbefore NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.charkey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.countryiso NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.countryname NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.countryoid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.lockcase NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.oid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.unity NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.unityid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.value NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valueid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuerendition NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.visible NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.charid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.charkey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.name NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.oid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.showninproductdetails NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.showinproductlist NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.displayname NOS ZERO ()
             ADD return.productbean.characteristiccategories.name NOS ZERO ()
             ADD return.productbean.characteristiccategories.oid NOS ZERO ()
             ADD return.productbean.commercialreference NOS ZERO ()
             ADD return.productbean.commercializedproduct NOS ZERO ()
             ADD return.productbean.commercializedproduct.brand NOS ZERO ()
             ADD return.productbean.commercializedproduct.commstatus NOS ZERO ()
             ADD return.productbean.commercializedproduct.commercialisationdate NOS ZERO ()
             ADD return.productbean.commercializedproduct.commercialized NOS ZERO ()
             ADD return.productbean.commercializedproduct.deliverytime NOS ZERO ()
             ADD return.productbean.commercializedproduct.description NOS ZERO ()
             ADD return.productbean.commercializedproduct.endofcommercialisationdate NOS ZERO ()
             ADD return.productbean.commercializedproduct.endofservicedate NOS ZERO ()
             ADD return.productbean.commercializedproduct.localedistributorcode NOS ZERO ()
             ADD return.productbean.commercializedproduct.localesalestatus NOS ZERO ()
             ADD return.productbean.commercializedproduct.localestockstatus NOS ZERO ()
             ADD return.productbean.commercializedproduct.nbdeliverydays NOS ZERO ()
             ADD return.productbean.commercializedproduct.price NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.comments NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.currency NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.price NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.validfrom NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.validto NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.value NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.oid NOS ZERO ()
             ADD return.productbean.commercializedproduct.oid NOS ZERO ()
             ADD return.productbean.description NOS ZERO ()
             ADD return.productbean.documentoids NOS ZERO ()
             ADD return.productbean.documentoids NOS ZERO ()
             ADD return.productbean.documentoids.documentoids NOS ZERO ()
             ADD return.productbean.eancode NOS ZERO ()
             ADD return.productbean.epdsdocumentoid NOS ZERO ()
             ADD return.productbean.greenpremium NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.tag NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.tag NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.tag.value NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.description NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.externeturl NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.internaldocoid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.labelurl NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuationlabel NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.valuationlabel NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.charid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.charkey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.valuekey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.displayorder NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.valuationid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.charid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.displayorder NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.lockcase NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuationid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.keepvalue NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.symbolictobedisplayed NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.textafter NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.textbefore NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.charkey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.countryiso NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.countryname NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.countryoid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.lockcase NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.oid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.unity NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.unityid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.value NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valueid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuerendition NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.visible NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.charid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.charkey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.name NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.oid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.showninproductdetails NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.showinproductlist NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.displayname NOS ZERO ()
             ADD return.productbean.logodocumentoid NOS ZERO ()
             ADD return.productbean.longdescription NOS ZERO ()
             ADD return.productbean.parentnodeoid NOS ZERO ()
             ADD return.productbean.parentrangeid NOS ZERO ()
             ADD return.productbean.parentrangeoid NOS ZERO ()
             ADD return.productbean.picturedocumentoid NOS ZERO ()
             ADD return.productbean.parents NOS ZERO ()
             ADD return.productbean.parents NOS ZERO ()
             ADD return.productbean.parents.nodeoid NOS ZERO ()
             ADD return.productbean.parents.rangeid NOS ZERO ()
             ADD return.productbean.parents.rangeoid NOS ZERO ()
             ADD return.productbean.ranges NOS ZERO ()
             ADD return.productbean.ranges NOS ZERO ()
             ADD return.productbean.ranges.name NOS ZERO ()
             ADD return.productbean.ranges.id NOS ZERO ()
             ADD return.productbean.ranges.oid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics NOS ZERO ()
             ADD return.productbean.semanticcharacteristics NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.tag NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.tag NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.tag.value NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.description NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.externeturl NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.internaldocoid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.labelurl NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuationlabel NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.valuationlabel NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.charid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.charkey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.valuekey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.displayorder NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.valuationid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.charid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.displayorder NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.lockcase NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuationid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.keepvalue NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.symbolictobedisplayed NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.textafter NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.textbefore NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.charkey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.countryiso NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.countryname NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.countryoid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.lockcase NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.oid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.unity NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.unityid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.value NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valueid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuerendition NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.visible NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.charid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.charkey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.name NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.oid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.showninproductdetails NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.showinproductlist NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.displayname NOS ZERO ()
             ADD return.productbean.shortdescription NOS ZERO ()
             ADD return.productbean.documentreferences NOS ZERO ()
             ADD return.productbean.documentreferences NOS ZERO ()
             ADD return.productbean.documentreferences._value NOS ZERO ()
             ADD return.productbean.documentreferences.doctype NOS ZERO ()
             ADD return.productbean.documentreferences.doctypeoid NOS ZERO ()
             ADD return.productbean.documentreferences.scoped NOS ZERO ()
             ADD return.productbean.documentreferences.bannerurl NOS ZERO ()
             ADD return.productbean.picturedocumentreference NOS ZERO ()
             ADD return.productbean.pictures NOS ZERO ()
             ADD return.productbean.pictures NOS ZERO ()
             ADD return.productbean.pictures.description NOS ZERO ()
             ADD return.productbean.pictures.id NOS ZERO ()
             ADD return.productbean.pictures.picturedocumentoid NOS ZERO ()
             ADD return.productbean.pictures.picturedocumentreference NOS ZERO ()
             ADD return.productbean.type NOS ZERO ()
             ADD return.productbean.subtype NOS ZERO ()
             ADD return.productbean.specificcountries NOS ZERO ()
             ADD return.productbean.specificcountries NOS ZERO ()
             ADD return.productbean.specificcountries.isocountry NOS ZERO ()
             ADD return.productbean.specificcountries.publicationdate NOS ZERO ()
             ADD return.productbean.featureandbenefitlist NOS ZERO ()
             ADD return.productbean.featureandbenefitlist NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.categoryid NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.featureandbenefitid NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.featurename NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.benefitvalue NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.category NOS ZERO ()
             ADD return.productbean.globalstatus NOS ZERO ()
             ADD return.productbean.oid NOS ZERO ()
             ADD return.productbean.productid NOS ZERO ()
        )
        OUTPUTLIST (parameters, return
        )
        WRAPPER (ws getproductdetailbycommercialref)
    );

CREATE OR REPLACE TABLE bv_bsl_soap_getproductdetailbycommercialrefv002 I18N es_euro (
        parameters:getproductdetailbycommercialrefv002_parameters,
        return:getproductdetailbycommercialrefv002_return
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD getproductdetailbycommercialrefv002(
        I18N es_euro
        CONSTRAINTS (
             ADD parameters (=,is null) OPT ONE
             ADD parameters.scope (=,is null) OPT ONE
             ADD parameters.scope.brand (=,is null) OPT ANY
             ADD parameters.scope.channel (=,is null) OPT ANY
             ADD parameters.scope.country (=,is null) OPT ANY
             ADD parameters.scope.function (=,is null) OPT ANY
             ADD parameters.scope.markets (=,is null) OPT ANY
             ADD parameters.scope.privacy (=,is null) OPT ANY
             ADD parameters.scope.program (=,is null) OPT ANY
             ADD parameters.scope.project (=,is null) OPT ANY
             ADD parameters.locale (=,is null) OPT ONE
             ADD parameters.locale.isocountry (=) OBL ONE
             ADD parameters.locale.isolanguage (=) OBL ONE
             ADD parameters.semanticcharacteristics (=,is null) OPT ANY
             ADD parameters.commercialref (=) OBL ONE
             ADD parameters.rangeid (=,is null) OPT ANY
             ADD parameters.showproductvaluedetail (=,is null) OPT ANY
             ADD parameters.scopeindependant (=,is null) OPT ANY
             ADD parameters.displayallhighlightedchar (=,is null) OPT ANY
             ADD parameters.fetchspecificcountries (=,is null) OPT ANY
             ADD parameters.fetchtaggedchars (=,is null) OPT ANY
             ADD parameters.fetchfeatureandbenefits (=,is null) OPT ANY
             ADD return NOS ZERO ()
             ADD return.productbean NOS ZERO ()
             ADD return.productbean.characteristiccategories NOS ZERO ()
             ADD return.productbean.characteristiccategories NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.tag NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.tag NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.tag.value NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.description NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.externeturl NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.internaldocoid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.labelurl NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuationlabel NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.valuationlabel NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.charid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.charkey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.valuekey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.displayorder NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuelineitems.valuationid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.charid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.displayorder NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.lockcase NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuelines.valuationid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.keepvalue NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.symbolictobedisplayed NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.textafter NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.textbefore NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.charkey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.countryiso NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.countryname NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.countryoid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.lockcase NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.oid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.unity NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.unityid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.value NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valueid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.valuerendition NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.values.visible NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.charid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.charkey NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.name NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.oid NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.showninproductdetails NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.showinproductlist NOS ZERO ()
             ADD return.productbean.characteristiccategories.characteristics.displayname NOS ZERO ()
             ADD return.productbean.characteristiccategories.name NOS ZERO ()
             ADD return.productbean.characteristiccategories.oid NOS ZERO ()
             ADD return.productbean.commercialreference NOS ZERO ()
             ADD return.productbean.commercializedproduct NOS ZERO ()
             ADD return.productbean.commercializedproduct.brand NOS ZERO ()
             ADD return.productbean.commercializedproduct.commstatus NOS ZERO ()
             ADD return.productbean.commercializedproduct.commercialisationdate NOS ZERO ()
             ADD return.productbean.commercializedproduct.commercialized NOS ZERO ()
             ADD return.productbean.commercializedproduct.deliverytime NOS ZERO ()
             ADD return.productbean.commercializedproduct.description NOS ZERO ()
             ADD return.productbean.commercializedproduct.endofcommercialisationdate NOS ZERO ()
             ADD return.productbean.commercializedproduct.endofservicedate NOS ZERO ()
             ADD return.productbean.commercializedproduct.localedistributorcode NOS ZERO ()
             ADD return.productbean.commercializedproduct.localesalestatus NOS ZERO ()
             ADD return.productbean.commercializedproduct.localestockstatus NOS ZERO ()
             ADD return.productbean.commercializedproduct.nbdeliverydays NOS ZERO ()
             ADD return.productbean.commercializedproduct.price NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.comments NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.currency NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.price NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.validfrom NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.validto NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.value NOS ZERO ()
             ADD return.productbean.commercializedproduct.price.oid NOS ZERO ()
             ADD return.productbean.commercializedproduct.oid NOS ZERO ()
             ADD return.productbean.description NOS ZERO ()
             ADD return.productbean.documentoids NOS ZERO ()
             ADD return.productbean.documentoids NOS ZERO ()
             ADD return.productbean.documentoids.documentoids NOS ZERO ()
             ADD return.productbean.eancode NOS ZERO ()
             ADD return.productbean.epdsdocumentoid NOS ZERO ()
             ADD return.productbean.greenpremium NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.tag NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.tag NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.tag.value NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.description NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.externeturl NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.internaldocoid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.labelurl NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuationlabel NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.valuationlabel NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.charid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.charkey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.valuekey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.displayorder NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuelineitems.valuationid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.charid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.displayorder NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.lockcase NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuelines.valuationid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.keepvalue NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.symbolictobedisplayed NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.textafter NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.textbefore NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.charkey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.countryiso NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.countryname NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.countryoid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.lockcase NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.oid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.unity NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.unityid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.value NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valueid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.valuerendition NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.values.visible NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.charid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.charkey NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.name NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.oid NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.showninproductdetails NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.showinproductlist NOS ZERO ()
             ADD return.productbean.highligthedcharacteristics.displayname NOS ZERO ()
             ADD return.productbean.logodocumentoid NOS ZERO ()
             ADD return.productbean.longdescription NOS ZERO ()
             ADD return.productbean.parentnodeoid NOS ZERO ()
             ADD return.productbean.parentrangeid NOS ZERO ()
             ADD return.productbean.parentrangeoid NOS ZERO ()
             ADD return.productbean.picturedocumentoid NOS ZERO ()
             ADD return.productbean.parents NOS ZERO ()
             ADD return.productbean.parents NOS ZERO ()
             ADD return.productbean.parents.nodeoid NOS ZERO ()
             ADD return.productbean.parents.rangeid NOS ZERO ()
             ADD return.productbean.parents.rangeoid NOS ZERO ()
             ADD return.productbean.ranges NOS ZERO ()
             ADD return.productbean.ranges NOS ZERO ()
             ADD return.productbean.ranges.name NOS ZERO ()
             ADD return.productbean.ranges.id NOS ZERO ()
             ADD return.productbean.ranges.oid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics NOS ZERO ()
             ADD return.productbean.semanticcharacteristics NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.tag NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.tag NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.tag.value NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.description NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.externeturl NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.internaldocoid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.labelurl NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuationlabel NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.valuationlabel NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.charid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.charkey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.valuekey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.displayorder NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuelineitems.valuationid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.charid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.displayorder NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.lockcase NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuelines.valuationid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.keepvalue NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.symbolictobedisplayed NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.textafter NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.textbefore NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.charkey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.countryiso NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.countryname NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.countryoid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.lockcase NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.oid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.unity NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.unityid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.value NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valueid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.valuerendition NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.values.visible NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.charid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.charkey NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.name NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.oid NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.showninproductdetails NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.showinproductlist NOS ZERO ()
             ADD return.productbean.semanticcharacteristics.displayname NOS ZERO ()
             ADD return.productbean.shortdescription NOS ZERO ()
             ADD return.productbean.documentreferences NOS ZERO ()
             ADD return.productbean.documentreferences NOS ZERO ()
             ADD return.productbean.documentreferences._value NOS ZERO ()
             ADD return.productbean.documentreferences.doctype NOS ZERO ()
             ADD return.productbean.documentreferences.doctypeoid NOS ZERO ()
             ADD return.productbean.documentreferences.scoped NOS ZERO ()
             ADD return.productbean.documentreferences.bannerurl NOS ZERO ()
             ADD return.productbean.picturedocumentreference NOS ZERO ()
             ADD return.productbean.pictures NOS ZERO ()
             ADD return.productbean.pictures NOS ZERO ()
             ADD return.productbean.pictures.description NOS ZERO ()
             ADD return.productbean.pictures.id NOS ZERO ()
             ADD return.productbean.pictures.picturedocumentoid NOS ZERO ()
             ADD return.productbean.pictures.picturedocumentreference NOS ZERO ()
             ADD return.productbean.type NOS ZERO ()
             ADD return.productbean.subtype NOS ZERO ()
             ADD return.productbean.specificcountries NOS ZERO ()
             ADD return.productbean.specificcountries NOS ZERO ()
             ADD return.productbean.specificcountries.isocountry NOS ZERO ()
             ADD return.productbean.specificcountries.publicationdate NOS ZERO ()
             ADD return.productbean.featureandbenefitlist NOS ZERO ()
             ADD return.productbean.featureandbenefitlist NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.categoryid NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.featureandbenefitid NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.featurename NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.benefitvalue NOS ZERO ()
             ADD return.productbean.featureandbenefitlist.category NOS ZERO ()
             ADD return.productbean.globalstatus NOS ZERO ()
             ADD return.productbean.oid NOS ZERO ()
             ADD return.productbean.productid NOS ZERO ()
        )
        OUTPUTLIST (parameters, return
        )
        WRAPPER (ws getproductdetailbycommercialrefv002)
    );

CREATE OR REPLACE TABLE bv_csv_ess_siteid_meterid I18N es_euro (
        client:text,
        clientid_0:text,
        clienttype_0:text,
        division:text,
        site:text,
        siteid:text,
        siteaddress:text,
        account:text,
        accountid:text,
        accountstatus:text,
        accountnotexpected:text,
        account_not_expected_dt:text,
        commodity:text,
        commodityid:text,
        meter:text,
        meterid:text,
        meteraddress:text,
        metercity:text,
        meterstate:text,
        metercountry:text,
        meterzip:text,
        reltioid:text
    )
    FOLDER = '/3 - integration/api3/v 1.0'
    DESCRIPTION = 'asset data from ess csv'
    CACHE FULL
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_csv_ess_siteid_meterid(
        I18N es_euro
        CONSTRAINTS (
             ADD client NOS ZERO ()
             ADD clientid_0 NOS ZERO ()
             ADD clienttype_0 NOS ZERO ()
             ADD division NOS ZERO ()
             ADD site NOS ZERO ()
             ADD siteid NOS ZERO ()
             ADD siteaddress NOS ZERO ()
             ADD account NOS ZERO ()
             ADD accountid NOS ZERO ()
             ADD accountstatus NOS ZERO ()
             ADD accountnotexpected NOS ZERO ()
             ADD account_not_expected_dt NOS ZERO ()
             ADD commodity NOS ZERO ()
             ADD commodityid NOS ZERO ()
             ADD meter NOS ZERO ()
             ADD meterid NOS ZERO ()
             ADD meteraddress NOS ZERO ()
             ADD metercity NOS ZERO ()
             ADD meterstate NOS ZERO ()
             ADD metercountry NOS ZERO ()
             ADD meterzip NOS ZERO ()
             ADD reltioid NOS ZERO ()
        )
        OUTPUTLIST (account, account_not_expected_dt, accountid, accountnotexpected, accountstatus, client, clientid_0, clienttype_0, commodity, commodityid, division, meter, meteraddress, metercity, metercountry, meterid, meterstate, meterzip, reltioid, site, siteaddress, siteid
        )
        WRAPPER (df bv_csv_ess_siteid_meterid)
    )
    DECLARE VIEW HASH INDEX siteid ON (siteid)
    DECLARE CACHE INDEX siteid ON (siteid);

CREATE OR REPLACE TABLE bv_csv_ess_siteid_meterid_1 I18N es_euro (
        client:text,
        clientid_0:text,
        clienttype_0:text,
        division:text,
        site:text,
        siteid:text,
        siteaddress:text,
        account:text,
        accountid:text,
        accountstatus:text,
        accountnotexpected:text,
        account_not_expected_dt:text,
        commodity:text,
        commodityid:text,
        meter:text,
        meterid:text,
        meteraddress:text,
        metercity:text,
        meterstate:text,
        metercountry:text,
        meterzip:text,
        reltioid:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE FULL
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_csv_ess_siteid_meterid_1(
        I18N es_euro
        CONSTRAINTS (
             ADD client NOS ZERO ()
             ADD clientid_0 NOS ZERO ()
             ADD clienttype_0 NOS ZERO ()
             ADD division NOS ZERO ()
             ADD site NOS ZERO ()
             ADD siteid NOS ZERO ()
             ADD siteaddress NOS ZERO ()
             ADD account NOS ZERO ()
             ADD accountid NOS ZERO ()
             ADD accountstatus NOS ZERO ()
             ADD accountnotexpected NOS ZERO ()
             ADD account_not_expected_dt NOS ZERO ()
             ADD commodity NOS ZERO ()
             ADD commodityid NOS ZERO ()
             ADD meter NOS ZERO ()
             ADD meterid NOS ZERO ()
             ADD meteraddress NOS ZERO ()
             ADD metercity NOS ZERO ()
             ADD meterstate NOS ZERO ()
             ADD metercountry NOS ZERO ()
             ADD meterzip NOS ZERO ()
             ADD reltioid NOS ZERO ()
        )
        OUTPUTLIST (account, account_not_expected_dt, accountid, accountnotexpected, accountstatus, client, clientid_0, clienttype_0, commodity, commodityid, division, meter, meteraddress, metercity, metercountry, meterid, meterstate, meterzip, reltioid, site, siteaddress, siteid
        )
        WRAPPER (df bv_csv_ess_siteid_meterid_1)
    )
    DECLARE VIEW CLUSTER INDEX meterid ON (meterid ASC)
    DECLARE CACHE INDEX meterid PRIMARY  ON (meterid ASC);

CREATE OR REPLACE TABLE bv_csv_sitelist I18N es_euro (
        client:text,
        clientid_0:text,
        clienttype_0:text,
        division:text,
        site:text,
        siteid_0:text,
        siteaddress_0:text,
        reltioid:text,
        userid:text
    )
    FOLDER = '/3 - integration/api1/archive'
    CACHE FULL
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD sitelist_csv(
        I18N es_euro
        CONSTRAINTS (
             ADD client NOS ZERO ()
             ADD clientid_0 NOS ZERO ()
             ADD clienttype_0 NOS ZERO ()
             ADD division NOS ZERO ()
             ADD site NOS ZERO ()
             ADD siteid_0 NOS ZERO ()
             ADD siteaddress_0 NOS ZERO ()
             ADD reltioid NOS ZERO ()
             ADD userid NOS ZERO ()
        )
        OUTPUTLIST (client, clientid_0, clienttype_0, division, reltioid, site, siteaddress_0, siteid_0, userid
        )
        WRAPPER (df "sitelist_csv_6af6aa75-9804-4e37-84fe-eb5095235187")
    )
    DECLARE CACHE INDEX siteid_index ON (siteid_0 ASC)
    ATCACHE_THROUGH_VDP_ONLY;

CREATE OR REPLACE TABLE bv_dynamodb_almsit_did I18N es_euro (
        almassetidentifier:text (original_name = 'almId', sourcetypeid = '12'),
        brand:text (original_name = 'brand', sourcetypeid = '12'),
        commref:text (original_name = 'commRef', sourcetypeid = '12'),
        devicetype:text (original_name = 'deviceType', sourcetypeid = '12'),
        range1:text (original_name = 'range', sourcetypeid = '12'),
        serialnumber:text (original_name = 'serialNumber', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_almsit_dynamodb(
        I18N es_euro
        CONSTRAINTS (
             ADD almassetidentifier (any) OPT ANY
             ADD brand (any) OPT ANY
             ADD commref (any) OPT ANY
             ADD devicetype (any) OPT ANY
             ADD range1 (any) OPT ANY
             ADD serialnumber (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, brand, commref, devicetype, range1, serialnumber
        )
        WRAPPER (custom ds_almsit_dynamodb_1)
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_did_3 I18N es_euro (
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        brand:text (original_name = 'brand', sourcetypeid = '12'),
        commref:text (original_name = 'commRef', sourcetypeid = '12'),
        devicetype:text (original_name = 'deviceType', sourcetypeid = '12'),
        range:text (original_name = 'range', sourcetypeid = '12'),
        serialnumber:text (original_name = 'serialNumber', sourcetypeid = '12'),
        ref:text (original_name = 'ref', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api3/archive'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_dynamodb_almsit_did_3(
        I18N es_euro
        CONSTRAINTS (
             ADD almid (any) OPT ANY
             ADD brand (any) OPT ANY
             ADD commref (any) OPT ANY
             ADD devicetype (any) OPT ANY
             ADD range (any) OPT ANY
             ADD serialnumber (any) OPT ANY
             ADD ref (any) OPT ANY
        )
        OUTPUTLIST (almid, brand, commref, devicetype, range, ref, serialnumber
        )
        WRAPPER (custom bv_dynamodb_almsit_did_3)
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_hierarchy I18N es_euro (
        nodepath:text (original_name = 'nodePath', sourcetypeid = '12'),
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        parentassetid:text (original_name = 'parentNodeId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD nodepath (any) OPT ANY
             ADD almassetidentifier (any) OPT ANY
             ADD parentassetid (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, nodepath, parentassetid
        )
        WRAPPER (custom "ds_dynamodb_almsit_9cbd8103-2514-4cd4-8b82-fb9f47ef37b3")
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_hierarchy_new I18N es_euro (
        uniqueid:text (original_name = 'uniqueId', sourcetypeid = '12'),
        nodepath:text (original_name = 'nodePath', sourcetypeid = '12'),
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        parentassetid:text (original_name = 'parentNodeId', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api4/v 2.0'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD uniqueid (any) OPT ANY
             ADD nodepath (any) OPT ANY
             ADD almassetidentifier (any) OPT ANY
             ADD parentassetid (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, nodepath, parentassetid, uniqueid
        )
        WRAPPER (custom "ds_dynamodb_almsit_087b4ef0-660f-4000-b6cb-c6763fbfe189")
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_info_attribute I18N es_euro (
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        assetinstallationtype:text (original_name = 'assetInstallationType', sourcetypeid = '12'),
        name:text (original_name = 'assetName', sourcetypeid = '12'),
        commissioningdate:text (original_name = 'commissioningDate', sourcetypeid = '12'),
        createdby:text (original_name = 'createdBy', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12'),
        equipmenttype:text (original_name = 'equipmentType', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD almassetidentifier (any) OPT ANY
             ADD assetinstallationtype (any) OPT ANY
             ADD name (any) OPT ANY
             ADD commissioningdate (any) OPT ANY
             ADD createdby (any) OPT ANY
             ADD description (any) OPT ANY
             ADD equipmenttype (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, assetinstallationtype, commissioningdate, createdby, description, equipmenttype, name
        )
        WRAPPER (custom "ds_dynamodb_almsit_72f9fb26-9e22-4747-a897-d248b9277e7e")
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_info_attribute_3 I18N es_euro (
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        assetinstallationtype:text (original_name = 'assetInstallationType', sourcetypeid = '12'),
        assetname:text (original_name = 'assetName', sourcetypeid = '12'),
        commissioningdate:text (original_name = 'commissioningDate', sourcetypeid = '12'),
        commref:text (original_name = 'commRef', sourcetypeid = '12'),
        createdby:text (original_name = 'createdBy', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12'),
        equipmenttype:text (original_name = 'equipmentType', sourcetypeid = '12'),
        isalmasset:boolean (original_name = 'isAlmAsset', sourcetypeid = '16'),
        isrootnode:boolean (original_name = 'isRootNode', sourcetypeid = '16'),
        lifecyclestatus:boolean (original_name = 'lifecycleStatus', sourcetypeid = '16'),
        publishercode:boolean (original_name = 'publisherCode', sourcetypeid = '16'),
        serialnumber:boolean (original_name = 'serialNumber', sourcetypeid = '16')
    )
    FOLDER = '/3 - integration/api3/archive'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_almsit_dynamodb(
        I18N es_euro
        CONSTRAINTS (
             ADD almassetidentifier (any) OPT ANY
             ADD assetinstallationtype (any) OPT ANY
             ADD assetname (any) OPT ANY
             ADD commissioningdate (any) OPT ANY
             ADD commref (any) OPT ANY
             ADD createdby (any) OPT ANY
             ADD description (any) OPT ANY
             ADD equipmenttype (any) OPT ANY
             ADD isalmasset (any) OPT ANY
             ADD isrootnode (any) OPT ANY
             ADD lifecyclestatus (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD serialnumber (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, assetinstallationtype, assetname, commissioningdate, commref, createdby, description, equipmenttype, isalmasset, isrootnode, lifecyclestatus, publishercode, serialnumber
        )
        WRAPPER (custom "ds_almsit_dynamodb_8beb07a8-aca7-492e-8059-b7c62f5e8092_0")
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_info_attribute_index I18N es_euro (
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        equipmenttype:text (original_name = 'equipmentType', sourcetypeid = '12'),
        commissioningdate:text (original_name = 'commissioningDate', sourcetypeid = '12'),
        assetinstallationtype:text (original_name = 'assetInstallationType', sourcetypeid = '12'),
        createdby:text (original_name = 'createdBy', sourcetypeid = '12'),
        lifecyclestatus:text (original_name = 'lifeCycleStatus', sourcetypeid = '12'),
        commref:text (original_name = 'commRef', sourcetypeid = '12'),
        serialnumber:text (original_name = 'serialNumber', sourcetypeid = '12'),
        brand:text (original_name = 'brand', sourcetypeid = '12'),
        devicetype:text (original_name = 'deviceType', sourcetypeid = '12'),
        assetname:text (original_name = 'assetName', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD almassetidentifier (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD equipmenttype (any) OPT ANY
             ADD commissioningdate (any) OPT ANY
             ADD assetinstallationtype (any) OPT ANY
             ADD createdby (any) OPT ANY
             ADD lifecyclestatus (any) OPT ANY
             ADD commref (any) OPT ANY
             ADD serialnumber (any) OPT ANY
             ADD brand (any) OPT ANY
             ADD devicetype (any) OPT ANY
             ADD assetname (any) OPT ANY
             ADD description (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, assetinstallationtype, assetname, brand, commissioningdate, commref, createdby, description, devicetype, equipmenttype, lifecyclestatus, publishercode, serialnumber
        )
        WRAPPER (custom "ds_dynamodb_almsit_9c42d013-8adb-496b-9146-1eaf6c84401f")
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_registration I18N es_euro (
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        useraccountdetails:text,
        userroles:text,
        assetlog:text,
        installationdate:text (original_name = 'installationDate', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD almassetidentifier (any) OPT ANY
             ADD siteid (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD useraccountdetails (any) OPT ANY
             ADD userroles (any) OPT ANY
             ADD assetlog (any) OPT ANY
             ADD installationdate (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, assetlog, installationdate, publishercode, siteid, useraccountdetails, userroles
        )
        WRAPPER (custom "ds_dynamodb_almsit_79805548-2c7d-4d79-a005-27c7746f1447")
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_registration_3 I18N es_euro (
        assetregistrationid:text (original_name = 'assetRegistrationId', sourcetypeid = '12'),
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        commref:text (original_name = 'commRef', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        serialnumber:text (original_name = 'serialNumber', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        userfedid:text (original_name = 'userFedId', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api3/archive'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_dynamodb_almsit_registration_3(
        I18N es_euro
        CONSTRAINTS (
             ADD assetregistrationid (any) OPT ANY
             ADD almassetidentifier (any) OPT ANY
             ADD commref (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD serialnumber (any) OPT ANY
             ADD siteid (any) OPT ANY
             ADD userfedid (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, assetregistrationid, commref, publishercode, serialnumber, siteid, userfedid
        )
        WRAPPER (custom bv_dynamodb_almsit_registration_3)
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_registration_new I18N es_euro (
        almassetidentifier:text (original_name = 'almAssetIdentifier', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        useraccountdetails:text,
        userroles:text,
        assetlog:text,
        installationdate:text (original_name = 'installationDate', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD almassetidentifier (any) OPT ANY
             ADD siteid (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD useraccountdetails (any) OPT ANY
             ADD userroles (any) OPT ANY
             ADD assetlog (any) OPT ANY
             ADD installationdate (any) OPT ANY
        )
        OUTPUTLIST (almassetidentifier, assetlog, installationdate, publishercode, siteid, useraccountdetails, userroles
        )
        WRAPPER (custom "ds_dynamodb_almsit_5083fdf5-5301-4047-ad2c-51aa3738d18c")
    );

CREATE OR REPLACE TABLE bv_dynamodb_almsit_sites_hierarchy I18N es_euro (
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        sublocationid:text (original_name = 'subLocationId', sourcetypeid = '12'),
        accountdetails:text,
        address:text,
        name:text (original_name = 'name', sourcetypeid = '12'),
        sublocationpath:text (original_name = 'subLocationPath', sourcetypeid = '12'),
        type:text (original_name = 'type', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12'),
        contact:text (original_name = 'contact', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_almsit(
        I18N es_euro
        CONSTRAINTS (
             ADD siteid (any) OPT ANY
             ADD sublocationid (any) OPT ANY
             ADD accountdetails (any) OPT ANY
             ADD address (any) OPT ANY
             ADD name (any) OPT ANY
             ADD sublocationpath (any) OPT ANY
             ADD type (any) OPT ANY
             ADD description (any) OPT ANY
             ADD contact (any) OPT ANY
        )
        OUTPUTLIST (accountdetails, address, contact, description, name, siteid, sublocationid, sublocationpath, type
        )
        WRAPPER (custom ds_dynamodb_almsit)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_customer_sites_mapping I18N es_euro (
        customerid:text (original_name = 'customerId', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_dfdev(
        I18N es_euro
        CONSTRAINTS (
             ADD customerid (any) OPT ANY
             ADD siteid (any) OPT ANY
        )
        OUTPUTLIST (customerid, siteid
        )
        WRAPPER (custom "ds_dynamodb_dfdev_4cf48f2d-6dbc-4892-b4ad-07b2862be9cc")
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_indexedquery I18N es_euro (
        createdby:text (original_name = 'createdBy', sourcetypeid = '12'),
        sublocationid:text (original_name = 'subLocationId', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        version:double (original_name = 'version', sourcetypeid = '8'),
        sublocationpath:text (original_name = 'subLocationPath', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        reltiocertified:text (original_name = 'reltioCertified', sourcetypeid = '12'),
        status:text (original_name = 'status', sourcetypeid = '12'),
        name:text (original_name = 'name', sourcetypeid = '12'),
        lang:text (original_name = 'lang', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenID', sourcetypeid = '12'),
        blockbfo:text (original_name = 'blockBFO', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12'),
        reltioentityid:text (original_name = 'reltioEntityId', sourcetypeid = '12'),
        type:text (original_name = 'type', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_dfdev_indexedquery(
        I18N es_euro
        CONSTRAINTS (
             ADD createdby (any) OPT ANY
             ADD sublocationid (any) OPT ANY
             ADD siteid (any) OPT ANY
             ADD version (any) OPT ANY
             ADD sublocationpath (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD reltiocertified (any) OPT ANY
             ADD status (any) OPT ANY
             ADD name (any) OPT ANY
             ADD lang (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
             ADD blockbfo (any) OPT ANY
             ADD description (any) OPT ANY
             ADD reltioentityid (any) OPT ANY
             ADD type (any) OPT ANY
        )
        OUTPUTLIST (blockbfo, createdby, description, lang, name, publishercode, reltiocertified, reltioentityid, reltiogoldenid, siteid, status, sublocationid, sublocationpath, type, version
        )
        WRAPPER (custom ds_dynamodb_dfdev_indexedquery)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_master_customerid I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_dfdev(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD essid (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id, reltiogoldenid
        )
        WRAPPER (custom "ds_dynamodb_dfdev_c5cdb321-0248-4e24-afd7-a6e263f9905b")
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_master_siteid I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_dynamodb_dfdev_master_siteid(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD essid (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id, reltiogoldenid
        )
        WRAPPER (custom iv_master_alm_emcp_ess_site_id)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_master_siteid_3 I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_dynamodb_dfdev_master_siteid_3(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD essid (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id, reltiogoldenid
        )
        WRAPPER (custom bv_dynamodb_dfdev_master_siteid_3)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_master_siteid_archive I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenId', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api1/archive'
    CACHE FULL
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_dynamodb_dfdev_master_siteid(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD essid (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id, reltiogoldenid
        )
        WRAPPER (custom bv_dynamodb_dfdev_master_siteid)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_master_siteid_v2_1 I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenId', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api1/archive/v2.1'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_dynamodb_dfdev_master_siteid(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD essid (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id, reltiogoldenid
        )
        WRAPPER (custom bv_dynamodb_dfdev_master_siteid_v2_1)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_master_siteid_v2_archive I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenId', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api1/archive'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_dynamodb_dfdev_master_siteid(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD essid (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id, reltiogoldenid
        )
        WRAPPER (custom bv_dynamodb_dfdev_master_siteid_v2)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_master_sublocationids I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_dynamodb_dfdev_master_sublocationids(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD essid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id
        )
        WRAPPER (custom bv_dynamodb_dfdev_master_sublocationids)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_sites I18N es_euro (
        createdby:text (original_name = 'createdBy', sourcetypeid = '12'),
        sublocationid:text (original_name = 'subLocationId', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        version:double (original_name = 'version', sourcetypeid = '8'),
        sublocationpath:text (original_name = 'subLocationPath', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        reltiocertified:text (original_name = 'reltioCertified', sourcetypeid = '12'),
        status:text (original_name = 'status', sourcetypeid = '12'),
        name:text (original_name = 'name', sourcetypeid = '12'),
        lang:text (original_name = 'lang', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenID', sourcetypeid = '12'),
        blockbfo:text (original_name = 'blockBFO', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12'),
        reltioentityid:text (original_name = 'reltioEntityId', sourcetypeid = '12'),
        type:text (original_name = 'type', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_dynamodb_dfdev_sites_1(
        I18N es_euro
        CONSTRAINTS (
             ADD createdby (any) OPT ANY
             ADD sublocationid (any) OPT ANY
             ADD siteid (any) OPT ANY
             ADD version (any) OPT ANY
             ADD sublocationpath (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD reltiocertified (any) OPT ANY
             ADD status (any) OPT ANY
             ADD name (any) OPT ANY
             ADD lang (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
             ADD blockbfo (any) OPT ANY
             ADD description (any) OPT ANY
             ADD reltioentityid (any) OPT ANY
             ADD type (any) OPT ANY
        )
        OUTPUTLIST (blockbfo, createdby, description, lang, name, publishercode, reltiocertified, reltioentityid, reltiogoldenid, siteid, status, sublocationid, sublocationpath, type, version
        )
        WRAPPER (custom bv_dynamodb_dfdev_sites_1)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_sites_1_archive_orginal I18N es_euro (
        createdby:text (original_name = 'createdBy', sourcetypeid = '12'),
        sublocationid:text (original_name = 'subLocationId', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        version:double (original_name = 'version', sourcetypeid = '8'),
        sublocationpath:text (original_name = 'subLocationPath', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        reltiocertified:text (original_name = 'reltioCertified', sourcetypeid = '12'),
        status:text (original_name = 'status', sourcetypeid = '12'),
        name:text (original_name = 'name', sourcetypeid = '12'),
        lang:text (original_name = 'lang', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenID', sourcetypeid = '12'),
        blockbfo:text (original_name = 'blockBFO', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12'),
        reltioentityid:text (original_name = 'reltioEntityId', sourcetypeid = '12'),
        type:text (original_name = 'type', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api1/archive'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_dynamodb_dfdev_sites_1(
        I18N es_euro
        CONSTRAINTS (
             ADD createdby (any) OPT ANY
             ADD sublocationid (any) OPT ANY
             ADD siteid (any) OPT ANY
             ADD version (any) OPT ANY
             ADD sublocationpath (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD reltiocertified (any) OPT ANY
             ADD status (any) OPT ANY
             ADD name (any) OPT ANY
             ADD lang (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
             ADD blockbfo (any) OPT ANY
             ADD description (any) OPT ANY
             ADD reltioentityid (any) OPT ANY
             ADD type (any) OPT ANY
        )
        OUTPUTLIST (blockbfo, createdby, description, lang, name, publishercode, reltiocertified, reltioentityid, reltiogoldenid, siteid, status, sublocationid, sublocationpath, type, version
        )
        WRAPPER (custom bv_dynamodb_dfdev_sites_1_archive_orginal)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_sites_1_copy I18N es_euro (
        createdby:text (original_name = 'createdBy', sourcetypeid = '12'),
        sublocationid:text (original_name = 'subLocationId', sourcetypeid = '12'),
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        version:double (original_name = 'version', sourcetypeid = '8'),
        sublocationpath:text (original_name = 'subLocationPath', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        reltiocertified:text (original_name = 'reltioCertified', sourcetypeid = '12'),
        status:text (original_name = 'status', sourcetypeid = '12'),
        name:text (original_name = 'name', sourcetypeid = '12'),
        lang:text (original_name = 'lang', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenID', sourcetypeid = '12'),
        blockbfo:text (original_name = 'blockBFO', sourcetypeid = '12'),
        description:text (original_name = 'description', sourcetypeid = '12'),
        reltioentityid:text (original_name = 'reltioEntityId', sourcetypeid = '12'),
        type:text (original_name = 'type', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api2/newdesign'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_dynamodb_dfdev_sites_1(
        I18N es_euro
        CONSTRAINTS (
             ADD createdby (any) OPT ANY
             ADD sublocationid (any) OPT ANY
             ADD siteid (any) OPT ANY
             ADD version (any) OPT ANY
             ADD sublocationpath (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD reltiocertified (any) OPT ANY
             ADD status (any) OPT ANY
             ADD name (any) OPT ANY
             ADD lang (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
             ADD blockbfo (any) OPT ANY
             ADD description (any) OPT ANY
             ADD reltioentityid (any) OPT ANY
             ADD type (any) OPT ANY
        )
        OUTPUTLIST (blockbfo, createdby, description, lang, name, publishercode, reltiocertified, reltioentityid, reltiogoldenid, siteid, status, sublocationid, sublocationpath, type, version
        )
        WRAPPER (custom bv_dynamodb_dfdev_sites_1_copy)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_sites_3 I18N es_euro (
        siteid:text (original_name = 'siteId', sourcetypeid = '12'),
        name:text (original_name = 'name', sourcetypeid = '12'),
        publishercode:text (original_name = 'publisherCode', sourcetypeid = '12'),
        reltiogoldenid:text (original_name = 'reltioGoldenID', sourcetypeid = '12'),
        createdby:text (original_name = 'createdBy', sourcetypeid = '12')
    )
    FOLDER = '/3 - integration/api3/archive'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dfdev(
        I18N es_euro
        CONSTRAINTS (
             ADD siteid (any) OPT ANY
             ADD name (any) OPT ANY
             ADD publishercode (any) OPT ANY
             ADD reltiogoldenid (any) OPT ANY
             ADD createdby (any) OPT ANY
        )
        OUTPUTLIST (createdby, name, publishercode, reltiogoldenid, siteid
        )
        WRAPPER (custom ds_dfdev_0)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfdev_user_customer_mapping I18N es_euro (
        userid:text (original_name = 'userId', sourcetypeid = '12'),
        customerid:text (original_name = 'customerId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_dfdev(
        I18N es_euro
        CONSTRAINTS (
             ADD userid (any) OPT ANY
             ADD customerid (any) OPT ANY
        )
        OUTPUTLIST (customerid, userid
        )
        WRAPPER (custom ds_dynamodb_dfdev)
    );

CREATE OR REPLACE TABLE bv_dynamodb_dfe_dev_assetid I18N es_euro (
        id:text (original_name = 'id', sourcetypeid = '12'),
        emcpid:text (original_name = 'emcpId', sourcetypeid = '12'),
        almid:text (original_name = 'almId', sourcetypeid = '12'),
        essid:text (original_name = 'essId', sourcetypeid = '12')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_dynamodb_dfe_dev_assetid(
        I18N es_euro
        CONSTRAINTS (
             ADD id (any) OPT ANY
             ADD emcpid (any) OPT ANY
             ADD almid (any) OPT ANY
             ADD essid (any) OPT ANY
        )
        OUTPUTLIST (almid, emcpid, essid, id
        )
        WRAPPER (custom ds_dynamodb_dfe_dev_assetid)
    );

CREATE OR REPLACE TABLE bv_emcp_alarm I18N es_euro (
        variables:text (extern),
        query:text (extern),
        alarmoccurrences:ds_emcp_apis_alarmoccurrences
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD alarmoccurrences NOS ZERO ()
             ADD alarmoccurrences.totalcount NOS ZERO ()
             ADD alarmoccurrences.pageinfo NOS ZERO ()
             ADD alarmoccurrences.pageinfo.hasnextpage NOS ZERO ()
             ADD alarmoccurrences.pageinfo.haspreviouspage NOS ZERO ()
             ADD alarmoccurrences.pageinfo.__typename NOS ZERO ()
             ADD alarmoccurrences.items NOS ZERO ()
             ADD alarmoccurrences.items NOS ZERO ()
             ADD alarmoccurrences.items.id NOS ZERO ()
             ADD alarmoccurrences.items.starttime NOS ZERO ()
             ADD alarmoccurrences.items.endtime NOS ZERO ()
             ADD alarmoccurrences.items.alarmstate NOS ZERO ()
             ADD alarmoccurrences.items.measures NOS ZERO ()
             ADD alarmoccurrences.items.possiblecause NOS ZERO ()
             ADD alarmoccurrences.items.possibleproblem NOS ZERO ()
             ADD alarmoccurrences.items.possiblerecommendation NOS ZERO ()
             ADD alarmoccurrences.items.possiblerisk NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.psval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.name NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.label NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.description NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.mandatory NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.visible NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.defival NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.deffval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.defsval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.orderingtype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.encodingtype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.propertytype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.accesstype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.facettype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.enumurn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.id NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.name NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.issi NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.quantityname NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.symbol NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.ptsval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.pival NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.pfval NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.id NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmcontrol NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmfamily NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmmodel NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmpriority NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmstate NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconceptid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thingid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.tsmath NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.name NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.icon NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.description NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.id NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.description NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.name NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.packageid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.handle NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.__typename NOS ZERO ()
             ADD alarmoccurrences.items.acknowledgementalarmstatetransition NOS ZERO ()
             ADD alarmoccurrences.items.__typename NOS ZERO ()
             ADD alarmoccurrences.__typename NOS ZERO ()
        )
        OUTPUTLIST (alarmoccurrences
        )
        WRAPPER (json ds_emcp_apis)
    );

CREATE OR REPLACE TABLE bv_emcp_alarms I18N es_euro (
        access_token:text (extern),
        assetid:text (extern),
        alarmoccurrences:ds_emcp_alarms_alarmoccurrences
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_alarms(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD assetid (=) OBL ONE
             ADD alarmoccurrences NOS ZERO ()
             ADD alarmoccurrences.totalcount NOS ZERO ()
             ADD alarmoccurrences.pageinfo NOS ZERO ()
             ADD alarmoccurrences.pageinfo.hasnextpage NOS ZERO ()
             ADD alarmoccurrences.pageinfo.haspreviouspage NOS ZERO ()
             ADD alarmoccurrences.pageinfo.__typename NOS ZERO ()
             ADD alarmoccurrences.items NOS ZERO ()
             ADD alarmoccurrences.items NOS ZERO ()
             ADD alarmoccurrences.items.id NOS ZERO ()
             ADD alarmoccurrences.items.starttime NOS ZERO ()
             ADD alarmoccurrences.items.endtime NOS ZERO ()
             ADD alarmoccurrences.items.alarmstate NOS ZERO ()
             ADD alarmoccurrences.items.measures NOS ZERO ()
             ADD alarmoccurrences.items.possiblecause NOS ZERO ()
             ADD alarmoccurrences.items.possibleproblem NOS ZERO ()
             ADD alarmoccurrences.items.possiblerecommendation NOS ZERO ()
             ADD alarmoccurrences.items.possiblerisk NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.psval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.name NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.label NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.description NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.mandatory NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.visible NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.defival NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.deffval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.defsval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.orderingtype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.encodingtype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.propertytype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.accesstype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.facettype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.enumurn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.id NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.name NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.issi NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.quantityname NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.symbol NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.ptsval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.pival NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.pfval NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.id NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmcontrol NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmfamily NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmmodel NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmpriority NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmstate NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconceptid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thingid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.tsmath NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.name NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.icon NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.description NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.id NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.description NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.name NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.packageid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.handle NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.__typename NOS ZERO ()
             ADD alarmoccurrences.items.acknowledgementalarmstatetransition NOS ZERO ()
             ADD alarmoccurrences.items.__typename NOS ZERO ()
             ADD alarmoccurrences.__typename NOS ZERO ()
        )
        OUTPUTLIST (alarmoccurrences
        )
        WRAPPER (json ds_emcp_alarms)
    );

CREATE OR REPLACE TABLE bv_emcp_alarms_new I18N es_euro (
        access_token:text (extern),
        starttime:text (extern),
        endtime:text (extern),
        assetid:text (extern),
        alarmoccurrences:ds_emcp_alarms_alarmoccurrences
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_alarms(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD starttime (=) OBL ONE
             ADD endtime (=) OBL ONE
             ADD assetid (=) OBL ONE
             ADD alarmoccurrences NOS ZERO ()
             ADD alarmoccurrences.totalcount NOS ZERO ()
             ADD alarmoccurrences.pageinfo NOS ZERO ()
             ADD alarmoccurrences.pageinfo.hasnextpage NOS ZERO ()
             ADD alarmoccurrences.pageinfo.haspreviouspage NOS ZERO ()
             ADD alarmoccurrences.pageinfo.__typename NOS ZERO ()
             ADD alarmoccurrences.items NOS ZERO ()
             ADD alarmoccurrences.items NOS ZERO ()
             ADD alarmoccurrences.items.id NOS ZERO ()
             ADD alarmoccurrences.items.starttime NOS ZERO ()
             ADD alarmoccurrences.items.endtime NOS ZERO ()
             ADD alarmoccurrences.items.alarmstate NOS ZERO ()
             ADD alarmoccurrences.items.measures NOS ZERO ()
             ADD alarmoccurrences.items.possiblecause NOS ZERO ()
             ADD alarmoccurrences.items.possibleproblem NOS ZERO ()
             ADD alarmoccurrences.items.possiblerecommendation NOS ZERO ()
             ADD alarmoccurrences.items.possiblerisk NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.psval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.name NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.label NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.description NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.mandatory NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.visible NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.defival NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.deffval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.defsval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.orderingtype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.encodingtype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.propertytype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.accesstype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.facettype NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.enumurn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.id NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.name NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.issi NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.quantityname NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.unit.symbol NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.property.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.ptsval NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.pival NOS ZERO ()
             ADD alarmoccurrences.items.alarmoccurrencepvalues.pfval NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.id NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmcontrol NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmfamily NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmmodel NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmpriority NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmstate NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconceptid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thingid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.tsmath NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.urn NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.name NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.icon NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.description NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.id NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.description NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.name NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.packageid NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.alarmeventconceptcategory.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.alarmconcept.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.handle NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.label NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.thing.__typename NOS ZERO ()
             ADD alarmoccurrences.items.alarminstance.__typename NOS ZERO ()
             ADD alarmoccurrences.items.acknowledgementalarmstatetransition NOS ZERO ()
             ADD alarmoccurrences.items.__typename NOS ZERO ()
             ADD alarmoccurrences.__typename NOS ZERO ()
        )
        OUTPUTLIST (alarmoccurrences
        )
        WRAPPER (json "ds_emcp_alarms_289f8ce8-5367-4396-8559-9b3b5353a922")
    );

CREATE OR REPLACE TABLE bv_emcp_asset I18N es_euro (
        access_token:text (extern),
        assetid:text (extern),
        things:ds_emcp_asset_things
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_asset(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD assetid (=) OBL ONE
             ADD things NOS ZERO ()
             ADD things.totalcount NOS ZERO ()
             ADD things.items NOS ZERO ()
             ADD things.items NOS ZERO ()
             ADD things.items.__typename NOS ZERO ()
             ADD things.items.id NOS ZERO ()
             ADD things.items.name NOS ZERO ()
             ADD things.items.label NOS ZERO ()
             ADD things.items.handle NOS ZERO ()
             ADD things.items.concept NOS ZERO ()
             ADD things.items.concept.__typename NOS ZERO ()
             ADD things.items.concept.urn NOS ZERO ()
             ADD things.items.concept.icon NOS ZERO ()
             ADD things.items.concept.label NOS ZERO ()
             ADD things.items.concept.description NOS ZERO ()
             ADD things.items.concept.conceptkind NOS ZERO ()
             ADD things.items.pvalues NOS ZERO ()
             ADD things.items.pvalues NOS ZERO ()
             ADD things.items.pvalues.__typename NOS ZERO ()
             ADD things.items.pvalues.pfval NOS ZERO ()
             ADD things.items.pvalues.psval NOS ZERO ()
             ADD things.items.pvalues.property NOS ZERO ()
             ADD things.items.pvalues.property.__typename NOS ZERO ()
             ADD things.items.pvalues.property.name NOS ZERO ()
             ADD things.items.pvalues.property.urn NOS ZERO ()
             ADD things.items.pvalues.property.label NOS ZERO ()
             ADD things.items.pvalues.property.description NOS ZERO ()
             ADD things.items.pvalues.property.mandatory NOS ZERO ()
             ADD things.items.pvalues.property.visible NOS ZERO ()
             ADD things.items.pvalues.property.example NOS ZERO ()
             ADD things.items.pvalues.property.deffval NOS ZERO ()
             ADD things.items.pvalues.property.defsval NOS ZERO ()
             ADD things.items.pvalues.property.orderingtype NOS ZERO ()
             ADD things.items.pvalues.property.encodingtype NOS ZERO ()
             ADD things.items.pvalues.property.propertytype NOS ZERO ()
             ADD things.items.pvalues.property.accesstype NOS ZERO ()
             ADD things.items.pvalues.property.facettype NOS ZERO ()
             ADD things.items.pvalues.property.unit NOS ZERO ()
             ADD things.items.pvalues.property.unit.__typename NOS ZERO ()
             ADD things.items.pvalues.property.unit.name NOS ZERO ()
             ADD things.items.pvalues.property.unit.issi NOS ZERO ()
             ADD things.items.pvalues.property.unit.quantityname NOS ZERO ()
             ADD things.items.pvalues.property.unit.symbol NOS ZERO ()
             ADD things.items.pvalues.property.enumurn NOS ZERO ()
             ADD things.items.pvalues.property.defival NOS ZERO ()
             ADD things.items.pvalues.pival NOS ZERO ()
             ADD things.__typename NOS ZERO ()
        )
        OUTPUTLIST (things
        )
        WRAPPER (json "ds_emcp_asset_e2c40006-b166-40ef-90b6-1c2c8afaf99b")
    );

CREATE OR REPLACE TABLE bv_emcp_asset_details I18N es_euro (
        variables:text (extern),
        query:text (extern),
        things:ds_emcp_apis_things
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD things NOS ZERO ()
             ADD things.totalcount NOS ZERO ()
             ADD things.items NOS ZERO ()
             ADD things.items NOS ZERO ()
             ADD things.items.__typename NOS ZERO ()
             ADD things.items.id NOS ZERO ()
             ADD things.items.name NOS ZERO ()
             ADD things.items.label NOS ZERO ()
             ADD things.items.handle NOS ZERO ()
             ADD things.items.concept NOS ZERO ()
             ADD things.items.concept.__typename NOS ZERO ()
             ADD things.items.concept.urn NOS ZERO ()
             ADD things.items.concept.icon NOS ZERO ()
             ADD things.items.concept.label NOS ZERO ()
             ADD things.items.concept.description NOS ZERO ()
             ADD things.items.concept.conceptkind NOS ZERO ()
             ADD things.items.pvalues NOS ZERO ()
             ADD things.items.pvalues NOS ZERO ()
             ADD things.items.pvalues.__typename NOS ZERO ()
             ADD things.items.pvalues.pfval NOS ZERO ()
             ADD things.items.pvalues.psval NOS ZERO ()
             ADD things.items.pvalues.property NOS ZERO ()
             ADD things.items.pvalues.property.__typename NOS ZERO ()
             ADD things.items.pvalues.property.name NOS ZERO ()
             ADD things.items.pvalues.property.urn NOS ZERO ()
             ADD things.items.pvalues.property.label NOS ZERO ()
             ADD things.items.pvalues.property.description NOS ZERO ()
             ADD things.items.pvalues.property.mandatory NOS ZERO ()
             ADD things.items.pvalues.property.visible NOS ZERO ()
             ADD things.items.pvalues.property.example NOS ZERO ()
             ADD things.items.pvalues.property.deffval NOS ZERO ()
             ADD things.items.pvalues.property.defsval NOS ZERO ()
             ADD things.items.pvalues.property.orderingtype NOS ZERO ()
             ADD things.items.pvalues.property.encodingtype NOS ZERO ()
             ADD things.items.pvalues.property.propertytype NOS ZERO ()
             ADD things.items.pvalues.property.accesstype NOS ZERO ()
             ADD things.items.pvalues.property.facettype NOS ZERO ()
             ADD things.items.pvalues.property.unit NOS ZERO ()
             ADD things.items.pvalues.property.unit.__typename NOS ZERO ()
             ADD things.items.pvalues.property.unit.name NOS ZERO ()
             ADD things.items.pvalues.property.unit.issi NOS ZERO ()
             ADD things.items.pvalues.property.unit.quantityname NOS ZERO ()
             ADD things.items.pvalues.property.unit.symbol NOS ZERO ()
             ADD things.items.pvalues.property.enumurn NOS ZERO ()
             ADD things.items.pvalues.property.defival NOS ZERO ()
             ADD things.items.pvalues.pival NOS ZERO ()
             ADD things.__typename NOS ZERO ()
        )
        OUTPUTLIST (things
        )
        WRAPPER (json "ds_emcp_apis_ab0a2624-20ef-43e5-9d0f-7cc853a107ff")
    );

CREATE OR REPLACE TABLE bv_emcp_assetlist I18N es_euro (
        access_token:text (extern),
        localsiteid:text (extern),
        hierarchy:"bv_emcp_assetlist_hierarchy_8ed4a898-b2b4-492f-a47f-c1ea51c0e54d"
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_emcp_assetlist(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD localsiteid (=) OBL ONE
             ADD hierarchy NOS ZERO ()
             ADD hierarchy NOS ZERO ()
             ADD hierarchy.parentid NOS ZERO ()
             ADD hierarchy.thing NOS ZERO ()
             ADD hierarchy.thing.id NOS ZERO ()
             ADD hierarchy.thing.label NOS ZERO ()
             ADD hierarchy.thing.handle NOS ZERO ()
             ADD hierarchy.thing.concept NOS ZERO ()
             ADD hierarchy.thing.concept.urn NOS ZERO ()
             ADD hierarchy.thing.concept.type NOS ZERO ()
             ADD hierarchy.thing.concept.__typename NOS ZERO ()
             ADD hierarchy.thing.concept.label NOS ZERO ()
             ADD hierarchy.thing.concept.name NOS ZERO ()
             ADD hierarchy.thing.concept.description NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.id NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.kind NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.srcid NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.srcnode NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.dstid NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.dstnode NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.percentage NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.__typename NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.id NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.kind NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.srcid NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.srcnode NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.dstid NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.dstnode NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.percentage NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues.pfval NOS ZERO ()
             ADD hierarchy.thing.pvalues.property NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.urn NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.name NOS ZERO ()
             ADD hierarchy.thing.pvalues.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues.psval NOS ZERO ()
             ADD hierarchy.thing.pvalues.pival NOS ZERO ()
             ADD hierarchy.thing.__typename NOS ZERO ()
             ADD hierarchy.__typename NOS ZERO ()
        )
        OUTPUTLIST (hierarchy
        )
        WRAPPER (json bv_emcp_assetlist)
    );

CREATE OR REPLACE TABLE bv_emcp_assetlist_1 I18N es_euro (
        variables:text (extern),
        query:text (extern),
        hierarchy:"ds_emcp_apis_hierarchy_6982bfa3-a6ce-49ce-9ae6-4839815a1025"
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD hierarchy NOS ZERO ()
             ADD hierarchy NOS ZERO ()
             ADD hierarchy.parentid NOS ZERO ()
             ADD hierarchy.thing NOS ZERO ()
             ADD hierarchy.thing.id NOS ZERO ()
             ADD hierarchy.thing.label NOS ZERO ()
             ADD hierarchy.thing.handle NOS ZERO ()
             ADD hierarchy.thing.concept NOS ZERO ()
             ADD hierarchy.thing.concept.urn NOS ZERO ()
             ADD hierarchy.thing.concept.type NOS ZERO ()
             ADD hierarchy.thing.concept.__typename NOS ZERO ()
             ADD hierarchy.thing.concept.label NOS ZERO ()
             ADD hierarchy.thing.concept.name NOS ZERO ()
             ADD hierarchy.thing.concept.description NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.id NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.kind NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.srcid NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.srcnode NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.dstid NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.dstnode NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.percentage NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.__typename NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.id NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.kind NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.srcid NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.srcnode NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.dstid NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.dstnode NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.percentage NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues.pfval NOS ZERO ()
             ADD hierarchy.thing.pvalues.property NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.urn NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.name NOS ZERO ()
             ADD hierarchy.thing.pvalues.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues.psval NOS ZERO ()
             ADD hierarchy.thing.pvalues.pival NOS ZERO ()
             ADD hierarchy.thing.__typename NOS ZERO ()
             ADD hierarchy.__typename NOS ZERO ()
        )
        OUTPUTLIST (hierarchy
        )
        WRAPPER (json "ds_emcp_apis_1d669e6f-21bc-42e9-be96-212fc991b747")
    );

CREATE OR REPLACE TABLE bv_emcp_assetlist_new I18N es_euro (
        variables:text (extern),
        query:text (extern),
        hierarchy:ds_emcp_apis_hierarchy
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD hierarchy NOS ZERO ()
             ADD hierarchy NOS ZERO ()
             ADD hierarchy.parentid NOS ZERO ()
             ADD hierarchy.thing NOS ZERO ()
             ADD hierarchy.thing.id NOS ZERO ()
             ADD hierarchy.thing.label NOS ZERO ()
             ADD hierarchy.thing.handle NOS ZERO ()
             ADD hierarchy.thing.concept NOS ZERO ()
             ADD hierarchy.thing.concept.urn NOS ZERO ()
             ADD hierarchy.thing.concept.type NOS ZERO ()
             ADD hierarchy.thing.concept.__typename NOS ZERO ()
             ADD hierarchy.thing.concept.label NOS ZERO ()
             ADD hierarchy.thing.concept.name NOS ZERO ()
             ADD hierarchy.thing.concept.description NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.id NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.kind NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.srcid NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.srcnode NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.dstid NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.dstnode NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.percentage NOS ZERO ()
             ADD hierarchy.thing.nodelinkdsts.__typename NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.id NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.kind NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.srcid NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.srcnode NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.dstid NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.dstnode NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.percentage NOS ZERO ()
             ADD hierarchy.thing.nodelinksrcs.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues.pfval NOS ZERO ()
             ADD hierarchy.thing.pvalues.property NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.urn NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues.psval NOS ZERO ()
             ADD hierarchy.thing.pvalues.pival NOS ZERO ()
             ADD hierarchy.thing.__typename NOS ZERO ()
             ADD hierarchy.__typename NOS ZERO ()
        )
        OUTPUTLIST (hierarchy
        )
        WRAPPER (json "ds_emcp_apis_28f872c9-7499-4f47-9016-c02c78afa2a0")
    );

CREATE OR REPLACE TABLE bv_emcp_sitehierarchy I18N es_euro (
        emcp_token:text (extern),
        localsiteid:text (extern),
        tenants:ds_emcp_sitehierarchy_tenants
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_sitehierarchy(
        I18N es_euro
        CONSTRAINTS (
             ADD emcp_token (=) OBL ONE
             ADD localsiteid (=) OBL ONE
             ADD tenants NOS ZERO ()
             ADD tenants NOS ZERO ()
             ADD tenants.level NOS ZERO ()
             ADD tenants.parentid NOS ZERO ()
             ADD tenants.childsite NOS ZERO ()
             ADD tenants.childsite.siteid NOS ZERO ()
             ADD tenants.childsite.name NOS ZERO ()
             ADD tenants.childsite.label NOS ZERO ()
             ADD tenants.childsite.tenantid NOS ZERO ()
             ADD tenants.childsite.concept NOS ZERO ()
             ADD tenants.childsite.concept.urn NOS ZERO ()
             ADD tenants.childsite.concept.type NOS ZERO ()
             ADD tenants.childsite.concept.properties NOS ZERO ()
             ADD tenants.childsite.concept.properties NOS ZERO ()
             ADD tenants.childsite.concept.properties.urn NOS ZERO ()
             ADD tenants.childsite.concept.properties.__typename NOS ZERO ()
             ADD tenants.childsite.concept.__typename NOS ZERO ()
             ADD tenants.childsite.__typename NOS ZERO ()
             ADD tenants.__typename NOS ZERO ()
        )
        OUTPUTLIST (tenants
        )
        WRAPPER (json ds_emcp_sitehierarchy)
    );

CREATE OR REPLACE TABLE bv_emcp_sitehierarchy_new I18N es_euro (
        variables:text (extern),
        query:text (extern),
        tenants:ds_emcp_apis_tenants
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD tenants NOS ZERO ()
             ADD tenants NOS ZERO ()
             ADD tenants.level NOS ZERO ()
             ADD tenants.parentid NOS ZERO ()
             ADD tenants.childsite NOS ZERO ()
             ADD tenants.childsite.siteid NOS ZERO ()
             ADD tenants.childsite.name NOS ZERO ()
             ADD tenants.childsite.label NOS ZERO ()
             ADD tenants.childsite.tenantid NOS ZERO ()
             ADD tenants.childsite.concept NOS ZERO ()
             ADD tenants.childsite.concept.urn NOS ZERO ()
             ADD tenants.childsite.concept.type NOS ZERO ()
             ADD tenants.childsite.concept.properties NOS ZERO ()
             ADD tenants.childsite.concept.properties NOS ZERO ()
             ADD tenants.childsite.concept.properties.urn NOS ZERO ()
             ADD tenants.childsite.concept.properties.__typename NOS ZERO ()
             ADD tenants.childsite.concept.__typename NOS ZERO ()
             ADD tenants.childsite.__typename NOS ZERO ()
             ADD tenants.__typename NOS ZERO ()
        )
        OUTPUTLIST (tenants
        )
        WRAPPER (json "ds_emcp_apis_ce3e6775-d818-4274-8804-ad7567087bdd")
    );

CREATE OR REPLACE TABLE bv_emcp_sitelist I18N es_euro (
        emcp_token:text (extern),
        hierarchy:bv_emcp_sitelist_api1_hierarchy
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_emcp_sitelist_api1(
        I18N es_euro
        CONSTRAINTS (
             ADD emcp_token (=) OBL ONE
             ADD hierarchy NOS ZERO ()
             ADD hierarchy NOS ZERO ()
             ADD hierarchy.level NOS ZERO ()
             ADD hierarchy.thing NOS ZERO ()
             ADD hierarchy.thing.id NOS ZERO ()
             ADD hierarchy.thing.name NOS ZERO ()
             ADD hierarchy.thing.label NOS ZERO ()
             ADD hierarchy.thing.concept NOS ZERO ()
             ADD hierarchy.thing.concept.urn NOS ZERO ()
             ADD hierarchy.thing.concept.icon NOS ZERO ()
             ADD hierarchy.thing.concept.__typename NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues NOS ZERO ()
             ADD hierarchy.thing.pvalues.pival NOS ZERO ()
             ADD hierarchy.thing.pvalues.pfval NOS ZERO ()
             ADD hierarchy.thing.pvalues.psval NOS ZERO ()
             ADD hierarchy.thing.pvalues.property NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.urn NOS ZERO ()
             ADD hierarchy.thing.pvalues.property.__typename NOS ZERO ()
        )
        OUTPUTLIST (hierarchy
        )
        WRAPPER (json bv_emcp_sitelist_api1)
    );

CREATE OR REPLACE TABLE bv_emcp_timeseries I18N es_euro (
        access_token:text (extern),
        starttime:text (extern),
        endtime:text (extern),
        assetid:text (extern),
        rawtrenddata:ds_emcp_timeseries_rawtrenddata
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_timeseries(
        I18N es_euro
        CONSTRAINTS (
             ADD access_token (=) OBL ONE
             ADD starttime (=) OBL ONE
             ADD endtime (=) OBL ONE
             ADD assetid (=) OBL ONE
             ADD rawtrenddata NOS ZERO ()
             ADD rawtrenddata.totalcount NOS ZERO ()
             ADD rawtrenddata.items NOS ZERO ()
             ADD rawtrenddata.items NOS ZERO ()
             ADD rawtrenddata.items.businessquantity NOS ZERO ()
             ADD rawtrenddata.items.businessquantity.name NOS ZERO ()
             ADD rawtrenddata.items.businessquantity.__typename NOS ZERO ()
             ADD rawtrenddata.items.measure NOS ZERO ()
             ADD rawtrenddata.items.measure.id NOS ZERO ()
             ADD rawtrenddata.items.measure.label NOS ZERO ()
             ADD rawtrenddata.items.measure.urn NOS ZERO ()
             ADD rawtrenddata.items.measure.unit NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.id NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.name NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.issi NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.symbol NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.urn NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.quantityname NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.__typename NOS ZERO ()
             ADD rawtrenddata.items.measure.__typename NOS ZERO ()
             ADD rawtrenddata.items.thingid NOS ZERO ()
             ADD rawtrenddata.items.thinglabel NOS ZERO ()
             ADD rawtrenddata.items.thingcontext NOS ZERO ()
             ADD rawtrenddata.items.thingcontext NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.id NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.type NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.label NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.name NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.urn NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.__typename NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.value NOS ZERO ()
             ADD rawtrenddata.items.timezone NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues.timestamp NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues.value NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues.__typename NOS ZERO ()
             ADD rawtrenddata.items.__typename NOS ZERO ()
             ADD rawtrenddata.__typename NOS ZERO ()
        )
        OUTPUTLIST (rawtrenddata
        )
        WRAPPER (json "ds_emcp_timeseries_b0bf36ed-70f9-436f-ae26-55be1724cfe1")
    );

CREATE OR REPLACE TABLE bv_emcp_timeseries_new I18N es_euro (
        variables:text (extern),
        query:text (extern),
        rawtrenddata:ds_emcp_apis_rawtrenddata
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD rawtrenddata NOS ZERO ()
             ADD rawtrenddata.totalcount NOS ZERO ()
             ADD rawtrenddata.items NOS ZERO ()
             ADD rawtrenddata.items NOS ZERO ()
             ADD rawtrenddata.items.businessquantity NOS ZERO ()
             ADD rawtrenddata.items.businessquantity.name NOS ZERO ()
             ADD rawtrenddata.items.businessquantity.__typename NOS ZERO ()
             ADD rawtrenddata.items.measure NOS ZERO ()
             ADD rawtrenddata.items.measure.id NOS ZERO ()
             ADD rawtrenddata.items.measure.label NOS ZERO ()
             ADD rawtrenddata.items.measure.urn NOS ZERO ()
             ADD rawtrenddata.items.measure.unit NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.id NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.name NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.issi NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.symbol NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.urn NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.quantityname NOS ZERO ()
             ADD rawtrenddata.items.measure.unit.__typename NOS ZERO ()
             ADD rawtrenddata.items.measure.__typename NOS ZERO ()
             ADD rawtrenddata.items.thingid NOS ZERO ()
             ADD rawtrenddata.items.thinglabel NOS ZERO ()
             ADD rawtrenddata.items.thingcontext NOS ZERO ()
             ADD rawtrenddata.items.thingcontext NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.id NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.type NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.label NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.name NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.urn NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.__typename NOS ZERO ()
             ADD rawtrenddata.items.thingcontext.value NOS ZERO ()
             ADD rawtrenddata.items.timezone NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues.timestamp NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues.value NOS ZERO ()
             ADD rawtrenddata.items.timeseriesvalues.__typename NOS ZERO ()
             ADD rawtrenddata.items.__typename NOS ZERO ()
             ADD rawtrenddata.__typename NOS ZERO ()
        )
        OUTPUTLIST (rawtrenddata
        )
        WRAPPER (json "ds_emcp_apis_53a62667-c96f-4761-9fc2-7da35aac0277")
    );

CREATE OR REPLACE TABLE bv_emcp_token I18N es_euro (
        token_type:text,
        access_token:text,
        expires_in:int
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE PARTIAL
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE 3500
    ADD SEARCHMETHOD emcp_token(
        I18N es_euro
        CONSTRAINTS (
             ADD token_type NOS ZERO ()
             ADD access_token NOS ZERO ()
             ADD expires_in NOS ZERO ()
        )
        OUTPUTLIST (access_token, expires_in, token_type
        )
        WRAPPER (json emcp_token)
    );

CREATE OR REPLACE TABLE bv_emcp_usage_energy I18N es_euro (
        variables:text (extern),
        query:text (extern),
        binnedusagetrenddata:ds_emcp_apis_binnedusagetrenddata
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD binnedusagetrenddata NOS ZERO ()
             ADD binnedusagetrenddata.items NOS ZERO ()
             ADD binnedusagetrenddata.items NOS ZERO ()
             ADD binnedusagetrenddata.items.usageid NOS ZERO ()
             ADD binnedusagetrenddata.items.businessquantity NOS ZERO ()
             ADD binnedusagetrenddata.items.businessquantity.name NOS ZERO ()
             ADD binnedusagetrenddata.items.businessquantity.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.measure NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.id NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.label NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.urn NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.id NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.name NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.issi NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.symbol NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.urn NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.quantityname NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.thingid NOS ZERO ()
             ADD binnedusagetrenddata.items.thinglabel NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.type NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.id NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.urn NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.timezone NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.starttime NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.endtime NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.keytime NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.value NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.surfaceareavalue NOS ZERO ()
             ADD binnedusagetrenddata.__typename NOS ZERO ()
        )
        OUTPUTLIST (binnedusagetrenddata
        )
        WRAPPER (json "ds_emcp_apis_b2934513-5cf7-4073-9e75-51fe9d757518")
    );

CREATE OR REPLACE TABLE bv_emcp_usage_power I18N es_euro (
        variables:text (extern),
        query:text (extern),
        binnedusagetrenddata:ds_emcp_apis_binnedusagetrenddata
    )
    FOLDER = '/1 - connectivity/2 - base views/new'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_emcp_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD variables (=) OBL ONE
             ADD query (=) OBL ONE
             ADD binnedusagetrenddata NOS ZERO ()
             ADD binnedusagetrenddata.items NOS ZERO ()
             ADD binnedusagetrenddata.items NOS ZERO ()
             ADD binnedusagetrenddata.items.usageid NOS ZERO ()
             ADD binnedusagetrenddata.items.businessquantity NOS ZERO ()
             ADD binnedusagetrenddata.items.businessquantity.name NOS ZERO ()
             ADD binnedusagetrenddata.items.businessquantity.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.measure NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.id NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.label NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.urn NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.id NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.name NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.issi NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.symbol NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.urn NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.quantityname NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.unit.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.measure.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.thingid NOS ZERO ()
             ADD binnedusagetrenddata.items.thinglabel NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.type NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.id NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.urn NOS ZERO ()
             ADD binnedusagetrenddata.items.thingcontext.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.timezone NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.starttime NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.endtime NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.keytime NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.value NOS ZERO ()
             ADD binnedusagetrenddata.items.timeseriesvalues.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.__typename NOS ZERO ()
             ADD binnedusagetrenddata.items.surfaceareavalue NOS ZERO ()
             ADD binnedusagetrenddata.__typename NOS ZERO ()
        )
        OUTPUTLIST (binnedusagetrenddata
        )
        WRAPPER (json "ds_emcp_apis_e72e7c49-c19c-40e4-a6d8-4242c15f66ec")
    );

CREATE OR REPLACE TABLE bv_ess_apis_accountist I18N es_euro (
        path:text (extern),
        serviceoutput:"ds_ess_apis_serviceoutput_6d0531db-753f-419c-ae7e-17b310698674",
        errormessage:text,
        errorcode:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_ess_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD path (=) OBL ONE
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput.__type NOS ZERO ()
             ADD serviceoutput.accountvendorname NOS ZERO ()
             ADD serviceoutput.accountnotexpected NOS ZERO ()
             ADD serviceoutput.accountnotmanaged NOS ZERO ()
             ADD serviceoutput.supplieraccountbegindate NOS ZERO ()
             ADD serviceoutput.supplieraccountenddate NOS ZERO ()
             ADD serviceoutput.accountid NOS ZERO ()
             ADD serviceoutput.accountnumber NOS ZERO ()
             ADD serviceoutput.accounttype NOS ZERO ()
             ADD serviceoutput.siteclienthierid NOS ZERO ()
             ADD serviceoutput.sitename NOS ZERO ()
             ADD errormessage NOS ZERO ()
             ADD errorcode NOS ZERO ()
        )
        OUTPUTLIST (errorcode, errormessage, serviceoutput
        )
        WRAPPER (json "ds_ess_apis_7a46232d-a515-426d-a7b0-3286b8e8fe4e")
    );

CREATE OR REPLACE TABLE bv_ess_apis_costusage I18N es_euro (
        path:text (extern),
        serviceoutput:ds_ess_apis_serviceoutput,
        errormessage:text,
        errorcode:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_ess_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD path (=) OBL ONE
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput.__type NOS ZERO ()
             ADD serviceoutput.currencyname NOS ZERO ()
             ADD serviceoutput.currencyuomid NOS ZERO ()
             ADD serviceoutput.divisionclienthierid NOS ZERO ()
             ADD serviceoutput.divisionname NOS ZERO ()
             ADD serviceoutput.month NOS ZERO ()
             ADD serviceoutput.serviceid NOS ZERO ()
             ADD serviceoutput.servicename NOS ZERO ()
             ADD serviceoutput.serviceuomid NOS ZERO ()
             ADD serviceoutput.siteclienthierid NOS ZERO ()
             ADD serviceoutput.sitename NOS ZERO ()
             ADD serviceoutput.uomname NOS ZERO ()
             ADD serviceoutput.usage NOS ZERO ()
             ADD serviceoutput.cost NOS ZERO ()
             ADD errormessage NOS ZERO ()
             ADD errorcode NOS ZERO ()
        )
        OUTPUTLIST (errorcode, errormessage, serviceoutput
        )
        WRAPPER (json "ds_ess_apis_62e261d7-29e2-464a-9d78-e38106066bd3")
    );

CREATE OR REPLACE TABLE bv_ess_apis_metricdata I18N es_euro (
        path:text (extern),
        serviceoutput:"ds_ess_apis_serviceoutput_bf4fe6cf-c485-4f5f-802f-11b5b6be92d9",
        errormessage:text,
        errorcode:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_ess_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD path (=) OBL ONE
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput.__type NOS ZERO ()
             ADD serviceoutput.attributefrequency NOS ZERO ()
             ADD serviceoutput.attributename NOS ZERO ()
             ADD serviceoutput.attributetype NOS ZERO ()
             ADD serviceoutput.attributeuomname NOS ZERO ()
             ADD serviceoutput.attributevalue NOS ZERO ()
             ADD serviceoutput.clientattributeid NOS ZERO ()
             ADD serviceoutput.clienthierid NOS ZERO ()
             ADD serviceoutput.enddt NOS ZERO ()
             ADD serviceoutput.iscurrencyuom NOS ZERO ()
             ADD serviceoutput.startdt NOS ZERO ()
             ADD serviceoutput.attributevaluecount NOS ZERO ()
             ADD errormessage NOS ZERO ()
             ADD errorcode NOS ZERO ()
        )
        OUTPUTLIST (errorcode, errormessage, serviceoutput
        )
        WRAPPER (json "ds_ess_apis_56a47961-252d-4cfd-a5c6-b69b0a08cf2b")
    );

CREATE OR REPLACE TABLE bv_ess_apis_uommetadata I18N es_euro (
        path:text (extern),
        serviceoutput:ds_ess_apis_serviceoutput,
        errormessage:text,
        errorcode:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_ess_apis(
        I18N es_euro
        CONSTRAINTS (
             ADD path (=) OBL ONE
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput.__type NOS ZERO ()
             ADD serviceoutput.cost NOS ZERO ()
             ADD serviceoutput.currencyname NOS ZERO ()
             ADD serviceoutput.currencyuomid NOS ZERO ()
             ADD serviceoutput.divisionclienthierid NOS ZERO ()
             ADD serviceoutput.divisionname NOS ZERO ()
             ADD serviceoutput.month NOS ZERO ()
             ADD serviceoutput.serviceid NOS ZERO ()
             ADD serviceoutput.servicename NOS ZERO ()
             ADD serviceoutput.serviceuomid NOS ZERO ()
             ADD serviceoutput.siteclienthierid NOS ZERO ()
             ADD serviceoutput.sitename NOS ZERO ()
             ADD serviceoutput.uomname NOS ZERO ()
             ADD serviceoutput.usage NOS ZERO ()
             ADD errormessage NOS ZERO ()
             ADD errorcode NOS ZERO ()
        )
        OUTPUTLIST (errorcode, errormessage, serviceoutput
        )
        WRAPPER (json ds_ess_apis)
    );

CREATE OR REPLACE TABLE bv_ess_site_list_api I18N es_euro (
        serviceoutput:ds_ess_site_list_api_serviceoutput,
        errormessage:text,
        errorcode:text
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE PARTIAL EXACT
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE 86400
    ADD SEARCHMETHOD ds_ess_site_list_api(
        I18N es_euro
        CONSTRAINTS (
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput.__type NOS ZERO ()
             ADD serviceoutput.city NOS ZERO ()
             ADD serviceoutput.countryname NOS ZERO ()
             ADD serviceoutput.divisionclienthierid NOS ZERO ()
             ADD serviceoutput.divisionname NOS ZERO ()
             ADD serviceoutput.geolat NOS ZERO ()
             ADD serviceoutput.geolong NOS ZERO ()
             ADD serviceoutput.idmnodeid NOS ZERO ()
             ADD serviceoutput.siteaddressline1 NOS ZERO ()
             ADD serviceoutput.siteclienthierid NOS ZERO ()
             ADD serviceoutput.siteclosed NOS ZERO ()
             ADD serviceoutput.siteid NOS ZERO ()
             ADD serviceoutput.sitename NOS ZERO ()
             ADD serviceoutput.sitenotmanaged NOS ZERO ()
             ADD serviceoutput.sitereferencenumber NOS ZERO ()
             ADD serviceoutput.statename NOS ZERO ()
             ADD serviceoutput.timezone NOS ZERO ()
             ADD serviceoutput.weatherstationcode NOS ZERO ()
             ADD serviceoutput.zipcode NOS ZERO ()
             ADD errormessage NOS ZERO ()
             ADD errorcode NOS ZERO ()
        )
        OUTPUTLIST (errorcode, errormessage, serviceoutput
        )
        WRAPPER (json ds_ess_site_list_api_0)
    );

CREATE OR REPLACE TABLE bv_ess_site_list_api_copy I18N es_euro (
        serviceoutput:ds_ess_site_list_api_serviceoutput,
        errormessage:text,
        errorcode:text
    )
    FOLDER = '/3 - integration/api2/newdesign'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD ds_ess_site_list_api(
        I18N es_euro
        CONSTRAINTS (
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput NOS ZERO ()
             ADD serviceoutput.__type NOS ZERO ()
             ADD serviceoutput.city NOS ZERO ()
             ADD serviceoutput.countryname NOS ZERO ()
             ADD serviceoutput.divisionclienthierid NOS ZERO ()
             ADD serviceoutput.divisionname NOS ZERO ()
             ADD serviceoutput.geolat NOS ZERO ()
             ADD serviceoutput.geolong NOS ZERO ()
             ADD serviceoutput.idmnodeid NOS ZERO ()
             ADD serviceoutput.siteaddressline1 NOS ZERO ()
             ADD serviceoutput.siteclienthierid NOS ZERO ()
             ADD serviceoutput.siteclosed NOS ZERO ()
             ADD serviceoutput.siteid NOS ZERO ()
             ADD serviceoutput.sitename NOS ZERO ()
             ADD serviceoutput.sitenotmanaged NOS ZERO ()
             ADD serviceoutput.sitereferencenumber NOS ZERO ()
             ADD serviceoutput.statename NOS ZERO ()
             ADD serviceoutput.timezone NOS ZERO ()
             ADD serviceoutput.weatherstationcode NOS ZERO ()
             ADD serviceoutput.zipcode NOS ZERO ()
             ADD errormessage NOS ZERO ()
             ADD errorcode NOS ZERO ()
        )
        OUTPUTLIST (errorcode, errormessage, serviceoutput
        )
        WRAPPER (json ds_ess_site_list_api_1)
    );

CREATE OR REPLACE TABLE bv_product_attributes I18N es_euro (
        commref:text (notnull, sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        creatorlastname_0:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        locale:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        lastmodifierfirstname:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        brand:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        creationdate:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        createdby:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        creatorfirstname:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        lastmodifierlastname:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        lastmodifiedby:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        lastmodifieddate:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        commrefstatus:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        picturedocumentreference:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        commercializationarea:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        longdescription:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        shortdescription:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        rangeid:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        producttype:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        deviceshortname:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        devicerange:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        productname:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        rowhash:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        creatorlastname:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        connectable:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        devicetype:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647'),
        expiretime:text (sourcetypeid = '12', sourcetyperadix = '10', sourcetypedecimals = '0', sourcetypesize = '2147483647')
    )
    FOLDER = '/1 - connectivity/2 - base views'
    PRIMARY KEY ( 'commref' )
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD bv_product_attributes(
        I18N es_euro
        CONSTRAINTS (
             ADD commref (any) OPT ANY
             ADD creatorlastname_0 (any) OPT ANY
             ADD locale (any) OPT ANY
             ADD lastmodifierfirstname (any) OPT ANY
             ADD brand (any) OPT ANY
             ADD creationdate (any) OPT ANY
             ADD createdby (any) OPT ANY
             ADD creatorfirstname (any) OPT ANY
             ADD lastmodifierlastname (any) OPT ANY
             ADD lastmodifiedby (any) OPT ANY
             ADD lastmodifieddate (any) OPT ANY
             ADD commrefstatus (any) OPT ANY
             ADD picturedocumentreference (any) OPT ANY
             ADD commercializationarea (any) OPT ANY
             ADD longdescription (any) OPT ANY
             ADD shortdescription (any) OPT ANY
             ADD rangeid (any) OPT ANY
             ADD producttype (any) OPT ANY
             ADD deviceshortname (any) OPT ANY
             ADD devicerange (any) OPT ANY
             ADD productname (any) OPT ANY
             ADD rowhash (any) OPT ANY
             ADD creatorlastname (any) OPT ANY
             ADD connectable (any) OPT ANY
             ADD devicetype (any) OPT ANY
             ADD expiretime (any) OPT ANY
        )
        OUTPUTLIST (brand, commercializationarea, commref, commrefstatus, connectable, createdby, creationdate, creatorfirstname, creatorlastname, creatorlastname_0, devicerange, deviceshortname, devicetype, expiretime, lastmodifiedby, lastmodifieddate, lastmodifierfirstname, lastmodifierlastname, locale, longdescription, picturedocumentreference, productname, producttype, rangeid, rowhash, shortdescription
        )
        WRAPPER (jdbc bv_product_attributes)
    )
    SMART_THEN_ATSOURCE_THROUGH_VDP;

CREATE OR REPLACE TABLE bv_reltio_crossref I18N es_euro (
        jsonarray:reltion_crossref_jsonarray
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD reltion_crossref(
        I18N es_euro
        CONSTRAINTS (
             ADD jsonarray NOS ZERO ()
             ADD jsonarray NOS ZERO ()
             ADD jsonarray.source NOS ZERO ()
             ADD jsonarray.source.publishercode NOS ZERO ()
             ADD jsonarray.source.id NOS ZERO ()
             ADD jsonarray.source.reltioid NOS ZERO ()
             ADD jsonarray.source.reltiogoldenid NOS ZERO ()
             ADD jsonarray.target NOS ZERO ()
             ADD jsonarray.target NOS ZERO ()
             ADD jsonarray.target.publishercode NOS ZERO ()
             ADD jsonarray.target.id NOS ZERO ()
             ADD jsonarray.target.recordtype NOS ZERO ()
             ADD jsonarray.target.reltiogoldenid NOS ZERO ()
             ADD jsonarray.target.deletionflag NOS ZERO ()
             ADD jsonarray.target.accounttype NOS ZERO ()
             ADD jsonarray.target.accounttype.code NOS ZERO ()
             ADD jsonarray.target.accounttype.value NOS ZERO ()
             ADD jsonarray.target.classificationlevel1 NOS ZERO ()
             ADD jsonarray.target.classificationlevel1.code NOS ZERO ()
             ADD jsonarray.target.classificationlevel1.value NOS ZERO ()
             ADD jsonarray.target.name NOS ZERO ()
             ADD jsonarray.target.name.orgname NOS ZERO ()
        )
        OUTPUTLIST (jsonarray
        )
        WRAPPER (json reltion_crossref)
    );

CREATE OR REPLACE TABLE bv_reltio_mdm I18N es_euro (
        jsonarray:reltio_organization_new_jsonarray
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD reltio_organization_new(
        I18N es_euro
        CONSTRAINTS (
             ADD jsonarray NOS ZERO ()
             ADD jsonarray NOS ZERO ()
             ADD jsonarray.total NOS ZERO ()
             ADD jsonarray.max NOS ZERO ()
             ADD jsonarray.offset_0 NOS ZERO ()
             ADD jsonarray.results NOS ZERO ()
             ADD jsonarray.results NOS ZERO ()
             ADD jsonarray.results.goldenid NOS ZERO ()
             ADD jsonarray.results.entityid NOS ZERO ()
             ADD jsonarray.results.createdby NOS ZERO ()
             ADD jsonarray.results.createdtime NOS ZERO ()
             ADD jsonarray.results.updatedby NOS ZERO ()
             ADD jsonarray.results.updatedtime NOS ZERO ()
             ADD jsonarray.results.name NOS ZERO ()
             ADD jsonarray.results.addresses NOS ZERO ()
             ADD jsonarray.results.addresses NOS ZERO ()
             ADD jsonarray.results.addresses.addresstype NOS ZERO ()
             ADD jsonarray.results.addresses.addresstype.value NOS ZERO ()
             ADD jsonarray.results.addresses.addressline1 NOS ZERO ()
             ADD jsonarray.results.addresses.postalcode NOS ZERO ()
             ADD jsonarray.results.addresses.city NOS ZERO ()
             ADD jsonarray.results.addresses.country NOS ZERO ()
             ADD jsonarray.results.addresses.country.code NOS ZERO ()
             ADD jsonarray.results.addresses.country.value NOS ZERO ()
             ADD jsonarray.results.addresses.county NOS ZERO ()
             ADD jsonarray.results.addresses.street NOS ZERO ()
             ADD jsonarray.results.addresses.pobox NOS ZERO ()
             ADD jsonarray.results.addresses.stateprovince NOS ZERO ()
             ADD jsonarray.results.addresses.premisenumber NOS ZERO ()
             ADD jsonarray.results.classificationlevel1 NOS ZERO ()
             ADD jsonarray.results.classificationlevel1.code NOS ZERO ()
             ADD jsonarray.results.classificationlevel1.value NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit.code NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit.value NOS ZERO ()
             ADD jsonarray.results.marketsegment NOS ZERO ()
             ADD jsonarray.results.marketsegment.code NOS ZERO ()
             ADD jsonarray.results.marketsegment.value NOS ZERO ()
             ADD jsonarray.results.accountlifecycle NOS ZERO ()
             ADD jsonarray.results.accountlifecycle.code NOS ZERO ()
             ADD jsonarray.results.accountlifecycle.value NOS ZERO ()
             ADD jsonarray.results.accountowner NOS ZERO ()
             ADD jsonarray.results.accounttype NOS ZERO ()
             ADD jsonarray.results.accounttype.code NOS ZERO ()
             ADD jsonarray.results.accounttype.value NOS ZERO ()
             ADD jsonarray.results.localorganizationname NOS ZERO ()
             ADD jsonarray.results.shortorganizationname NOS ZERO ()
        )
        OUTPUTLIST (jsonarray
        )
        WRAPPER (json reltio_organization_new)
    );

CREATE OR REPLACE TABLE bv_reltio_mdm_details I18N es_euro (
        apigee_token:text (extern),
        entityname:text (extern),
        countrycode:text (extern),
        jsonarray:bv_reltio_mdm_details_jsonarray
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD bv_reltio_mdm_details(
        I18N es_euro
        CONSTRAINTS (
             ADD apigee_token (=) OBL ONE
             ADD entityname (=) OBL ONE
             ADD countrycode (=) OBL ONE
             ADD jsonarray NOS ZERO ()
             ADD jsonarray NOS ZERO ()
             ADD jsonarray.total NOS ZERO ()
             ADD jsonarray.max NOS ZERO ()
             ADD jsonarray.offset_0 NOS ZERO ()
             ADD jsonarray.results NOS ZERO ()
             ADD jsonarray.results NOS ZERO ()
             ADD jsonarray.results.goldenid NOS ZERO ()
             ADD jsonarray.results.entityid NOS ZERO ()
             ADD jsonarray.results.createdby NOS ZERO ()
             ADD jsonarray.results.createdtime NOS ZERO ()
             ADD jsonarray.results.updatedby NOS ZERO ()
             ADD jsonarray.results.updatedtime NOS ZERO ()
             ADD jsonarray.results.name NOS ZERO ()
             ADD jsonarray.results.addresses NOS ZERO ()
             ADD jsonarray.results.addresses NOS ZERO ()
             ADD jsonarray.results.addresses.addresstype NOS ZERO ()
             ADD jsonarray.results.addresses.addresstype.value NOS ZERO ()
             ADD jsonarray.results.addresses.addressline1 NOS ZERO ()
             ADD jsonarray.results.addresses.postalcode NOS ZERO ()
             ADD jsonarray.results.addresses.city NOS ZERO ()
             ADD jsonarray.results.addresses.country NOS ZERO ()
             ADD jsonarray.results.addresses.country.code NOS ZERO ()
             ADD jsonarray.results.addresses.country.value NOS ZERO ()
             ADD jsonarray.results.addresses.county NOS ZERO ()
             ADD jsonarray.results.addresses.street NOS ZERO ()
             ADD jsonarray.results.addresses.pobox NOS ZERO ()
             ADD jsonarray.results.addresses.stateprovince NOS ZERO ()
             ADD jsonarray.results.addresses.premisenumber NOS ZERO ()
             ADD jsonarray.results.classificationlevel1 NOS ZERO ()
             ADD jsonarray.results.classificationlevel1.code NOS ZERO ()
             ADD jsonarray.results.classificationlevel1.value NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit.code NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit.value NOS ZERO ()
             ADD jsonarray.results.marketsegment NOS ZERO ()
             ADD jsonarray.results.marketsegment.code NOS ZERO ()
             ADD jsonarray.results.marketsegment.value NOS ZERO ()
             ADD jsonarray.results.accountlifecycle NOS ZERO ()
             ADD jsonarray.results.accountlifecycle.code NOS ZERO ()
             ADD jsonarray.results.accountlifecycle.value NOS ZERO ()
             ADD jsonarray.results.accountowner NOS ZERO ()
             ADD jsonarray.results.accounttype NOS ZERO ()
             ADD jsonarray.results.accounttype.code NOS ZERO ()
             ADD jsonarray.results.accounttype.value NOS ZERO ()
             ADD jsonarray.results.localorganizationname NOS ZERO ()
             ADD jsonarray.results.shortorganizationname NOS ZERO ()
        )
        OUTPUTLIST (jsonarray
        )
        WRAPPER (json bv_reltio_mdm_details)
    );

CREATE OR REPLACE TABLE bv_reltio_organization I18N es_euro (
        jsonarray:reltio_organization_jsonarray
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD reltio_organization(
        I18N es_euro
        CONSTRAINTS (
             ADD jsonarray NOS ZERO ()
             ADD jsonarray NOS ZERO ()
             ADD jsonarray.total NOS ZERO ()
             ADD jsonarray.max NOS ZERO ()
             ADD jsonarray.offset_0 NOS ZERO ()
             ADD jsonarray.results NOS ZERO ()
             ADD jsonarray.results NOS ZERO ()
             ADD jsonarray.results.goldenid NOS ZERO ()
             ADD jsonarray.results.entityid NOS ZERO ()
             ADD jsonarray.results.createdby NOS ZERO ()
             ADD jsonarray.results.createdtime NOS ZERO ()
             ADD jsonarray.results.updatedby NOS ZERO ()
             ADD jsonarray.results.updatedtime NOS ZERO ()
             ADD jsonarray.results.name NOS ZERO ()
             ADD jsonarray.results.addresses NOS ZERO ()
             ADD jsonarray.results.addresses NOS ZERO ()
             ADD jsonarray.results.addresses.addresstype NOS ZERO ()
             ADD jsonarray.results.addresses.addresstype.value NOS ZERO ()
             ADD jsonarray.results.addresses.addressline1 NOS ZERO ()
             ADD jsonarray.results.addresses.postalcode NOS ZERO ()
             ADD jsonarray.results.addresses.city NOS ZERO ()
             ADD jsonarray.results.addresses.country NOS ZERO ()
             ADD jsonarray.results.addresses.country.code NOS ZERO ()
             ADD jsonarray.results.addresses.country.value NOS ZERO ()
             ADD jsonarray.results.addresses.county NOS ZERO ()
             ADD jsonarray.results.addresses.pobox NOS ZERO ()
             ADD jsonarray.results.addresses.stateprovince NOS ZERO ()
             ADD jsonarray.results.classificationlevel1 NOS ZERO ()
             ADD jsonarray.results.classificationlevel1.code NOS ZERO ()
             ADD jsonarray.results.classificationlevel1.value NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit.code NOS ZERO ()
             ADD jsonarray.results.leadingbusinessunit.value NOS ZERO ()
             ADD jsonarray.results.marketsegment NOS ZERO ()
             ADD jsonarray.results.marketsegment.code NOS ZERO ()
             ADD jsonarray.results.marketsegment.value NOS ZERO ()
             ADD jsonarray.results.accountlifecycle NOS ZERO ()
             ADD jsonarray.results.accountlifecycle.code NOS ZERO ()
             ADD jsonarray.results.accountlifecycle.value NOS ZERO ()
             ADD jsonarray.results.accountowner NOS ZERO ()
             ADD jsonarray.results.accounttype NOS ZERO ()
             ADD jsonarray.results.accounttype.code NOS ZERO ()
             ADD jsonarray.results.accounttype.value NOS ZERO ()
             ADD jsonarray.results.localorganizationname NOS ZERO ()
             ADD jsonarray.results.shortorganizationname NOS ZERO ()
        )
        OUTPUTLIST (jsonarray
        )
        WRAPPER (json reltio_organization)
    );

CREATE OR REPLACE TABLE bv_reltio_site_metadata_golden_id I18N es_euro (
        site:text (extern),
        jsonarray:site_metadata_golden_id_jsonarray
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD site_metadata_golden_id(
        I18N es_euro
        CONSTRAINTS (
             ADD site (=) OBL ONE
             ADD jsonarray NOS ZERO ()
             ADD jsonarray NOS ZERO ()
             ADD jsonarray.source NOS ZERO ()
             ADD jsonarray.source.publishercode NOS ZERO ()
             ADD jsonarray.source.id NOS ZERO ()
             ADD jsonarray.source.reltioid NOS ZERO ()
             ADD jsonarray.source.reltiogoldenid NOS ZERO ()
             ADD jsonarray.target NOS ZERO ()
             ADD jsonarray.target NOS ZERO ()
             ADD jsonarray.target.publishercode NOS ZERO ()
             ADD jsonarray.target.id NOS ZERO ()
             ADD jsonarray.target.recordtype NOS ZERO ()
             ADD jsonarray.target.reltiogoldenid NOS ZERO ()
             ADD jsonarray.target.deletionflag NOS ZERO ()
             ADD jsonarray.target.accounttype NOS ZERO ()
             ADD jsonarray.target.accounttype.code NOS ZERO ()
             ADD jsonarray.target.accounttype.value NOS ZERO ()
             ADD jsonarray.target.classificationlevel1 NOS ZERO ()
             ADD jsonarray.target.classificationlevel1.code NOS ZERO ()
             ADD jsonarray.target.classificationlevel1.value NOS ZERO ()
             ADD jsonarray.target.name NOS ZERO ()
             ADD jsonarray.target.name.orgname NOS ZERO ()
        )
        OUTPUTLIST (jsonarray
        )
        WRAPPER (json site_metadata_golden_id)
    );

CREATE OR REPLACE TABLE bv_reltio_sitedetails I18N es_euro (
        sitegoldenid:text (extern),
        results:ds_reltio_sitedetails_results
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE PARTIAL EXACT
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE NOEXPIRE
    ADD SEARCHMETHOD ds_reltio_sitedetails(
        I18N es_euro
        CONSTRAINTS (
             ADD sitegoldenid (=) OBL ONE
             ADD results NOS ZERO ()
             ADD results NOS ZERO ()
             ADD results.publisherid NOS ZERO ()
             ADD results.publishercode NOS ZERO ()
             ADD results.goldenid NOS ZERO ()
             ADD results.accountowner NOS ZERO ()
             ADD results.accounttype NOS ZERO ()
             ADD results.accounttype.code NOS ZERO ()
             ADD results.accounttype.value NOS ZERO ()
             ADD results.name NOS ZERO ()
             ADD results.customerclassificationlevel1 NOS ZERO ()
             ADD results.customerclassificationlevel1.code NOS ZERO ()
             ADD results.customerclassificationlevel1.value NOS ZERO ()
             ADD results.customerclassificationlevel2 NOS ZERO ()
             ADD results.customerclassificationlevel2.code NOS ZERO ()
             ADD results.customerclassificationlevel2.value NOS ZERO ()
             ADD results.businessunitcode NOS ZERO ()
             ADD results.businessunitcode.code NOS ZERO ()
             ADD results.businessunitcode.value NOS ZERO ()
             ADD results.marketsegment NOS ZERO ()
             ADD results.marketsegment.code NOS ZERO ()
             ADD results.marketsegment.value NOS ZERO ()
             ADD results.marketsubsegment NOS ZERO ()
             ADD results.marketsubsegment.code NOS ZERO ()
             ADD results.marketsubsegment.value NOS ZERO ()
             ADD results.accountlifecycle NOS ZERO ()
             ADD results.accountlifecycle.code NOS ZERO ()
             ADD results.accountlifecycle.value NOS ZERO ()
             ADD results.deletionflag NOS ZERO ()
             ADD results.phone NOS ZERO ()
             ADD results.phone NOS ZERO ()
             ADD results.phone.phonetype NOS ZERO ()
             ADD results.phone.phonenumber NOS ZERO ()
             ADD results.blockbfo NOS ZERO ()
             ADD results.reltiocertified NOS ZERO ()
             ADD results.address NOS ZERO ()
             ADD results.address.addresstype NOS ZERO ()
             ADD results.address.addressline1 NOS ZERO ()
             ADD results.address.city NOS ZERO ()
             ADD results.address.stateprovince NOS ZERO ()
             ADD results.address.stateprovince.code NOS ZERO ()
             ADD results.address.stateprovince.value NOS ZERO ()
             ADD results.address.country NOS ZERO ()
             ADD results.address.country.code NOS ZERO ()
             ADD results.address.country.value NOS ZERO ()
             ADD results.address.postalcode NOS ZERO ()
             ADD results.website NOS ZERO ()
        )
        OUTPUTLIST (results
        )
        WRAPPER (json ds_reltio_sitedetails)
    )
    DECLARE VIEW CLUSTER INDEX sitegoldenid_index PRIMARY  UNIQUE  ON (sitegoldenid ASC)
    DECLARE CACHE INDEX sitegoldenid_index ON (sitegoldenid ASC);

CREATE OR REPLACE TABLE bv_reltio_sitedetails2 I18N es_euro (
        apigee_token:text (extern),
        sitegoldenid:text (extern),
        results:api2_reltio_sitedetails_results
    )
    FOLDER = '/3 - integration/api2/newdesign'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD api2_reltio_sitedetails(
        I18N es_euro
        CONSTRAINTS (
             ADD apigee_token (=) OBL ONE
             ADD sitegoldenid (=) OBL ONE
             ADD results NOS ZERO ()
             ADD results NOS ZERO ()
             ADD results.publisherid NOS ZERO ()
             ADD results.publishercode NOS ZERO ()
             ADD results.goldenid NOS ZERO ()
             ADD results.accountowner NOS ZERO ()
             ADD results.accounttype NOS ZERO ()
             ADD results.accounttype.code NOS ZERO ()
             ADD results.accounttype.value NOS ZERO ()
             ADD results.name NOS ZERO ()
             ADD results.customerclassificationlevel1 NOS ZERO ()
             ADD results.customerclassificationlevel1.code NOS ZERO ()
             ADD results.customerclassificationlevel1.value NOS ZERO ()
             ADD results.customerclassificationlevel2 NOS ZERO ()
             ADD results.customerclassificationlevel2.code NOS ZERO ()
             ADD results.customerclassificationlevel2.value NOS ZERO ()
             ADD results.businessunitcode NOS ZERO ()
             ADD results.businessunitcode.code NOS ZERO ()
             ADD results.businessunitcode.value NOS ZERO ()
             ADD results.marketsegment NOS ZERO ()
             ADD results.marketsegment.code NOS ZERO ()
             ADD results.marketsegment.value NOS ZERO ()
             ADD results.marketsubsegment NOS ZERO ()
             ADD results.marketsubsegment.code NOS ZERO ()
             ADD results.marketsubsegment.value NOS ZERO ()
             ADD results.accountlifecycle NOS ZERO ()
             ADD results.accountlifecycle.code NOS ZERO ()
             ADD results.accountlifecycle.value NOS ZERO ()
             ADD results.deletionflag NOS ZERO ()
             ADD results.phone NOS ZERO ()
             ADD results.phone NOS ZERO ()
             ADD results.phone.phonetype NOS ZERO ()
             ADD results.phone.phonenumber NOS ZERO ()
             ADD results.blockbfo NOS ZERO ()
             ADD results.reltiocertified NOS ZERO ()
             ADD results.address NOS ZERO ()
             ADD results.address.addresstype NOS ZERO ()
             ADD results.address.addressline1 NOS ZERO ()
             ADD results.address.city NOS ZERO ()
             ADD results.address.stateprovince NOS ZERO ()
             ADD results.address.stateprovince.code NOS ZERO ()
             ADD results.address.stateprovince.value NOS ZERO ()
             ADD results.address.country NOS ZERO ()
             ADD results.address.country.code NOS ZERO ()
             ADD results.address.country.value NOS ZERO ()
             ADD results.address.postalcode NOS ZERO ()
             ADD results.website NOS ZERO ()
        )
        OUTPUTLIST (results
        )
        WRAPPER (json "api2_reltio_sitedetails_9754390c-f61f-4190-b238-7fddb909a323")
    );

CREATE OR REPLACE TABLE bv_reltio_sitedetails_old I18N es_euro (
        apigee_token:text (extern),
        sitegoldenid:text (extern),
        results:"api2_reltio_sitedetails_results_4f48f8fd-58bd-4cae-a745-56b3ec4f7b3e"
    )
    FOLDER = '/1 - connectivity/2 - base views'
    CACHE OFF
    BATCHSIZEINCACHE DEFAULT
    TIMETOLIVEINCACHE 86400
    ADD SEARCHMETHOD api2_reltio_sitedetails(
        I18N es_euro
        CONSTRAINTS (
             ADD apigee_token (=) OBL ONE
             ADD sitegoldenid (=) OBL ONE
             ADD results NOS ZERO ()
             ADD results NOS ZERO ()
             ADD results.publisherid NOS ZERO ()
             ADD results.publishercode NOS ZERO ()
             ADD results.goldenid NOS ZERO ()
             ADD results.accountowner NOS ZERO ()
             ADD results.accounttype NOS ZERO ()
             ADD results.accounttype.code NOS ZERO ()
             ADD results.accounttype.value NOS ZERO ()
             ADD results.name NOS ZERO ()
             ADD results.customerclassificationlevel1 NOS ZERO ()
             ADD results.customerclassificationlevel1.code NOS ZERO ()
             ADD results.customerclassificationlevel1.value NOS ZERO ()
             ADD results.businessunitcode NOS ZERO ()
             ADD results.businessunitcode.code NOS ZERO ()
             ADD results.businessunitcode.value NOS ZERO ()
             ADD results.marketsegment NOS ZERO ()
             ADD results.marketsegment.code NOS ZERO ()
             ADD results.marketsegment.value NOS ZERO ()
             ADD results.accountlifecycle NOS ZERO ()
             ADD results.accountlifecycle.code NOS ZERO ()
             ADD results.accountlifecycle.value NOS ZERO ()
             ADD results.deletionflag NOS ZERO ()
             ADD results.blockbfo NOS ZERO ()
             ADD results.reltiocertified NOS ZERO ()
             ADD results.address NOS ZERO ()
             ADD results.address.addresstype NOS ZERO ()
             ADD results.address.addressline1 NOS ZERO ()
             ADD results.address.city NOS ZERO ()
             ADD results.address.country NOS ZERO ()
             ADD results.address.country.code NOS ZERO ()
             ADD results.address.country.value NOS ZERO ()
             ADD results.address.postalcode NOS ZERO ()
             ADD results.dunsnumber NOS ZERO ()
        )
        OUTPUTLIST (results
        )
        WRAPPER (json "api2_reltio_sitedetails_2a60a7ea-f3a4-48b8-a493-433fccfd843b")
    );

CREATE OR REPLACE TABLE test_alm_ping I18N es_euro (
        hello:text
    )
    FOLDER = '/3 - integration/api1/archive'
    CACHE OFF
    TIMETOLIVEINCACHE DEFAULT
    ADD SEARCHMETHOD test_alm_ping(
        I18N es_euro
        CONSTRAINTS (
             ADD hello NOS ZERO ()
        )
        OUTPUTLIST (hello
        )
        WRAPPER (json test_alm_ping)
    );

# #######################################
# VIEWS
# #######################################
CREATE OR REPLACE VIEW api5 FOLDER = '/4 - business views/api5' AS SELECT bv_reltio_mdm_details.entityname AS entityname, bv_reltio_mdm_details.countrycode AS countrycode, bv_reltio_mdm_details.jsonarray AS items, apigee_token.organization_name AS organization_name, apigee_token.developeremail_0 AS developeremail_0, apigee_token.issued_at AS issued_at, apigee_token.client_id AS client_id, apigee_token.application_name AS application_name, apigee_token.scope AS scope, apigee_token.expires_in AS expires_in, apigee_token.refresh_count AS refresh_count, apigee_token.status AS status, bv_reltio_mdm_details.apigee_token AS apigee_token, bv_reltio_mdm_details.jsonarray AS jsonarray, apigee_token.refresh_token_expires_in AS refresh_token_expires_in, apigee_token.api_product_list AS api_product_list, apigee_token.api_product_list_json AS api_product_list_json, apigee_token.token_type AS token_type, apigee_token.access_token AS access_token FROM bv_reltio_mdm_details AS bv_reltio_mdm_details INNER JOIN bv_apigee_token AS apigee_token ON bv_reltio_mdm_details.apigee_token = apigee_token.access_token ;

ALTER VIEW api5
 LAYOUT (bv_reltio_mdm_details = [20, 28, 200, 200], bv_apigee_token = [321, 28, 200, 200]);

CREATE OR REPLACE VIEW bv_almsit_info_product_data_attributes_j_alm_app_token FOLDER = '/3 - integration/api3/v 1.0' AS SELECT bv_almsit_info_product_data_attributes.commref AS commref, (bv_almsit_info_product_data_attributes.data_0).productattributes.brand AS pimbrand, (bv_almsit_info_product_data_attributes.data_0).productattributes.devicerange AS pimrange, (bv_almsit_info_product_data_attributes.data_0).productattributes.shortdescription AS pimdescription FROM bv_almsit_info_product_data_attributes AS bv_almsit_info_product_data_attributes INNER JOIN bv_alm_app_token AS alm_app_token ON bv_almsit_info_product_data_attributes.access_token = alm_app_token.access_token  WHERE bv_almsit_info_product_data_attributes.data = 'ATTRIBUTES';

ALTER VIEW bv_almsit_info_product_data_attributes_j_alm_app_token
 LAYOUT (bv_almsit_info_product_data_attributes = [38, 26, 200, 200], bv_alm_app_token = [363, 21, 200, 200]);

CREATE OR REPLACE VIEW bv_csv_ess_siteid_meterid_array_3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT meterid,siteid, unpivotregister(
register(meter, meteraddress, metercity, meterstate, metercountry, meterzip, siteid, reltioid, client, account))
AS attributes FROM (select meterid,meter, meteraddress, metercity, meterstate, metercountry, meterzip, siteid, reltioid, client, account
from bv_csv_ess_siteid_meterid_1) CONTEXT ('formatted' = 'yes');

CREATE OR REPLACE VIEW bv_csv_ess_siteid_meterid_asset_masterid FOLDER = '/3 - integration/api3/v 1.0' AS SELECT bv_csv_ess_siteid_meterid.siteid AS siteid, bv_csv_ess_siteid_meterid.siteaddress AS siteaddress, bv_csv_ess_siteid_meterid.account AS account, bv_csv_ess_siteid_meterid.accountid AS accountid, bv_csv_ess_siteid_meterid.accountstatus AS accountstatus, bv_csv_ess_siteid_meterid.accountnotexpected AS accountnotexpected, bv_csv_ess_siteid_meterid.account_not_expected_dt AS account_not_expected_dt, bv_csv_ess_siteid_meterid.commodity AS commodity, bv_csv_ess_siteid_meterid.commodityid AS commodityid, bv_csv_ess_siteid_meterid.meter AS meter, bv_csv_ess_siteid_meterid.meterid AS meterid, bv_csv_ess_siteid_meterid.meteraddress AS meteraddress, bv_csv_ess_siteid_meterid.metercity AS metercity, bv_csv_ess_siteid_meterid.meterstate AS meterstate, bv_csv_ess_siteid_meterid.metercountry AS metercountry, bv_csv_ess_siteid_meterid.meterzip AS meterzip, ds_dynamodb_dfe_dev_assetid.id AS assetmasterid, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, bv_csv_ess_siteid_meterid.reltioid AS reltioid, 'ESS' AS source FROM bv_csv_ess_siteid_meterid AS bv_csv_ess_siteid_meterid ORDERED LEFT OUTER JOIN bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid ON bv_csv_ess_siteid_meterid.meterid = ds_dynamodb_dfe_dev_assetid.essid ;

ALTER VIEW bv_csv_ess_siteid_meterid_asset_masterid
 LAYOUT (bv_csv_ess_siteid_meterid = [110, 37, 200, 200], bv_dynamodb_dfe_dev_assetid = [545, 80, 200, 200]);

CREATE OR REPLACE VIEW bv_dynamodb_almsit_info_attribute_indexed_register FOLDER = '/3 - integration/api4/v 2.0' AS SELECT almassetidentifier, commref, assetname, description, unpivotregister(
register(publishercode, equipmenttype, commissioningdate, assetinstallationtype, createdby, lifecyclestatus, commref, serialnumber, brand, devicetype))
AS attributes FROM (select almassetidentifier,
 publishercode, equipmenttype, commissioningdate, assetinstallationtype, createdby, lifecyclestatus, commref, serialnumber, brand, devicetype, assetname, description
from bv_dynamodb_almsit_info_attribute_index) CONTEXT ('formatted' = 'yes');

CREATE OR REPLACE VIEW bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3 FOLDER = '/3 - integration/api3/archive' AS SELECT bv_dynamodb_dfdev_sites_3.name AS name, bv_dynamodb_dfdev_sites_3.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_sites_3.createdby AS createdby, bv_dynamodb_almsit_registration_3.assetregistrationid AS assetregistrationid, bv_dynamodb_almsit_registration_3.almassetidentifier AS almassetidentifier, bv_dynamodb_almsit_registration_3.commref AS commref, bv_dynamodb_almsit_registration_3.publishercode AS publishercode, bv_dynamodb_almsit_registration_3.serialnumber AS serialnumber, bv_dynamodb_almsit_registration_3.siteid AS siteid, bv_dynamodb_almsit_registration_3.userfedid AS userfedid FROM bv_dynamodb_dfdev_sites_3 AS bv_dynamodb_dfdev_sites_3 NESTED ORDERED LEFT OUTER JOIN bv_dynamodb_almsit_registration_3 AS bv_dynamodb_almsit_registration_3 ON bv_dynamodb_dfdev_sites_3.siteid = bv_dynamodb_almsit_registration_3.siteid ;

ALTER VIEW bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3
 LAYOUT (bv_dynamodb_dfdev_sites_3 = [188, 117, 200, 200], bv_dynamodb_almsit_registration_3 = [703, 111, 200, 200]);

CREATE OR REPLACE VIEW bv_emcp_assetlist_emcp_token FOLDER = '/2 - logical model' AS SELECT bv_emcp_assetlist.localsiteid AS localsiteid, bv_emcp_assetlist.hierarchy AS hierarchy, emcp_token.token_type AS token_type, emcp_token.access_token AS access_token, emcp_token.expires_in AS expires_in FROM bv_emcp_assetlist AS bv_emcp_assetlist INNER JOIN bv_emcp_token AS emcp_token ON bv_emcp_assetlist.access_token = emcp_token.access_token ;

ALTER VIEW bv_emcp_assetlist_emcp_token
 LAYOUT (bv_emcp_assetlist = [22, 20, 200, 200], bv_emcp_token = [404, 5, 200, 200]);

CREATE OR REPLACE VIEW bv_emcp_sitelist_token FOLDER = '/1 - connectivity/2 - base views' AS SELECT bv_emcp_sitelist.emcp_token AS emcp_token, bv_emcp_sitelist.hierarchy AS hierarchy, emcp_token.token_type AS token_type, emcp_token.access_token AS access_token, emcp_token.expires_in AS expires_in FROM bv_emcp_token AS emcp_token NESTED ORDERED INNER JOIN bv_emcp_sitelist AS bv_emcp_sitelist ON emcp_token.access_token = bv_emcp_sitelist.emcp_token ;

ALTER VIEW bv_emcp_sitelist_token
 LAYOUT (bv_emcp_sitelist = [365, 95, 200, 200], bv_emcp_token = [41, 16, 200, 200]);

CREATE OR REPLACE VIEW bv_reltio_sitedetails2_j_apigee_token FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_reltio_sitedetails2.apigee_token AS apigee_token, bv_reltio_sitedetails2.sitegoldenid AS sitegoldenid, bv_reltio_sitedetails2.results AS results, apigee_token.refresh_token_expires_in AS refresh_token_expires_in FROM bv_reltio_sitedetails2 AS bv_reltio_sitedetails2 INNER JOIN bv_apigee_token AS apigee_token ON bv_reltio_sitedetails2.apigee_token = apigee_token.access_token ;

ALTER VIEW bv_reltio_sitedetails2_j_apigee_token
 LAYOUT (bv_reltio_sitedetails2 = [20, 20, 200, 200], bv_apigee_token = [336, 17, 200, 200]);

CREATE OR REPLACE VIEW bv_reltio_sitedetails_apigee_token FOLDER = '/2 - logical model' AS SELECT bv_reltio_sitedetails.apigee_token AS apigee_token, bv_reltio_sitedetails.sitegoldenid AS sitegoldenid, bv_reltio_sitedetails.results AS results, apigee_token.refresh_token_expires_in AS refresh_token_expires_in, apigee_token.api_product_list AS api_product_list, apigee_token.api_product_list_json AS api_product_list_json, apigee_token.organization_name AS organization_name, apigee_token.developeremail_0 AS developeremail_0, apigee_token.token_type AS token_type, apigee_token.issued_at AS issued_at, apigee_token.client_id AS client_id, apigee_token.access_token AS access_token, apigee_token.application_name AS application_name, apigee_token.scope AS scope, apigee_token.expires_in AS expires_in, apigee_token.refresh_count AS refresh_count, apigee_token.status AS status FROM bv_reltio_sitedetails_old AS bv_reltio_sitedetails INNER JOIN bv_apigee_token AS apigee_token ON bv_reltio_sitedetails.apigee_token = apigee_token.access_token ;

ALTER VIEW bv_reltio_sitedetails_apigee_token
 LAYOUT (bv_reltio_sitedetails_old = [20, 20, 200, 200], bv_apigee_token = [429, 43, 200, 200]);

ALTER VIEW bv_reltio_sitedetails_apigee_token
 CACHE PARTIAL EXACT
     BATCHSIZEINCACHE DEFAULT TIMETOLIVEINCACHE 86400;

CREATE OR REPLACE VIEW f_bv_dynamodb_dfdev_sites_1 FOLDER = '/3 - integration/api1/archive' AS SELECT bv_dynamodb_dfdev_sites.reltiogoldenid AS id, bv_dynamodb_dfdev_sites.name AS name, bv_dynamodb_dfdev_sites.description AS description, bv_dynamodb_dfdev_sites.createdby AS createdby, bv_dynamodb_dfdev_sites.sublocationid AS sublocationid, bv_dynamodb_dfdev_sites.siteid AS siteid, bv_dynamodb_dfdev_sites.publishercode AS publishercode, 'ALM' AS source FROM bv_dynamodb_dfdev_sites;

ALTER VIEW f_bv_dynamodb_dfdev_sites_1
 LAYOUT (bv_dynamodb_dfdev_sites = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_ess_site_list_api FOLDER = '/3 - integration/api2/newdesign' AS SELECT siteid AS siteid, sitename AS sitename, register(siteaddressline1, city, statename, zipcode, countryname) AS address, 'ESS' AS source, siteclienthierid AS siteclienthierid FROM FLATTEN bv_ess_site_list_api AS v ( v.serviceoutput);

ALTER VIEW f_bv_ess_site_list_api
 LAYOUT (bv_ess_site_list_api = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_ess_site_list_api_copy FOLDER = '/3 - integration/api2/newdesign' AS SELECT sitename AS sitename, siteid AS siteid, 'ESS' AS source, 'NULL' AS createdby, 'NULL' AS description, siteclienthierid AS siteclienthierid FROM FLATTEN bv_ess_site_list_api_copy AS v ( v.serviceoutput);

ALTER VIEW f_bv_ess_site_list_api_copy
 LAYOUT (bv_ess_site_list_api_copy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_ess_site_list_api_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT siteid AS siteid, divisionname AS divisionname, sitename AS sitename, 'ESS' AS source, register(siteaddressline1, city, statename, zipcode, countryname) AS address FROM FLATTEN bv_ess_site_list_api AS v ( v.serviceoutput);

ALTER VIEW f_bv_ess_site_list_api_v2_1
 LAYOUT (bv_ess_site_list_api = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_ess_site_list_api_v2_archive FOLDER = '/3 - integration/api1/archive' AS SELECT siteid AS siteid, siteclosed AS siteclosed, zipcode AS zipcode, city AS city, statename AS statename, siteaddressline1 AS siteaddressline1, divisionname AS divisionname, idmnodeid AS idmnodeid, siteclienthierid AS siteclienthierid, sitereferencenumber AS sitereferencenumber, __type AS type, sitename AS sitename, weatherstationcode AS weatherstationcode, divisionclienthierid AS divisionclienthierid, geolong AS geolong, sitenotmanaged AS sitenotmanaged, countryname AS countryname FROM FLATTEN bv_ess_site_list_api AS v ( v.serviceoutput);

ALTER VIEW f_bv_ess_site_list_api_v2_archive
 LAYOUT (bv_ess_site_list_api = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_ess_site_list_api_v2_archive_final FOLDER = '/3 - integration/api1/archive' AS SELECT siteid AS id, siteclosed AS siteclosed, statename AS name, divisionname AS divisionname, idmnodeid AS idmnodeid, siteclienthierid AS siteclienthierid, sitereferencenumber AS sitereferencenumber, __type AS type, sitename AS sitename, weatherstationcode AS weatherstationcode, divisionclienthierid AS divisionclienthierid, sitenotmanaged AS sitenotmanaged, register(siteaddressline1, city, statename, zipcode, countryname) AS address, 'ESS' AS source, now() AS lastrefreshtime, siteaddressline1 AS street, statename AS state, zipcode AS postalcode, city AS city, countryname AS country FROM FLATTEN bv_ess_site_list_api AS v ( v.serviceoutput);

ALTER VIEW f_bv_ess_site_list_api_v2_archive_final
 LAYOUT (bv_ess_site_list_api = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_reltio_sitedetails FOLDER = '/2 - logical model' AS SELECT sitegoldenid AS sitegoldenid, accountowner AS accountowner, website AS website, name AS name, phonenumber AS phonenumber, (address).addresstype AS addresstype, (address).addressline1 AS addressline1, (address).city AS city, (address).postalcode AS postalcode, (address).stateprovince.value AS state, (address).country.value AS country, (marketsubsegment).value AS marketsubsegment, (customerclassificationlevel1).value AS customerclassificationlevel1, (customerclassificationlevel2).value AS customerclassificationlevel2, (businessunitcode).value AS businesstype, (marketsegment).value AS marketsegment FROM FLATTEN bv_reltio_sitedetails AS v ( v.results) ( v.results.phone);

ALTER VIEW f_bv_reltio_sitedetails
 LAYOUT (bv_reltio_sitedetails = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_reltio_sitename FOLDER = '/3 - integration/api3/v 1.0' AS SELECT sitegoldenid AS siteid, name AS name FROM FLATTEN bv_reltio_sitedetails AS v ( v.results);

ALTER VIEW f_bv_reltio_sitename
 LAYOUT (bv_reltio_sitedetails = [250, 39, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_dynamodb FOLDER = '/3 - integration/api3/archive' AS SELECT bv_dynamodb_dfdev_sites_3.siteid AS siteid, bv_dynamodb_dfdev_sites_3.name AS name, bv_dynamodb_dfdev_sites_3.reltiogoldenid AS reltiogoldenid, bv_dynamodb_almsit_registration_3.assetregistrationid AS assetregistrationid, bv_dynamodb_almsit_registration_3.userfedid AS userfedid, bv_dynamodb_almsit_info_attribute_3.almassetidentifier AS almassetidentifier, bv_dynamodb_almsit_info_attribute_3.assetinstallationtype AS assetinstallationtype, bv_dynamodb_almsit_info_attribute_3.commissioningdate AS commissioningdate, bv_dynamodb_almsit_info_attribute_3.createdby AS createdby, bv_dynamodb_almsit_info_attribute_3.description AS description, bv_dynamodb_almsit_info_attribute_3.equipmenttype AS equipmenttype, bv_dynamodb_almsit_info_attribute_3.isalmasset AS isalmasset, bv_dynamodb_almsit_info_attribute_3.isrootnode AS isrootnode, bv_dynamodb_almsit_info_attribute_3.lifecyclestatus AS lifecyclestatus, bv_dynamodb_almsit_did_3.almid AS almid, bv_dynamodb_almsit_did_3.brand AS brand, bv_dynamodb_almsit_did_3.commref AS commref, bv_dynamodb_almsit_did_3.devicetype AS devicetype, bv_dynamodb_almsit_did_3.range AS range, bv_dynamodb_almsit_did_3.serialnumber AS serialnumber, bv_dynamodb_almsit_did_3.ref AS ref FROM ((bv_dynamodb_dfdev_sites_3 AS bv_dynamodb_dfdev_sites_3 NESTED PARALLEL ORDERED LEFT OUTER JOIN 100 bv_dynamodb_almsit_registration_3 AS bv_dynamodb_almsit_registration_3 ON bv_dynamodb_dfdev_sites_3.siteid = bv_dynamodb_almsit_registration_3.siteid ) NESTED PARALLEL ORDERED LEFT OUTER JOIN 100 bv_dynamodb_almsit_info_attribute_3 AS bv_dynamodb_almsit_info_attribute_3 ON bv_dynamodb_almsit_registration_3.almassetidentifier = bv_dynamodb_almsit_info_attribute_3.almassetidentifier ) NESTED PARALLEL ORDERED LEFT OUTER JOIN 100 bv_dynamodb_almsit_did_3 AS bv_dynamodb_almsit_did_3 ON bv_dynamodb_almsit_registration_3.almassetidentifier = bv_dynamodb_almsit_did_3.almid ;

ALTER VIEW iv_alm_dynamodb
 LAYOUT (bv_dynamodb_dfdev_sites_3 = [155, 133, 200, 200], bv_dynamodb_almsit_registration_3 = [540, 129, 200, 200], bv_dynamodb_almsit_info_attribute_3 = [902, 216, 200, 200], bv_dynamodb_almsit_did_3 = [985, 21, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_sites FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_dynamodb_dfdev_sites.createdby AS createdby, bv_dynamodb_dfdev_sites.siteid AS siteid, bv_dynamodb_dfdev_sites.name AS name, bv_dynamodb_dfdev_sites.description AS description FROM bv_dynamodb_dfdev_sites WHERE type = 'SITE';

ALTER VIEW iv_alm_sites
 LAYOUT (bv_dynamodb_dfdev_sites = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_csv_ess_siteid_meterid_array FOLDER = '/3 - integration/api4/v 1.0' AS SELECT meterid, nest(name, value) AS attributes FROM (SELECT meterid, 'meter' AS name, meter AS value FROM bv_csv_ess_siteid_meterid_1 WHERE meter is not null  SQL UNION SELECT meterid, 'meteraddress' AS name, meteraddress AS value FROM bv_csv_ess_siteid_meterid_1 WHERE meteraddress is not null  SQL UNION SELECT meterid, 'metercity' AS name, metercity AS value FROM bv_csv_ess_siteid_meterid_1 WHERE metercity is not null  SQL UNION SELECT meterid, 'meterstate' AS name, meterstate AS value FROM bv_csv_ess_siteid_meterid_1 WHERE meterstate is not null  SQL UNION SELECT meterid, 'metercountry' AS name, metercountry AS value FROM bv_csv_ess_siteid_meterid_1 WHERE metercountry is not null  SQL UNION SELECT meterid, 'meterzip' AS name, meterzip AS value FROM bv_csv_ess_siteid_meterid_1 WHERE meterzip is not null  SQL UNION SELECT meterid, 'siteid' AS name, siteid AS value FROM bv_csv_ess_siteid_meterid_1 WHERE siteid is not null  SQL UNION SELECT meterid, 'reltioid' AS name, reltioid AS value FROM bv_csv_ess_siteid_meterid_1 WHERE reltioid is not null  SQL UNION SELECT meterid, 'client' AS name, client AS value FROM bv_csv_ess_siteid_meterid_1 WHERE client is not null  SQL UNION SELECT meterid, 'account' AS name, account AS value FROM bv_csv_ess_siteid_meterid_1 WHERE account is not null ) GROUP BY meterid CONTEXT ('formatted' = 'yes');

CREATE OR REPLACE VIEW iv_csv_sitelist_ess_formatted FOLDER = '/3 - integration/api1/archive' AS SELECT bv_csv_sitelist.reltioid AS id, bv_csv_sitelist.site AS name, bv_csv_sitelist.client AS customername, bv_csv_sitelist.siteaddress_0 AS address, bv_csv_sitelist.userid AS createdby, bv_csv_sitelist.siteid_0 AS siteid, 'ESS' AS source FROM bv_csv_sitelist;

ALTER VIEW iv_csv_sitelist_ess_formatted
 LAYOUT (bv_csv_sitelist = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_dynamodb_sites_alm_formatted FOLDER = '/3 - integration/api1/archive' AS SELECT bv_dynamodb_dfdev_sites.reltiogoldenid AS id, bv_dynamodb_dfdev_sites.name AS name, bv_dynamodb_dfdev_sites.description AS description, bv_dynamodb_dfdev_sites.createdby AS createdby, bv_dynamodb_dfdev_sites.sublocationid AS sublocationid, bv_dynamodb_dfdev_sites.siteid AS siteid, bv_dynamodb_dfdev_sites.publishercode AS publishercode, 'ALM' AS source FROM bv_dynamodb_dfdev_sites;

ALTER VIEW iv_dynamodb_sites_alm_formatted
 LAYOUT (bv_dynamodb_dfdev_sites = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_dynamodb_sites_alm_formatted_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT bv_dynamodb_dfdev_sites.reltiogoldenid AS id, bv_dynamodb_dfdev_sites.name AS name, bv_dynamodb_dfdev_sites.description AS description, bv_dynamodb_dfdev_sites.createdby AS createdby, bv_dynamodb_dfdev_sites.sublocationid AS sublocationid, bv_dynamodb_dfdev_sites.siteid AS siteid, bv_dynamodb_dfdev_sites.publishercode AS publishercode, 'ALM' AS source FROM bv_dynamodb_dfdev_sites;

ALTER VIEW iv_dynamodb_sites_alm_formatted_v2
 LAYOUT (bv_dynamodb_dfdev_sites = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_dynamodb_sites_alm_formatted_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT bv_dynamodb_dfdev_sites.reltiogoldenid AS id, bv_dynamodb_dfdev_sites.name AS name, bv_dynamodb_dfdev_sites.description AS description, bv_dynamodb_dfdev_sites.createdby AS createdby, bv_dynamodb_dfdev_sites.sublocationid AS sublocationid, bv_dynamodb_dfdev_sites.siteid AS almsiteid, bv_dynamodb_dfdev_sites.publishercode AS publishercode, 'ALM' AS source FROM bv_dynamodb_dfdev_sites;

ALTER VIEW iv_dynamodb_sites_alm_formatted_v2_1
 LAYOUT (bv_dynamodb_dfdev_sites = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_sitelist_alm_ess_union_bkup FOLDER = '/3 - integration/api1/archive' AS SELECT createdby AS userid, siteid AS siteid, name AS name, reltiogoldenid AS reltiogoldenid FROM (SELECT createdby, siteid, name, reltiogoldenid FROM bv_dynamodb_dfdev_sites SQL UNION ALL SELECT userid, siteid_0, client, reltioid FROM bv_csv_sitelist);

ALTER VIEW iv_sitelist_alm_ess_union_bkup
 LAYOUT (bv_dynamodb_dfdev_sites = [126, 145, 200, 200], bv_csv_sitelist = [487, 148, 200, 200]);

CREATE OR REPLACE VIEW iv_user_customer_j_customer_sites FOLDER = '/2 - logical model' AS SELECT bv_dynamodb_dfdev_user_customer_mapping.userid AS userid, bv_dynamodb_dfdev_user_customer_mapping.customerid AS customerid, bv_dynamodb_dfdev_customer_sites_mapping.siteid AS siteid FROM bv_dynamodb_dfdev_user_customer_mapping AS bv_dynamodb_dfdev_user_customer_mapping NESTED PARALLEL LEFT OUTER JOIN 25 bv_dynamodb_dfdev_customer_sites_mapping AS bv_dynamodb_dfdev_customer_sites_mapping ON bv_dynamodb_dfdev_user_customer_mapping.customerid = bv_dynamodb_dfdev_customer_sites_mapping.customerid ;

ALTER VIEW iv_user_customer_j_customer_sites
 LAYOUT (bv_dynamodb_dfdev_user_customer_mapping = [20, 20, 200, 200], bv_dynamodb_dfdev_customer_sites_mapping = [377, 51, 200, 200]);

CREATE OR REPLACE VIEW iv_user_customer_j_sites FOLDER = '/2 - logical model' AS SELECT bv_dynamodb_dfdev_user_customer_mapping.userid AS userid, bv_dynamodb_dfdev_user_customer_mapping.customerid AS customerid, bv_dynamodb_dfdev_customer_sites_mapping.siteid AS siteid FROM bv_dynamodb_dfdev_user_customer_mapping AS bv_dynamodb_dfdev_user_customer_mapping LEFT OUTER JOIN bv_dynamodb_dfdev_customer_sites_mapping AS bv_dynamodb_dfdev_customer_sites_mapping ON bv_dynamodb_dfdev_user_customer_mapping.customerid = bv_dynamodb_dfdev_customer_sites_mapping.customerid ;

ALTER VIEW iv_user_customer_j_sites
 LAYOUT (bv_dynamodb_dfdev_user_customer_mapping = [20, 20, 200, 200], bv_dynamodb_dfdev_customer_sites_mapping = [324, 19, 200, 200]);

CREATE OR REPLACE VIEW iv_userid_to_customerid_mapping FOLDER = '/2 - logical model' AS SELECT bv_dynamodb_dfdev_user_customer_mapping.userid AS userid, bv_dynamodb_dfdev_user_customer_mapping.customerid AS customerid, bv_dynamodb_dfdev_master_customerid.almid AS almid, bv_dynamodb_dfdev_master_customerid.emcpid AS emcpid, bv_dynamodb_dfdev_master_customerid.essid AS essid, bv_dynamodb_dfdev_master_customerid.reltiogoldenid AS reltiogoldenid FROM bv_dynamodb_dfdev_user_customer_mapping AS bv_dynamodb_dfdev_user_customer_mapping LEFT OUTER JOIN bv_dynamodb_dfdev_master_customerid AS bv_dynamodb_dfdev_master_customerid ON bv_dynamodb_dfdev_user_customer_mapping.customerid = bv_dynamodb_dfdev_master_customerid.id  GROUP BY bv_dynamodb_dfdev_user_customer_mapping.userid, bv_dynamodb_dfdev_user_customer_mapping.customerid, bv_dynamodb_dfdev_master_customerid.id, bv_dynamodb_dfdev_master_customerid.almid, bv_dynamodb_dfdev_master_customerid.emcpid, bv_dynamodb_dfdev_master_customerid.essid, bv_dynamodb_dfdev_master_customerid.reltiogoldenid;

ALTER VIEW iv_userid_to_customerid_mapping
 LAYOUT (bv_dynamodb_dfdev_user_customer_mapping = [112, 37, 200, 200], bv_dynamodb_dfdev_master_customerid = [430, 45, 200, 200]);

CREATE OR REPLACE VIEW p_bv_alm_dynamodb_productdata FOLDER = '/2 - logical model' AS SELECT commref AS commref, max(brand) AS pimbrand, max(devicerange) AS pimrange, max(shortdescription) AS pimdescription FROM bv_alm_dynamodb_productdata GROUP BY commref;

ALTER VIEW p_bv_alm_dynamodb_productdata
 LAYOUT (bv_alm_dynamodb_productdata = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_almsit_api_info_attribute_all FOLDER = '/2 - logical model' AS SELECT almassetidentifier, (bv_almsit_api_info_attribute_all.data).assetname AS name, (bv_almsit_api_info_attribute_all.data).description AS description, (bv_almsit_api_info_attribute_all.data).publishercode AS publishercode, (bv_almsit_api_info_attribute_all.data).equipmenttype AS equipmenttype, NULL AS commissioningdate, (bv_almsit_api_info_attribute_all.data).assetinstallationtype AS assetinstallationtype, (bv_almsit_api_info_attribute_all.data).createdby AS createdby, (bv_almsit_api_info_attribute_all.data).lifecyclestatus AS lifecyclestatus, (bv_almsit_api_info_attribute_all.data).identification.commref AS commref, (bv_almsit_api_info_attribute_all.data).identification.serialnumber AS serialnumber, (bv_almsit_api_info_attribute_all.data).identification.brand AS brand, (bv_almsit_api_info_attribute_all.data).identification.devicetype AS devicetype, (bv_almsit_api_info_attribute_all.data).registration AS registration, (bv_almsit_api_info_attribute_all.data).hierarchy AS hierarchy FROM bv_almsit_api_info_attribute_all WHERE path = replace('info/v2/assets?almAssetIdentifier=assetId&data=ALL', 'assetId', almassetidentifier) USING PARAMETERS ( almassetidentifier : text);

ALTER VIEW p_bv_almsit_api_info_attribute_all
 LAYOUT (bv_almsit_api_info_attribute_all = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_almsit_api_info_product_data_attributes FOLDER = '/1 - connectivity/2 - base views/new' AS SELECT bv_almsit_api_info_product_data_attributes.data AS data, commref FROM bv_almsit_api_info_product_data_attributes WHERE path = replace('info/v1/assets/commRef/product-data?data=ATTRIBUTES', 'commRef', commref) USING PARAMETERS ( commref : text);

ALTER VIEW p_bv_almsit_api_info_product_data_attributes
 LAYOUT (bv_almsit_api_info_product_data_attributes = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_almsit_api_product_data_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT bv_almsit_api_product_data_all.data AS data, commref FROM bv_almsit_api_product_data_all WHERE path = replace('info/v1/assets/commRef/product-data?data=ALL', 'commRef', commref) USING PARAMETERS ( commref : text);

ALTER VIEW p_bv_almsit_api_product_data_all
 LAYOUT (bv_almsit_api_product_data_all = [20, 20, 200, 200]);

ALTER VIEW p_bv_almsit_api_product_data_all
 CACHE PARTIAL EXACT
     BATCHSIZEINCACHE DEFAULT TIMETOLIVEINCACHE NOEXPIRE
     DECLARE CACHE INDEX "commref-index" UNIQUE  ON (commref ASC);

CREATE OR REPLACE VIEW p_bv_almsit_info_product_data_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT bv_almsit_info_product_data_all.access_token AS access_token, bv_almsit_info_product_data_all.commref AS commref, (bv_almsit_info_product_data_all.data_0).productattributes AS productattributes, (bv_almsit_info_product_data_all.data_0).productimage AS productimage, (bv_almsit_info_product_data_all.data_0).productdocuments AS productdocuments, (bv_almsit_info_product_data_all.data_0).productcharacteristics AS productcharacteristics FROM bv_almsit_info_product_data_all WHERE data = 'ALL';

ALTER VIEW p_bv_almsit_info_product_data_all
 LAYOUT (bv_almsit_info_product_data_all = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_csv_sitelist FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_csv_sitelist.client AS client, bv_csv_sitelist.clientid_0 AS clientid_0, bv_csv_sitelist.clienttype_0 AS clienttype_0, bv_csv_sitelist.division AS division, bv_csv_sitelist.site AS site, bv_csv_sitelist.siteid_0 AS siteid_0, bv_csv_sitelist.siteaddress_0 AS siteaddress_0, bv_csv_sitelist.reltioid AS reltioid, bv_csv_sitelist.userid AS userid, 'ESS' AS source FROM bv_csv_sitelist;

ALTER VIEW p_bv_csv_sitelist
 LAYOUT (bv_csv_sitelist = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_dynamodb_almsit_hierarchy_new FOLDER = '/3 - integration/api4/v 2.0' AS SELECT uniqueid AS uniqueid, register(almassetidentifier, parentassetid, nodepath) AS hierarchy FROM bv_dynamodb_almsit_hierarchy_new GROUP BY uniqueid, nodepath, almassetidentifier, parentassetid;

ALTER VIEW p_bv_dynamodb_almsit_hierarchy_new
 LAYOUT (bv_dynamodb_almsit_hierarchy_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_dynamodb_dfdev_sites FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_dynamodb_dfdev_sites.sublocationid AS sublocationid, bv_dynamodb_dfdev_sites.siteid AS siteid, bv_dynamodb_dfdev_sites.sublocationpath AS sublocationpath, bv_dynamodb_dfdev_sites.type AS locationtype, bv_dynamodb_dfdev_sites.name AS sublocation_name FROM bv_dynamodb_dfdev_sites;

ALTER VIEW p_bv_dynamodb_dfdev_sites
 LAYOUT (bv_dynamodb_dfdev_sites = [87, 25, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_alarm FOLDER = '/2 - logical model' AS SELECT assetid, starttime, endtime, (bv_emcp_alarm.alarmoccurrences).items AS alarms FROM bv_emcp_alarm WHERE (query = 'query GetAlarms($$appContext: [EMCP_TopoNodeContextInput!]!, $$whereClause: EMCP_AlarmOccurrenceFilterInput, $$enableNotificationPreferences: Boolean, $$pageSize: Int, $$offset: Int) {{\n  alarmOccurrences(\n    appContext: $$appContext\n    enableNotificationPreferences: $$enableNotificationPreferences\n    where: $$whereClause\n    order: {{startTime: DESC}}\n    skip: $$offset\n    take: $$pageSize\n  ) {{\n    totalCount\n    pageInfo {{\n      hasNextPage\n      hasPreviousPage\n      __typename\n    }}\n    items {{\n      ...GeneralAlarmOccurrenceFields\n      __typename\n    }}\n    __typename\n  }}\n}}\n\nfragment GeneralAlarmOccurrenceFields on EMCP_AlarmOccurrence {{\n  id\n  startTime\n  endTime\n  alarmState\n  measures\n  possibleCause\n  possibleProblem\n  possibleRecommendation\n  possibleRisk\n  alarmOccurrencePValues {{\n    ...AlarmOccurrencePValueFields\n    __typename\n  }}\n  alarmInstance {{\n    id\n    alarmControl\n    alarmFamily\n    alarmModel\n    alarmPriority\n    alarmState\n    alarmConceptId\n    thingId\n    tsMath\n    alarmConcept {{\n      ...AlarmOccurrenceConceptFields\n      __typename\n    }}\n    thing {{\n      handle\n      label\n      __typename\n    }}\n    __typename\n  }}\n  acknowledgementAlarmStateTransition {{\n    alarmState\n    comment\n    idmsFederatedId\n    transitionTime\n    __typename\n  }}\n  __typename\n}}\n\nfragment AlarmOccurrenceConceptFields on EMCP_AlarmConcept {{\n  urn\n  name\n  icon\n  label\n  description\n  alarmEventConceptCategory {{\n    id\n    description\n    name\n    packageId\n    label\n    __typename\n  }}\n  __typename\n}}\n\nfragment AlarmOccurrencePValueFields on EMCP_AlarmOccurrencePValue {{\n  pival\n  pfval\n  psval\n  pTsVal\n  property {{\n    ...GeneralPropertyWithUnitFields\n    __typename\n  }}\n  __typename\n}}\n\nfragment GeneralPropertyWithUnitFields on EMCP_Property {{\n  name\n  urn\n  label\n  description\n  mandatory\n  visible\n  defIVal\n  defFVal\n  defSVal\n  orderingType\n  encodingType\n  propertyType\n  accessType\n  facetType\n  enumUrn\n  unit {{\n    ...GeneralUnitFields\n    __typename\n  }}\n  __typename\n}}\n\nfragment GeneralUnitFields on EMCP_Unit {{\n  id\n  name\n  isSi\n  symbol\n  urn\n  quantityName\n  __typename\n}}' AND variables = replace(replace(replace('{{
    "appContext": [
      {{
        "type": "TENANT",
        "id": 87293,
        "urn": "urn:edm-se:em:core:pr:tenant"
      }},
      {{
        "type": "ID",
        "id": ASSET_ID,
        "urn": "urn:edm-se:em:core:pr:panelboard"
      }}
    ],
    "pageSize": 5,
    "offset": 0,
    "enableNotificationPreferences": false,
    "whereClause": {{
      "startTime": {{
        "gte": "START_TIME",
        "lte": "END_TIME"
      }}
    }}
  }}', 'ASSET_ID', assetid), 'START_TIME', starttime), 'END_TIME', endtime)) USING PARAMETERS ( assetid : text, starttime : text, endtime : text);

ALTER VIEW p_bv_emcp_alarm
 LAYOUT (bv_emcp_alarm = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_asset_details FOLDER = '/2 - logical model' AS SELECT assetid, (bv_emcp_asset_details.things).totalcount AS totalcount, (bv_emcp_asset_details.things).items AS items, (bv_emcp_asset_details.things).__typename AS __typename FROM bv_emcp_asset_details WHERE (query = 'fragment conceptFragment on EMCP_Concept {{ __typename urn icon label description conceptKind}}fragment unitFragment on EMCP_Unit {{ __typename name isSi symbol quantityName}}fragment propertyFragment on EMCP_Property {{ __typename name urn label description mandatory visible example defIVal defFVal defSVal orderingType encodingType propertyType accessType facetType enumUrn unit {{ ...unitFragment __typename }}}}fragment pvalueFragment on EMCP_PValue {{ __typename pival pfval psval property {{ ...propertyFragment __typename }}}}fragment thingFragment on EMCP_Thing {{ __typename id name label handle concept {{ ...conceptFragment __typename }} pvalues(where: $$pvalueFilter) {{ ...pvalueFragment __typename }}}}query infoPanel_queryThing($$appContext: [EMCP_TopoNodeContextInput]!, $$thingFilter: EMCP_ThingFilterInput!, $$pvalueFilter: EMCP_PValueFilterInput!) {{ things( appContext: $$appContext includeLeafDevice: true includeAllParents: false where: $$thingFilter ) {{ totalCount items {{ ...thingFragment __typename }} __typename }}}}' AND variables = replace('{{
        "appContext": [
            {{
                "id": 87293,
                "urn": "urn:edm-se:em:core:pr:tenant",
                "label": "Mindt Chocolates",
                "type": "TENANT"
            }}
        ],
        "thingFilter": {{
            "id": {{
                "eq": AssetId
            }}
        }},
        "pvalueFilter": {{
            "property": {{
                "or": [
                    {{
                        "visible": {{
                            "neq": "NONE"
                        }},
                        "urn": {{
                            "nin": [
                                "urn:edm-se:em:core:pr:name",
                                "urn:edm-se:em:core:pr:label",
                                "urn:edm-se:em:core:pr:created_by",
                                "urn:edm-se:em:core:pr:updated_by"
                            ]
                        }}
                    }}
                ]
            }}
        }}
    }}', 'AssetId', assetid)) USING PARAMETERS ( assetid : text);

ALTER VIEW p_bv_emcp_asset_details
 LAYOUT (bv_emcp_asset_details = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_assetlist_1 FOLDER = '/1 - connectivity/2 - base views/new' AS SELECT bv_emcp_assetlist_1.variables AS variables, bv_emcp_assetlist_1.query AS query, bv_emcp_assetlist_1.hierarchy AS hierarchy, localsiteid FROM bv_emcp_assetlist_1 WHERE (query = 'query getHierarchyWithNodelinks($$appContext: [EMCP_TopoNodeContextInput], $$mode: EMCP_HierarchyMode!, $$whereClause: EMCP_HierarchyFilterInput, $$includeAllParents: Boolean!, $$includeProperties: [String!], $$includeNodelinks: [EMCP_LinkKindType!]) {{ hierarchy( mode: $$mode appContext: $$appContext includeAllParents: $$includeAllParents where: $$whereClause ) {{ parentId thing {{ id label handle concept {{ urn type: conceptKind __typename label name description }} nodeLinkDsts(where: {{kind: {{in: $$includeNodelinks}}}}) {{ ...GeneralNodeLinkFields __typename }} nodeLinkSrcs(where: {{kind: {{in: $$includeNodelinks}}}}) {{ ...GeneralNodeLinkFields __typename }} pvalues(where: {{property: {{urn: {{in: $$includeProperties}}}}}}) {{ pival pfval psval property {{ urn __typename name }} __typename }} __typename }} __typename }}}}fragment GeneralNodeLinkFields on EMCP_NodeLink {{ id kind srcId srcNode dstId dstNode percentage __typename}}' AND variables = replace('{{
  "appContext": [
    {{
      "type": "TENANT",
      "id": 87293,
      "urn": "urn:edm-se:em:core:pr:tenant"
    }},
    {{
      "type": "ID",
      "id": localSiteId,
      "urn": "urn:edm-se:em:core:pr:site"
    }}
  ],
  "mode": "PHYSICAL",
  "includeAllParents": false,
  "includeProperties": [
    "urn:edm-se:em:core:pr:is_asset",
    "urn:edm-se:em:core:pr:gateway",
    "urn:edm-se:em:core:pr:has_computed_values",
    "urn:edm-se:em:core:pr:serial_number",
    "urn:edm-se:em:core:pr:brand",
    "urn:edm-se:em:core:pr:commercial_reference",
    "urn:edm-se:em:core:pr:range",
    "urn:edm-se:em:core:pr:image_url",
    "urn:edm-se:em:core:pr:description"
  ],
  "includeNodelinks": [
    "FEED",
    "INCOMER",
    "RESIDUAL_FEED"
  ]
}}', 'localSiteId', localsiteid)) USING PARAMETERS ( localsiteid : text);

ALTER VIEW p_bv_emcp_assetlist_1
 LAYOUT (bv_emcp_assetlist_1 = [152, 68, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_sitehierarchy_new FOLDER = '/1 - connectivity/2 - base views/new' AS SELECT bv_emcp_sitehierarchy_new.variables AS variables, bv_emcp_sitehierarchy_new.query AS query, bv_emcp_sitehierarchy_new.tenants AS tenants, localsiteid FROM bv_emcp_sitehierarchy_new WHERE (query = 'query SitesPhysicalView($$mode: EMCP_HierarchyMode!, $$appContext: [EMCP_TopoNodeContextInput], $$includeAllParents: Boolean!) {{ tenants: hierarchy( mode: $$mode appContext: $$appContext includeAllParents: $$includeAllParents where: {{thing: {{concept: {{conceptKind: {{in: [OTHER]}}}}}}}} ) {{ level parentId childSite: thing {{ siteId: id name label tenantId concept {{ urn type: conceptKind properties {{ urn __typename }} __typename }} __typename }} __typename }}}}' AND variables = replace('{{
        "mode": "PHYSICAL",
        "appContext": [
            {{
                "id": 87293,
                "type": "TENANT",
                "urn": "urn:edm-se:em:core:pr:tenant"
            }},
            {{
                "type":"ID",
                "id":localSiteId,
                "urn":"urn:edm-se:em:core:pr:site"
            }}
        ],
        "includeAllParents": true
}}', 'localSiteId', localsiteid)) USING PARAMETERS ( localsiteid : text);

ALTER VIEW p_bv_emcp_sitehierarchy_new
 LAYOUT (bv_emcp_sitehierarchy_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_timeseries_new FOLDER = '/2 - logical model' AS SELECT assetid, starttime, endtime, (bv_emcp_timeseries_new.rawtrenddata).items AS items FROM bv_emcp_timeseries_new WHERE (query = 'query rawTrendData($$appContext: [EMCP_TopoNodeContextInput!]!, $$businessQuantityNames: [String!]!, $$startTime: DateTime!, $$endTime: DateTime!, $$timeZone: String!, $$take: Int = 250, $$skip: Int = 0) {{ rawTrendData( skip: $$skip take: $$take appContext: $$appContext businessQuantityNames: $$businessQuantityNames startTime: $$startTime endTime: $$endTime timeZone: $$timeZone ) {{ totalCount items {{ businessQuantity {{ name __typename }} measure {{ ...GeneralMeasureFields __typename }} thingId thingLabel thingContext {{ ...GeneralToponodeContextFields __typename }} timeZone timeSeriesValues {{ timestamp value __typename }} __typename }} __typename }}}}fragment GeneralToponodeContextFields on EMCP_TopoNodeContext {{ id type label name urn value __typename}}fragment GeneralMeasureFields on EMCP_Measure {{ id label urn unit {{ ...GeneralUnitFields __typename }} __typename}}fragment GeneralUnitFields on EMCP_Unit {{ id name isSi symbol urn quantityName __typename}}' AND variables = replace(replace(replace('{{
        "take": 250,
        "skip": 0,
        "appContext": [
            {{
                "type": "TENANT",
                "id": 87293,
                "urn": "urn:edm-se:em:core:pr:tenant"
            }},
            {{
                "type": "ID",
                "id": 87295,
                "urn": "urn:edm-se:em:core:pr:region"
            }},
            {{
                "type": "ID",
                "id": 87297,
                "urn": "urn:edm-se:em:core:pr:site"
            }},
            {{
                "type": "ID",
                "id": Asset_Id,
                "urn": "urn:edm-se:em:core:pc:power_meter"
            }}
        ],
        "businessQuantityNames": [
            "CURRENT",
            "CURRENT_A",
            "CURRENT_B",
            "CURRENT_C",
            "VOLTAGE",
            "VOLTAGE_AB",
            "VOLTAGE_BC",
            "VOLTAGE_CA",
            "VOLTAGE_AN",
            "VOLTAGE_BN",
            "VOLTAGE_CN",
            "ACTIVE_POWER",
            "ACTIVE_ENERGY"
        ],
        "startTime": "Start_Time",
        "endTime": "End_Time",
        "timeZone": "Asia/Calcutta"
    }}', 'Asset_Id', assetid), 'Start_Time', starttime), 'End_Time', endtime)) USING PARAMETERS ( assetid : text, starttime : text, endtime : text);

ALTER VIEW p_bv_emcp_timeseries_new
 LAYOUT (bv_emcp_timeseries_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_usage_energy FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_emcp_usage_energy.variables AS variables, bv_emcp_usage_energy.query AS query, bv_emcp_usage_energy.binnedusagetrenddata AS binnedusagetrenddata, localsiteid, starttime, endtime FROM bv_emcp_usage_energy WHERE (query = 'query binnedUsageTrendData($$appContext: [EMCP_TopoNodeContextInput!]!, $$businessQuantityName: String!, $$startTime: DateTime!, $$endTime: DateTime!, $$timeZone: String!, $$aggregationInterval: EMCP_AggregationInterval!, $$take: Int = 250, $$skip: Int = 0) {{ binnedUsageTrendData( skip: $$skip take: $$take appContext: $$appContext startTime: $$startTime endTime: $$endTime timeZone: $$timeZone businessQuantityName: $$businessQuantityName aggregationInterval: $$aggregationInterval ) {{ items {{ ...BinnedUsageTrendResultFields surfaceAreaValue __typename }} __typename }}}}fragment BinnedUsageTrendResultFields on EMCP_BusinessQuantityBinnedUsageTimeSeries {{ usageId businessQuantity {{ name __typename }} measure {{ ...GeneralMeasureFields __typename }} thingId thingLabel thingContext {{ type id urn __typename }} timeZone timeSeriesValues {{ startTime endTime keyTime value __typename }} __typename}}fragment GeneralMeasureFields on EMCP_Measure {{ id label urn unit {{ ...GeneralUnitFields __typename }} __typename}}fragment GeneralUnitFields on EMCP_Unit {{ id name isSi symbol urn quantityName __typename}}' AND variables = replace(replace(replace('{{
      "take":250,
      "skip":0,
      "startTime":"start_time",
      "endTime":"end_time",
      "appContext":[
         {{
            "type":"TENANT",
            "id":87293,
            "urn":"urn:edm-se:em:core:pr:tenant"
         }},
         {{
            "type":"ID",
            "id":87295,
            "urn":"urn:edm-se:em:core:pr:region"
         }},
         {{
            "type":"ID",
            "id":siteId,
            "urn":"urn:edm-se:em:core:pr:site"
         }}
      ],
      "businessQuantityName":"ACTIVE_ENERGY",
      "timeZone":"Asia/Calcutta",
      "aggregationInterval":"HOUR"
   }}', 'siteId', localsiteid), 'start_time', starttime), 'end_time', endtime)) USING PARAMETERS ( localsiteid : text, starttime : text, endtime : text);

ALTER VIEW p_bv_emcp_usage_energy
 LAYOUT (bv_emcp_usage_energy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_usage_energy_copy FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_emcp_usage_energy.variables AS variables, bv_emcp_usage_energy.query AS query, bv_emcp_usage_energy.binnedusagetrenddata AS binnedusagetrenddata, localsiteid, starttime, endtime FROM bv_emcp_usage_energy WHERE (query = 'query binnedUsageTrendData($$appContext: [EMCP_TopoNodeContextInput!]!, $$businessQuantityName: String!, $$startTime: DateTime!, $$endTime: DateTime!, $$timeZone: String!, $$aggregationInterval: EMCP_AggregationInterval!, $$take: Int = 250, $$skip: Int = 0) {{ binnedUsageTrendData( skip: $$skip take: $$take appContext: $$appContext startTime: $$startTime endTime: $$endTime timeZone: $$timeZone businessQuantityName: $$businessQuantityName aggregationInterval: $$aggregationInterval ) {{ items {{ ...BinnedUsageTrendResultFields surfaceAreaValue __typename }} __typename }}}}fragment BinnedUsageTrendResultFields on EMCP_BusinessQuantityBinnedUsageTimeSeries {{ usageId businessQuantity {{ name __typename }} measure {{ ...GeneralMeasureFields __typename }} thingId thingLabel thingContext {{ type id urn __typename }} timeZone timeSeriesValues {{ startTime endTime keyTime value __typename }} __typename}}fragment GeneralMeasureFields on EMCP_Measure {{ id label urn unit {{ ...GeneralUnitFields __typename }} __typename}}fragment GeneralUnitFields on EMCP_Unit {{ id name isSi symbol urn quantityName __typename}}' AND variables = replace(replace(replace('{{
      "take":250,
      "skip":0,
      "startTime":"start_time",
      "endTime":"end_time",
      "appContext":[
         {{
            "type":"TENANT",
            "id":87293,
            "urn":"urn:edm-se:em:core:pr:tenant"
         }},
         {{
            "type":"ID",
            "id":87295,
            "urn":"urn:edm-se:em:core:pr:region"
         }},
         {{
            "type":"ID",
            "id":siteId,
            "urn":"urn:edm-se:em:core:pr:site"
         }}
      ],
      "businessQuantityName":"ACTIVE_ENERGY",
      "timeZone":"Asia/Calcutta",
      "aggregationInterval":"HOUR"
   }}', 'siteId', localsiteid), 'start_time', starttime), 'end_time', endtime)) USING PARAMETERS ( localsiteid : text, starttime : text, endtime : text);

ALTER VIEW p_bv_emcp_usage_energy_copy
 LAYOUT (bv_emcp_usage_energy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_emcp_usage_power FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_emcp_usage_power.variables AS variables, bv_emcp_usage_power.query AS query, bv_emcp_usage_power.binnedusagetrenddata AS binnedusagetrenddata, localsiteid, starttime, endtime FROM bv_emcp_usage_power WHERE (query = 'query binnedUsageTrendData($$appContext: [EMCP_TopoNodeContextInput!]!, $$businessQuantityName: String!, $$startTime: DateTime!, $$endTime: DateTime!, $$timeZone: String!, $$aggregationInterval: EMCP_AggregationInterval!, $$take: Int = 250, $$skip: Int = 0) {{ binnedUsageTrendData( skip: $$skip take: $$take appContext: $$appContext startTime: $$startTime endTime: $$endTime timeZone: $$timeZone businessQuantityName: $$businessQuantityName aggregationInterval: $$aggregationInterval ) {{ items {{ ...BinnedUsageTrendResultFields surfaceAreaValue __typename }} __typename }}}}fragment BinnedUsageTrendResultFields on EMCP_BusinessQuantityBinnedUsageTimeSeries {{ usageId businessQuantity {{ name __typename }} measure {{ ...GeneralMeasureFields __typename }} thingId thingLabel thingContext {{ type id urn __typename }} timeZone timeSeriesValues {{ startTime endTime keyTime value __typename }} __typename}}fragment GeneralMeasureFields on EMCP_Measure {{ id label urn unit {{ ...GeneralUnitFields __typename }} __typename}}fragment GeneralUnitFields on EMCP_Unit {{ id name isSi symbol urn quantityName __typename}}' AND variables = replace(replace(replace('{{
      "take":250,
      "skip":0,
      "startTime":"start_time",
      "endTime":"end_time",
      "appContext":[
         {{
            "type":"TENANT",
            "id":87293,
            "urn":"urn:edm-se:em:core:pr:tenant"
         }},
         {{
            "type":"ID",
            "id":87295,
            "urn":"urn:edm-se:em:core:pr:region"
         }},
         {{
            "type":"ID",
            "id":siteId,
            "urn":"urn:edm-se:em:core:pr:site"
         }}
      ],
      "businessQuantityName":"ACTIVE_POWER",
      "timeZone":"Asia/Calcutta",
      "aggregationInterval":"HOUR"
   }}', 'siteId', localsiteid), 'start_time', starttime), 'end_time', endtime)) USING PARAMETERS ( localsiteid : text, starttime : text, endtime : text);

ALTER VIEW p_bv_emcp_usage_power
 LAYOUT (bv_emcp_usage_power = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_ess_apis_accountist FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_ess_apis_accountist.path AS path, bv_ess_apis_accountist.serviceoutput AS serviceoutput, bv_ess_apis_accountist.errormessage AS errormessage, bv_ess_apis_accountist.errorcode AS errorcode, siteclienthierid FROM bv_ess_apis_accountist WHERE path = replace('CostUsageAPI/HierarchyService.svc/HierarchyServices/Account/List/json?ServiceId=290&SiteClientHierId=ID', 'ID', siteclienthierid) USING PARAMETERS ( siteclienthierid : text);

ALTER VIEW p_bv_ess_apis_accountist
 LAYOUT (bv_ess_apis_accountist = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_ess_apis_costusage FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_ess_apis_costusage.path AS path, bv_ess_apis_costusage.serviceoutput AS serviceoutput, bv_ess_apis_costusage.errormessage AS errormessage, bv_ess_apis_costusage.errorcode AS errorcode, siteclienthierid, startdate, enddate FROM bv_ess_apis_costusage WHERE path = replace(replace(replace('CostUsageAPI/CostAndUsageService.svc/CostUsageServices/CostUsage/List/BySite/json?ServiceId=290&FromMonth=start_date&ToMonth=end_date&UsageUOM=20&CurrencyUOM=30&SiteClientHierIds=ID', 'ID', siteclienthierid), 'start_date', startdate), 'end_date', enddate) USING PARAMETERS ( siteclienthierid : text, startdate : text '03/2022', enddate : text '04/2022');

ALTER VIEW p_bv_ess_apis_costusage
 LAYOUT (bv_ess_apis_costusage = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_ess_apis_metricdata FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_ess_apis_metricdata.path AS path, bv_ess_apis_metricdata.serviceoutput AS serviceoutput, bv_ess_apis_metricdata.errormessage AS errormessage, bv_ess_apis_metricdata.errorcode AS errorcode, siteclienthierid, startdate, enddate FROM bv_ess_apis_metricdata WHERE path = replace(replace(replace('MetricAPI/MetricService.svc/MetricServices/GetMetricData/V2/Json?ClientHierId=ID&beginDate=start_date&endDate=end_date', 'ID', siteclienthierid), 'start_date', startdate), 'end_date', enddate) USING PARAMETERS ( siteclienthierid : text, startdate : text, enddate : text);

ALTER VIEW p_bv_ess_apis_metricdata
 LAYOUT (bv_ess_apis_metricdata = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_ess_apis_uommetadata FOLDER = '/1 - connectivity/2 - base views' AS SELECT bv_ess_apis_uommetadata.path AS path, bv_ess_apis_uommetadata.serviceoutput AS serviceoutput, bv_ess_apis_uommetadata.errormessage AS errormessage, bv_ess_apis_uommetadata.errorcode AS errorcode FROM bv_ess_apis_uommetadata WHERE path = 'CostUsageAPI/CostAndUsageService.svc/CostUsageServices/CostUsage/List/BySite/json?ServiceId=291&FromMonth=03/2022&ToMonth=04/2022&UsageUOM=20&CurrencyUOM=30';

ALTER VIEW p_bv_ess_apis_uommetadata
 LAYOUT (bv_ess_apis_uommetadata = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_ess_apis_usage_gas FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_ess_apis_costusage.path AS path, bv_ess_apis_costusage.serviceoutput AS serviceoutput, bv_ess_apis_costusage.errormessage AS errormessage, bv_ess_apis_costusage.errorcode AS errorcode, siteclienthierid, startdate, enddate FROM bv_ess_apis_costusage WHERE path = replace(replace(replace('CostUsageAPI/CostAndUsageService.svc/CostUsageServices/CostUsage/List/BySite/json?ServiceId=291&FromMonth=start_date&ToMonth=end_date&UsageUOM=20&CurrencyUOM=30&SiteClientHierIds=ID', 'ID', siteclienthierid), 'start_date', startdate), 'end_date', enddate) USING PARAMETERS ( siteclienthierid : text, startdate : text, enddate : text);

ALTER VIEW p_bv_ess_apis_usage_gas
 LAYOUT (bv_ess_apis_costusage = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_ess_apis_usage_power FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_ess_apis_costusage.path AS path, bv_ess_apis_costusage.serviceoutput AS serviceoutput, bv_ess_apis_costusage.errormessage AS errormessage, bv_ess_apis_costusage.errorcode AS errorcode, siteclienthierid, startdate, enddate FROM bv_ess_apis_costusage WHERE path = replace(replace(replace('CostUsageAPI/CostAndUsageService.svc/CostUsageServices/CostUsage/List/BySite/json?ServiceId=290&FromMonth=start_date&ToMonth=end_date&UsageUOM=20&CurrencyUOM=30&SiteClientHierIds=ID', 'ID', siteclienthierid), 'start_date', startdate), 'end_date', enddate) USING PARAMETERS ( siteclienthierid : text, startdate : text, enddate : text);

ALTER VIEW p_bv_ess_apis_usage_power
 LAYOUT (bv_ess_apis_costusage = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_product_attributes FOLDER = '/1 - connectivity/2 - base views' AS SELECT bv_product_attributes.commref AS commref, bv_product_attributes.creatorlastname_0 AS creatorlastname_0, bv_product_attributes.locale AS locale, bv_product_attributes.lastmodifierfirstname AS lastmodifierfirstname, bv_product_attributes.brand AS brand, bv_product_attributes.creationdate AS creationdate, bv_product_attributes.createdby AS createdby, bv_product_attributes.creatorfirstname AS creatorfirstname, bv_product_attributes.lastmodifierlastname AS lastmodifierlastname, bv_product_attributes.lastmodifiedby AS lastmodifiedby, bv_product_attributes.lastmodifieddate AS lastmodifieddate, bv_product_attributes.commrefstatus AS commrefstatus, bv_product_attributes.picturedocumentreference AS picturedocumentreference, bv_product_attributes.commercializationarea AS commercializationarea, bv_product_attributes.longdescription AS longdescription, bv_product_attributes.shortdescription AS shortdescription, bv_product_attributes.rangeid AS rangeid, bv_product_attributes.producttype AS producttype, bv_product_attributes.deviceshortname AS deviceshortname, bv_product_attributes.devicerange AS devicerange, bv_product_attributes.productname AS productname, bv_product_attributes.rowhash AS rowhash, bv_product_attributes.creatorlastname AS creatorlastname, bv_product_attributes.connectable AS connectable, bv_product_attributes.devicetype AS devicetype, bv_product_attributes.expiretime AS expiretime FROM bv_product_attributes;

ALTER VIEW p_bv_product_attributes
 LAYOUT (bv_product_attributes = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_test_alm_ping FOLDER = '/3 - integration/api1/archive' AS SELECT test_alm_ping.hello AS hello, 'SESA181815' AS userid FROM test_alm_ping;

ALTER VIEW p_test_alm_ping
 LAYOUT (test_alm_ping = [329, 189, 200, 200]);

CREATE OR REPLACE VIEW test1_alm FOLDER = '/henry' AS SELECT bv_dynamodb_almsit_registration_new.almassetidentifier AS assetid, bv_dynamodb_almsit_registration_new.siteid AS siteid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid FROM bv_dynamodb_almsit_registration_new AS bv_dynamodb_almsit_registration_new NESTED LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON bv_dynamodb_almsit_registration_new.siteid = bv_dynamodb_dfdev_master_siteid.almid ;

ALTER VIEW test1_alm
 LAYOUT (bv_dynamodb_almsit_registration_new = [83, 106, 200, 200], bv_dynamodb_dfdev_master_siteid = [407, 106, 200, 200]);

CREATE OR REPLACE VIEW test2_ess FOLDER = '/henry' AS SELECT bv_csv_ess_siteid_meterid_1.siteid AS siteid, bv_csv_ess_siteid_meterid_1.meterid AS assetid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid FROM bv_csv_ess_siteid_meterid_1 AS bv_csv_ess_siteid_meterid_1 LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON bv_csv_ess_siteid_meterid_1.siteid = bv_dynamodb_dfdev_master_siteid.essid ;

ALTER VIEW test2_ess
 LAYOUT (bv_csv_ess_siteid_meterid_1 = [20, 18, 200, 200], bv_dynamodb_dfdev_master_siteid = [569, 90, 200, 200]);

CREATE OR REPLACE VIEW alm_sitedetails_copy_copy_testshashi FOLDER = '/3 - integration/api2/archive' AS SELECT bv_dynamodb_dfdev_sites_1.publishercode AS publishercode, bv_dynamodb_dfdev_sites_1.description AS description, p_bv_dynamodb_dfdev_sites_1_copy.sublocationid AS sublocationid, p_bv_dynamodb_dfdev_sites_1_copy.siteid AS siteid, p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath AS sublocationpath, p_bv_dynamodb_dfdev_sites_1_copy.locationtype AS locationtype, p_bv_dynamodb_dfdev_sites_1_copy.sublocation_name AS sublocationname, substring(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, case WHEN (regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$', '') = regexp(regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', '')) THEN 0 ELSE (len(regexp(regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', ''))+1) END, len(regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$$', ''))) AS parentid FROM bv_dynamodb_dfdev_sites AS bv_dynamodb_dfdev_sites_1 NESTED ORDERED INNER JOIN p_bv_dynamodb_dfdev_sites AS p_bv_dynamodb_dfdev_sites_1_copy ON bv_dynamodb_dfdev_sites_1.siteid = p_bv_dynamodb_dfdev_sites_1_copy.siteid  WHERE p_bv_dynamodb_dfdev_sites_1_copy.sublocationid <> p_bv_dynamodb_dfdev_sites_1_copy.siteid;

ALTER VIEW alm_sitedetails_copy_copy_testshashi
 LAYOUT (bv_dynamodb_dfdev_sites = [333, 27, 200, 200], p_bv_dynamodb_dfdev_sites = [603, 51, 200, 200]);

CREATE OR REPLACE VIEW bv_alm_site_asset FOLDER = '/3 - integration/api3/archive' AS SELECT bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.name AS name, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.assetregistrationid AS assetregistrationid, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.almassetidentifier AS almassetidentifier, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.siteid AS siteid, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.userfedid AS userfedid, bv_dynamodb_almsit_did_3.almid AS almid, bv_dynamodb_almsit_did_3.brand AS brand, bv_dynamodb_almsit_did_3.commref AS commref, bv_dynamodb_almsit_did_3.devicetype AS devicetype, bv_dynamodb_almsit_did_3.range AS range, bv_dynamodb_almsit_did_3.serialnumber AS serialnumber, bv_dynamodb_almsit_did_3.ref AS ref, bv_dynamodb_almsit_info_attribute_3.assetinstallationtype AS assetinstallationtype, bv_dynamodb_almsit_info_attribute_3.assetname AS assetname, bv_dynamodb_almsit_info_attribute_3.commissioningdate AS commissioningdate, bv_dynamodb_almsit_info_attribute_3.createdby AS createdby, bv_dynamodb_almsit_info_attribute_3.description AS description, bv_dynamodb_almsit_info_attribute_3.equipmenttype AS equipmenttype, bv_dynamodb_almsit_info_attribute_3.isalmasset AS isalmasset, bv_dynamodb_almsit_info_attribute_3.isrootnode AS isrootnode, bv_dynamodb_almsit_info_attribute_3.lifecyclestatus AS lifecyclestatus, bv_dynamodb_almsit_info_attribute_3.publishercode AS publishercode FROM (bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3 AS bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3 NESTED PARALLEL ORDERED LEFT OUTER JOIN 200 bv_dynamodb_almsit_did_3 AS bv_dynamodb_almsit_did_3 ON bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.almassetidentifier = bv_dynamodb_almsit_did_3.almid ) NESTED PARALLEL ORDERED LEFT OUTER JOIN 200 bv_dynamodb_almsit_info_attribute_3 AS bv_dynamodb_almsit_info_attribute_3 ON bv_dynamodb_almsit_did_3.almid = bv_dynamodb_almsit_info_attribute_3.almassetidentifier  WHERE bv_dynamodb_almsit_did_3.ref = (bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.almassetidentifier||'_DETAIL');

ALTER VIEW bv_alm_site_asset
 LAYOUT (bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3 = [123, 52, 200, 200], bv_dynamodb_almsit_did_3 = [387, 6, 200, 200], bv_dynamodb_almsit_info_attribute_3 = [351, 195, 200, 200]);

CREATE OR REPLACE VIEW bv_alm_site_asset_copy FOLDER = '/3 - integration/api3/archive' AS SELECT bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.name AS name, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.assetregistrationid AS assetregistrationid, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.almassetidentifier AS almassetidentifier, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.siteid AS siteid, bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.userfedid AS userfedid, bv_dynamodb_almsit_did_3.almid AS almid, bv_dynamodb_almsit_did_3.brand AS brand, bv_dynamodb_almsit_did_3.commref AS commref, bv_dynamodb_almsit_did_3.devicetype AS devicetype, bv_dynamodb_almsit_did_3.range AS range, bv_dynamodb_almsit_did_3.serialnumber AS serialnumber, bv_dynamodb_almsit_did_3.ref AS ref, bv_dynamodb_almsit_info_attribute_3.assetinstallationtype AS assetinstallationtype, bv_dynamodb_almsit_info_attribute_3.assetname AS assetname, bv_dynamodb_almsit_info_attribute_3.commissioningdate AS commissioningdate, bv_dynamodb_almsit_info_attribute_3.createdby AS createdby, bv_dynamodb_almsit_info_attribute_3.description AS description, bv_dynamodb_almsit_info_attribute_3.equipmenttype AS equipmenttype, bv_dynamodb_almsit_info_attribute_3.isalmasset AS isalmasset, bv_dynamodb_almsit_info_attribute_3.isrootnode AS isrootnode, bv_dynamodb_almsit_info_attribute_3.lifecyclestatus AS lifecyclestatus, bv_dynamodb_almsit_info_attribute_3.publishercode AS publishercode FROM (bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3 AS bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3 NESTED PARALLEL ORDERED LEFT OUTER JOIN 200 bv_dynamodb_almsit_did_3 AS bv_dynamodb_almsit_did_3 ON bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.almassetidentifier = bv_dynamodb_almsit_did_3.almid ) NESTED PARALLEL LEFT OUTER JOIN 200 bv_dynamodb_almsit_info_attribute_3 AS bv_dynamodb_almsit_info_attribute_3 ON bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.almassetidentifier = bv_dynamodb_almsit_info_attribute_3.almassetidentifier  WHERE bv_dynamodb_almsit_did_3.ref = (bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3.almassetidentifier||'_DETAIL');

ALTER VIEW bv_alm_site_asset_copy
 LAYOUT (bv_dynamodb_dfdev_sites_3_j_bv_dynamodb_almsit_registration_3 = [55, 82, 200, 200], bv_dynamodb_almsit_did_3 = [352, 6, 200, 200], bv_dynamodb_almsit_info_attribute_3 = [322, 193, 200, 200]);

CREATE OR REPLACE VIEW bv_csv_ess_siteid_meterid_master_siteid FOLDER = '/3 - integration/api3/v 1.0' AS SELECT bv_csv_ess_siteid_meterid_asset_masterid.siteid AS siteid, bv_csv_ess_siteid_meterid_asset_masterid.siteaddress AS siteaddress, bv_dynamodb_dfdev_master_siteid_3.reltiogoldenid AS reltiogoldenid, bv_csv_ess_siteid_meterid_asset_masterid.commodity AS commodity, bv_csv_ess_siteid_meterid_asset_masterid.meter AS meter, bv_csv_ess_siteid_meterid_asset_masterid.meterid AS meterid, bv_csv_ess_siteid_meterid_asset_masterid.assetmasterid AS assetmasterid, bv_csv_ess_siteid_meterid_asset_masterid.source AS source FROM bv_dynamodb_dfdev_master_siteid_3 AS bv_dynamodb_dfdev_master_siteid_3 NESTED ORDERED INNER JOIN bv_csv_ess_siteid_meterid_asset_masterid AS bv_csv_ess_siteid_meterid_asset_masterid ON bv_dynamodb_dfdev_master_siteid_3.essid = bv_csv_ess_siteid_meterid_asset_masterid.siteid ;

ALTER VIEW bv_csv_ess_siteid_meterid_master_siteid
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3 = [133, 62, 200, 200], bv_csv_ess_siteid_meterid_asset_masterid = [611, 85, 200, 200]);

CREATE OR REPLACE VIEW bv_csv_sitelist_j_p_test_alm_ping FOLDER = '/3 - integration/api1/archive' AS SELECT bv_csv_sitelist.client AS client, bv_csv_sitelist.clientid_0 AS clientid_0, bv_csv_sitelist.clienttype_0 AS clienttype_0, bv_csv_sitelist.division AS division, bv_csv_sitelist.site AS site, bv_csv_sitelist.siteid_0 AS siteid_0, bv_csv_sitelist.siteaddress_0 AS siteaddress_0, bv_csv_sitelist.reltioid AS reltioid, bv_csv_sitelist.userid AS userid, p_test_alm_ping.hello AS hello FROM bv_csv_sitelist AS bv_csv_sitelist NESTED PARALLEL ORDERED INNER JOIN 1 p_test_alm_ping AS p_test_alm_ping ON bv_csv_sitelist.userid = p_test_alm_ping.userid ;

ALTER VIEW bv_csv_sitelist_j_p_test_alm_ping
 LAYOUT (bv_csv_sitelist = [141, 180, 200, 200], p_test_alm_ping = [729, 173, 200, 200]);

CREATE OR REPLACE VIEW f_bv_csv_ess_siteid_meterid_array_3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT meterid AS meterid, siteid AS siteid, value AS value, key AS name FROM FLATTEN bv_csv_ess_siteid_meterid_array_3 AS v ( v.attributes);

ALTER VIEW f_bv_csv_ess_siteid_meterid_array_3
 LAYOUT (bv_csv_ess_siteid_meterid_array_3 = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_dynamodb_almsit_info_attribute_indexed_register FOLDER = '/3 - integration/api4/v 2.0' AS SELECT almassetidentifier AS almassetidentifier, commref AS commref, value AS value, key AS name, assetname AS assetname, description AS description FROM FLATTEN bv_dynamodb_almsit_info_attribute_indexed_register AS v ( v.attributes);

ALTER VIEW f_bv_dynamodb_almsit_info_attribute_indexed_register
 LAYOUT (bv_dynamodb_almsit_info_attribute_indexed_register = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_emcp_assetlist_emcp_token FOLDER = '/2 - logical model' AS SELECT localsiteid AS localsiteid, parentid AS parentid, thing AS thing, (thing).id AS id, (thing).label AS label, (thing).concept.type AS type, (thing).pvalues AS pvalues, 'EMCP' AS source FROM FLATTEN bv_emcp_assetlist_emcp_token AS v ( v.hierarchy);

ALTER VIEW f_bv_emcp_assetlist_emcp_token
 LAYOUT (bv_emcp_assetlist_emcp_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_emcp_sitelist_token FOLDER = '/3 - integration/api1/archive' AS SELECT thing AS thing, (thing).id AS id, (thing).name AS name, (thing).label AS label, (thing).concept AS concept, (thing).pvalues AS pvalues, (thing).concept.urn AS urn FROM FLATTEN bv_emcp_sitelist_token AS v ( v.hierarchy);

ALTER VIEW f_bv_emcp_sitelist_token
 LAYOUT (bv_emcp_sitelist_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_emcp_sitelist_token_formatted FOLDER = '/2 - logical model' AS SELECT (thing).id AS id, (thing).name AS name, (thing).label AS label, (thing).pvalues AS pvalues FROM FLATTEN bv_emcp_sitelist_token AS v ( v.hierarchy);

ALTER VIEW f_bv_emcp_sitelist_token_formatted
 LAYOUT (bv_emcp_sitelist_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_ess_site_list_api_copy_j_bv_dynamodb_dfdev_master_siteid FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_ess_site_list_api_copy.sitename AS sitename, f_bv_ess_site_list_api_copy.siteid AS siteid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, 'ESS' AS source, 'NULL' AS createdby FROM f_bv_ess_site_list_api_copy AS f_bv_ess_site_list_api_copy NESTED ORDERED LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid_archive AS bv_dynamodb_dfdev_master_siteid ON f_bv_ess_site_list_api_copy.siteid = bv_dynamodb_dfdev_master_siteid.essid ;

ALTER VIEW f_bv_ess_site_list_api_copy_j_bv_dynamodb_dfdev_master_siteid
 LAYOUT (f_bv_ess_site_list_api_copy = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid_archive = [316, 38, 200, 200]);

CREATE OR REPLACE VIEW f_bv_ess_site_list_api_formatted_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT bv_dynamodb_dfdev_master_siteid_v2.reltiogoldenid AS id, f_bv_ess_site_list_api_v2.sitename AS name, f_bv_ess_site_list_api_v2.siteid AS siteid, 'ESS' AS source, f_bv_ess_site_list_api_v2.statename AS statename, f_bv_ess_site_list_api_v2.siteaddressline1 AS siteaddressline1, f_bv_ess_site_list_api_v2.city AS city, f_bv_ess_site_list_api_v2.zipcode AS zipcode, f_bv_ess_site_list_api_v2.divisionname AS divisionname, f_bv_ess_site_list_api_v2.weatherstationcode AS weatherstationcode, f_bv_ess_site_list_api_v2.divisionclienthierid AS divisionclienthierid, f_bv_ess_site_list_api_v2.countryname AS countryname, f_bv_ess_site_list_api_v2.siteclosed AS siteclosed, f_bv_ess_site_list_api_v2.idmnodeid AS idmnodeid, f_bv_ess_site_list_api_v2.siteclienthierid AS siteclienthierid, f_bv_ess_site_list_api_v2.sitereferencenumber AS sitereferencenumber, f_bv_ess_site_list_api_v2.type AS type, f_bv_ess_site_list_api_v2.geolong AS geolong, f_bv_ess_site_list_api_v2.sitenotmanaged AS sitenotmanaged, bv_dynamodb_dfdev_master_siteid_v2.almid AS almid, bv_dynamodb_dfdev_master_siteid_v2.emcpid AS emcpid, bv_dynamodb_dfdev_master_siteid_v2.essid AS essid, bv_dynamodb_dfdev_master_siteid_v2.reltiogoldenid AS reltiogoldenid FROM f_bv_ess_site_list_api_v2_archive AS f_bv_ess_site_list_api_v2 INNER JOIN bv_dynamodb_dfdev_master_siteid_v2_archive AS bv_dynamodb_dfdev_master_siteid_v2 ON f_bv_ess_site_list_api_v2.siteid = bv_dynamodb_dfdev_master_siteid_v2.essid ;

ALTER VIEW f_bv_ess_site_list_api_formatted_v2
 LAYOUT (f_bv_ess_site_list_api_v2_archive = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid_v2_archive = [416, 14, 200, 200]);

CREATE OR REPLACE VIEW f_bv_reltio_sitedetails2_j_apigee_token FOLDER = '/2 - logical model' AS SELECT sitegoldenid AS id, address AS address, phone AS phone, accountowner AS seprimarycontact, website AS website, name AS name, (marketsubsegment).value AS marketsubsegment, (customerclassificationlevel1).value AS customerclassificationlevel1, (customerclassificationlevel2).value AS customerclassificationlevel2, (businessunitcode).value AS businesstype, (marketsegment).value AS marketsegment FROM FLATTEN bv_reltio_sitedetails2_j_apigee_token AS v ( v.results);

ALTER VIEW f_bv_reltio_sitedetails2_j_apigee_token
 LAYOUT (bv_reltio_sitedetails2_j_apigee_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_bv_reltio_sitedetails_apigee_token FOLDER = '/3 - integration/api2/archive' AS SELECT sitegoldenid AS id, accountowner AS createdby, name AS name, customerclassificationlevel1 AS customerclassificationlevel1, marketsegment AS marketsegment, accountlifecycle AS accountlifecycle, address AS address, sitegoldenid AS sitegoldenid FROM FLATTEN bv_reltio_sitedetails_apigee_token AS v ( v.results);

ALTER VIEW f_bv_reltio_sitedetails_apigee_token
 LAYOUT (bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_reltio_sitedetails2_j_apigee_token FOLDER = '/3 - integration/api1/archive' AS SELECT sitegoldenid AS id, accountowner AS setprimarycontact, website AS website, name AS name, (marketsubsegment).value AS marketsubsegment, (customerclassificationlevel1).value AS customerclassificationlevel1, (customerclassificationlevel2).value AS customerclassificationlevel2, (businessunitcode).value AS businesstype, (marketsegment).value AS marketsegment FROM FLATTEN bv_reltio_sitedetails2_j_apigee_token AS v ( v.results);

ALTER VIEW f_f_bv_reltio_sitedetails2_j_apigee_token
 LAYOUT (bv_reltio_sitedetails2_j_apigee_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_p_bv_emcp_asset_details FOLDER = '/3 - integration/api4/v 1.0' AS SELECT assetid AS assetid, case WHEN (psval is not null ) THEN psval ELSE pival END AS value, (property).name AS name, (property).label AS label, (property).description AS description, (property).unit AS unit FROM FLATTEN p_bv_emcp_asset_details AS v ( v.items) ( v.items.pvalues);

ALTER VIEW f_p_bv_emcp_asset_details
 LAYOUT (p_bv_emcp_asset_details = [123, 59, 200, 200]);

CREATE OR REPLACE VIEW f_p_bv_emcp_assetlist_1 FOLDER = '/2 - logical model' AS SELECT localsiteid AS localsiteid, parentid AS parentid, thing AS thing, (thing).id AS id, (thing).label AS label, (thing).concept.type AS type, (thing).pvalues AS pvalues, 'EMCP' AS source FROM FLATTEN p_bv_emcp_assetlist_1 AS v ( v.hierarchy);

ALTER VIEW f_p_bv_emcp_assetlist_1
 LAYOUT (p_bv_emcp_assetlist_1 = [119, 78, 200, 200]);

CREATE OR REPLACE VIEW f_p_bv_emcp_timeseries_new FOLDER = '/2 - logical model' AS SELECT assetid AS assetid, starttime AS starttime, endtime AS endtime, (businessquantity).name AS name, (measure).label AS label, (measure).unit.symbol AS symbol, timeseriesvalues AS value FROM FLATTEN p_bv_emcp_timeseries_new AS v ( v.items);

ALTER VIEW f_p_bv_emcp_timeseries_new
 LAYOUT (p_bv_emcp_timeseries_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_p_bv_ess_apis_accountist FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.siteclienthierid AS siteclienthierid, nest(v.accountid, v.accountvendorname, v.supplieraccountbegindate, v.supplieraccountenddate, v.accounttype) AS accounts FROM FLATTEN p_bv_ess_apis_accountist AS v ( v.serviceoutput);

ALTER VIEW f_p_bv_ess_apis_accountist
 LAYOUT (p_bv_ess_apis_accountist = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_p_bv_ess_apis_metricdata FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.siteclienthierid AS siteclienthierid, v.startdate AS startdate, v.enddate AS enddate, nest(v.attributename, v.attributevalue, v.startdt, v.enddt, v.attributetype) AS metrics FROM FLATTEN p_bv_ess_apis_metricdata AS v ( v.serviceoutput);

ALTER VIEW f_p_bv_ess_apis_metricdata
 LAYOUT (p_bv_ess_apis_metricdata = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_p_bv_ess_apis_usage_gas FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.siteclienthierid AS siteclienthierid, v.servicename AS usagename, v.enddate AS enddate, v.startdate AS startdate, nest(v.month, v.usage, v.cost) AS timeseriesdata FROM FLATTEN p_bv_ess_apis_usage_gas AS v ( v.serviceoutput) GROUP BY v.servicename, v.enddate, v.startdate, v.siteclienthierid;

ALTER VIEW f_p_bv_ess_apis_usage_gas
 LAYOUT (p_bv_ess_apis_usage_gas = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_p_bv_ess_apis_usage_power FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.siteclienthierid AS siteclienthierid, v.servicename AS usagename, v.startdate AS startdate, v.enddate AS enddate, nest(v.month, v.usage, v.cost) AS timeseriesdata FROM FLATTEN p_bv_ess_apis_usage_power AS v ( v.serviceoutput) GROUP BY v.servicename, v.enddate, v.startdate, v.siteclienthierid;

ALTER VIEW f_p_bv_ess_apis_usage_power
 LAYOUT (p_bv_ess_apis_usage_power = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_asset_attribute_register FOLDER = '/3 - integration/api4/v 1.0' AS SELECT almassetidentifier, commref, unpivotregister(
register(publishercode, equipmenttype, commissioningdate, assetinstallationtype, createdby, lifecyclestatus, commref, serialnumber, brand, devicetype))
AS attributes FROM (select almassetidentifier,
 publishercode, equipmenttype, commissioningdate, assetinstallationtype, createdby, lifecyclestatus, commref, serialnumber, brand, devicetype
from p_bv_almsit_api_info_attribute_all) CONTEXT ('formatted' = 'yes');

CREATE OR REPLACE VIEW iv_dynamodb_sites_alm_formatted_formatted_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT iv_dynamodb_sites_alm_formatted_v2.id AS id, iv_dynamodb_sites_alm_formatted_v2.name AS name, iv_dynamodb_sites_alm_formatted_v2.description AS description, iv_dynamodb_sites_alm_formatted_v2.createdby AS createdby, iv_dynamodb_sites_alm_formatted_v2.sublocationid AS sublocationid, iv_dynamodb_sites_alm_formatted_v2.siteid AS siteid, iv_dynamodb_sites_alm_formatted_v2.publishercode AS publishercode, iv_dynamodb_sites_alm_formatted_v2.source AS source, bv_dynamodb_dfdev_master_siteid_v2.reltiogoldenid AS reltiogoldenid FROM iv_dynamodb_sites_alm_formatted_v2 AS iv_dynamodb_sites_alm_formatted_v2 INNER JOIN bv_dynamodb_dfdev_master_siteid_v2_archive AS bv_dynamodb_dfdev_master_siteid_v2 ON iv_dynamodb_sites_alm_formatted_v2.siteid = bv_dynamodb_dfdev_master_siteid_v2.almid ;

ALTER VIEW iv_dynamodb_sites_alm_formatted_formatted_v2
 LAYOUT (iv_dynamodb_sites_alm_formatted_v2 = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid_v2_archive = [382, 19, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_site_list_j_accountist_j_metricdata_j_costusage FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_ess_site_list_api.siteid AS siteid, f_bv_ess_site_list_api.sitename AS sitename, f_bv_ess_site_list_api.address AS address, f_bv_ess_site_list_api.source AS source, f_bv_ess_site_list_api.siteclienthierid AS siteclienthierid, p_bv_ess_apis_accountist.serviceoutput AS serviceoutput, p_bv_ess_apis_metricdata.serviceoutput AS serviceoutput_metric, p_bv_ess_apis_costusage.serviceoutput AS serviceoutput_costusage, p_bv_ess_apis_metricdata.startdate AS metricbegindate, p_bv_ess_apis_metricdata.enddate AS metricenddate, p_bv_ess_apis_costusage.startdate AS usagefrommonth, p_bv_ess_apis_costusage.enddate AS usagetomonth FROM ((f_bv_ess_site_list_api AS f_bv_ess_site_list_api LEFT OUTER JOIN p_bv_ess_apis_accountist AS p_bv_ess_apis_accountist ON f_bv_ess_site_list_api.siteclienthierid = p_bv_ess_apis_accountist.siteclienthierid ) LEFT OUTER JOIN p_bv_ess_apis_metricdata AS p_bv_ess_apis_metricdata ON f_bv_ess_site_list_api.siteclienthierid = p_bv_ess_apis_metricdata.siteclienthierid ) LEFT OUTER JOIN p_bv_ess_apis_usage_power AS p_bv_ess_apis_costusage ON f_bv_ess_site_list_api.siteclienthierid = p_bv_ess_apis_costusage.siteclienthierid ;

ALTER VIEW iv_ess_site_list_j_accountist_j_metricdata_j_costusage
 LAYOUT (f_bv_ess_site_list_api = [28, 106, 200, 200], p_bv_ess_apis_accountist = [337, 3, 200, 200], p_bv_ess_apis_metricdata = [337, 108, 200, 200], p_bv_ess_apis_usage_power = [339, 200, 200, 200]);

CREATE OR REPLACE VIEW iv_sublocation_j_bv_dynamodb_dfdev_master_sublocationids FOLDER = '/3 - integration/api2/newdesign' AS SELECT p_bv_dynamodb_dfdev_sites_1_copy.siteid AS siteid, p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath AS sublocationpath, p_bv_dynamodb_dfdev_sites_1_copy.locationtype AS locationtype, p_bv_dynamodb_dfdev_sites_1_copy.sublocation_name AS sublocation_name, bv_dynamodb_dfdev_master_sublocationids.id AS sublocationmasterid FROM p_bv_dynamodb_dfdev_sites AS p_bv_dynamodb_dfdev_sites_1_copy LEFT OUTER JOIN bv_dynamodb_dfdev_master_sublocationids AS bv_dynamodb_dfdev_master_sublocationids ON p_bv_dynamodb_dfdev_sites_1_copy.sublocationid = bv_dynamodb_dfdev_master_sublocationids.almid  WHERE p_bv_dynamodb_dfdev_sites_1_copy.sublocationid <> p_bv_dynamodb_dfdev_sites_1_copy.siteid;

ALTER VIEW iv_sublocation_j_bv_dynamodb_dfdev_master_sublocationids
 LAYOUT (p_bv_dynamodb_dfdev_sites = [62, 31, 200, 200], bv_dynamodb_dfdev_master_sublocationids = [428, 45, 200, 200]);

CREATE OR REPLACE VIEW iv_user_customer_j_sites_j__master_siteid_j_master_customerid_j_p_f_bv_reltio_sitedetails FOLDER = '/2 - logical model' AS SELECT iv_user_customer_j_sites.userid AS userid, iv_user_customer_j_sites.customerid AS customerid, bv_dynamodb_dfdev_master_siteid.id AS siteid, bv_dynamodb_dfdev_master_siteid.almid AS almid, bv_dynamodb_dfdev_master_siteid.emcpid AS emcpid, bv_dynamodb_dfdev_master_siteid.essid AS essid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_master_customerid.reltiogoldenid AS customerreltiogoldenid FROM (iv_user_customer_j_sites AS iv_user_customer_j_sites LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON iv_user_customer_j_sites.siteid = bv_dynamodb_dfdev_master_siteid.id ) LEFT OUTER JOIN bv_dynamodb_dfdev_master_customerid AS bv_dynamodb_dfdev_master_customerid ON iv_user_customer_j_sites.customerid = bv_dynamodb_dfdev_master_customerid.id ;

ALTER VIEW iv_user_customer_j_sites_j__master_siteid_j_master_customerid_j_p_f_bv_reltio_sitedetails
 LAYOUT (iv_user_customer_j_sites = [24, 59, 200, 200], bv_dynamodb_dfdev_master_siteid = [358, 148, 200, 200], bv_dynamodb_dfdev_master_customerid = [368, 4, 200, 200]);

CREATE OR REPLACE VIEW iv_user_customer_j_sites_j_customermaster_j_sitemaster FOLDER = '/2 - logical model' AS SELECT iv_user_customer_j_sites.userid AS userid, iv_user_customer_j_sites.customerid AS customerid, bv_dynamodb_dfdev_master_siteid.id AS siteid, bv_dynamodb_dfdev_master_siteid.almid AS almid, bv_dynamodb_dfdev_master_siteid.emcpid AS emcpid, bv_dynamodb_dfdev_master_siteid.essid AS essid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_master_customerid.reltiogoldenid AS customerreltiogoldenid FROM (iv_user_customer_j_sites AS iv_user_customer_j_sites LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON iv_user_customer_j_sites.siteid = bv_dynamodb_dfdev_master_siteid.id ) LEFT OUTER JOIN bv_dynamodb_dfdev_master_customerid AS bv_dynamodb_dfdev_master_customerid ON iv_user_customer_j_sites.customerid = bv_dynamodb_dfdev_master_customerid.id ;

ALTER VIEW iv_user_customer_j_sites_j_customermaster_j_sitemaster
 LAYOUT (iv_user_customer_j_sites = [24, 59, 200, 200], bv_dynamodb_dfdev_master_siteid = [358, 148, 200, 200], bv_dynamodb_dfdev_master_customerid = [368, 4, 200, 200]);

CREATE OR REPLACE VIEW iv_user_customer_sites_j_master_siteid FOLDER = '/2 - logical model' AS SELECT iv_user_customer_j_sites.userid AS userid, iv_user_customer_j_sites.customerid AS customerid, bv_dynamodb_dfdev_master_siteid.id AS id, bv_dynamodb_dfdev_master_siteid.almid AS almid, bv_dynamodb_dfdev_master_siteid.emcpid AS emcpid, bv_dynamodb_dfdev_master_siteid.essid AS essid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid FROM iv_user_customer_j_sites AS iv_user_customer_j_sites LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON iv_user_customer_j_sites.siteid = bv_dynamodb_dfdev_master_siteid.id ;

ALTER VIEW iv_user_customer_sites_j_master_siteid
 LAYOUT (iv_user_customer_j_sites = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid = [342, 25, 200, 200]);

CREATE OR REPLACE VIEW iv_userid_to_customerid_siteid_mapping FOLDER = '/2 - logical model' AS SELECT iv_user_customer_j_customer_sites.userid AS userid, iv_user_customer_j_customer_sites.customerid AS customerid, iv_user_customer_j_customer_sites.siteid AS siteid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid FROM iv_user_customer_j_customer_sites AS iv_user_customer_j_customer_sites NESTED PARALLEL LEFT OUTER JOIN 25 bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON iv_user_customer_j_customer_sites.siteid = bv_dynamodb_dfdev_master_siteid.id ;

ALTER VIEW iv_userid_to_customerid_siteid_mapping
 LAYOUT (bv_dynamodb_dfdev_master_siteid = [361, 52, 200, 200], iv_user_customer_j_customer_sites = [32, 8, 200, 200]);

CREATE OR REPLACE VIEW iv_usr_cust_sites_j_master_siteid FOLDER = '/3 - integration/api6' AS SELECT iv_user_customer_j_sites.userid AS userid, iv_user_customer_j_sites.customerid AS customerid, iv_user_customer_j_sites.siteid AS siteid, bv_dynamodb_dfdev_master_siteid.almid AS almid, bv_dynamodb_dfdev_master_siteid.emcpid AS emcpid, bv_dynamodb_dfdev_master_siteid.essid AS essid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid FROM iv_user_customer_j_sites AS iv_user_customer_j_sites LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON iv_user_customer_j_sites.siteid = bv_dynamodb_dfdev_master_siteid.id ;

ALTER VIEW iv_usr_cust_sites_j_master_siteid
 LAYOUT (iv_user_customer_j_sites = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid = [304, 24, 200, 200]);

CREATE OR REPLACE VIEW p_bv_csv_ess_siteid_meterid FOLDER = '/3 - integration/api3/v 1.0' AS SELECT bv_csv_ess_siteid_meterid_asset_masterid.commodity AS description, bv_csv_ess_siteid_meterid_asset_masterid.meter AS name, bv_csv_ess_siteid_meterid_asset_masterid.meterid AS id, bv_csv_ess_siteid_meterid_asset_masterid.meterid AS serialnumber, 'test' AS brand, 'test' AS reference, 'test' AS range, bv_csv_ess_siteid_meterid_asset_masterid.reltioid AS reltiogoldenid, bv_csv_ess_siteid_meterid_asset_masterid.assetmasterid AS assetmasterid, source AS source FROM bv_csv_ess_siteid_meterid_asset_masterid;

ALTER VIEW p_bv_csv_ess_siteid_meterid
 LAYOUT (bv_csv_ess_siteid_meterid_asset_masterid = [33, 77, 200, 200]);

CREATE OR REPLACE VIEW p_bv_csv_ess_siteid_meterid_array FOLDER = '/3 - integration/api4/v 1.0' AS SELECT iv_csv_ess_siteid_meterid_array.meterid AS id, iv_csv_ess_siteid_meterid_array.attributes AS attributes, NULL AS commref FROM iv_csv_ess_siteid_meterid_array;

ALTER VIEW p_bv_csv_ess_siteid_meterid_array
 LAYOUT (iv_csv_ess_siteid_meterid_array = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_csv_ess_siteid_meterid_array_3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT bv_csv_ess_siteid_meterid_array_3.meterid AS id, bv_csv_ess_siteid_meterid_array_3.siteid AS siteid, bv_csv_ess_siteid_meterid_array_3.attributes AS attributes, NULL AS commref FROM bv_csv_ess_siteid_meterid_array_3;

ALTER VIEW p_bv_csv_ess_siteid_meterid_array_3
 LAYOUT (bv_csv_ess_siteid_meterid_array_3 = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_sitedetails FOLDER = '/2 - logical model' AS SELECT f_bv_reltio_sitedetails.sitegoldenid AS id, f_bv_reltio_sitedetails.name AS name, register(f_bv_reltio_sitedetails.addressline1, f_bv_reltio_sitedetails.city, f_bv_reltio_sitedetails.state, f_bv_reltio_sitedetails.postalcode, f_bv_reltio_sitedetails.country, f_bv_reltio_sitedetails.addresstype) AS address, f_bv_reltio_sitedetails.businesstype AS businesstype, f_bv_reltio_sitedetails.phonenumber AS phone, f_bv_reltio_sitedetails.website AS website, f_bv_reltio_sitedetails.accountowner AS seprimarycontact, f_bv_reltio_sitedetails.marketsegment AS marketsegment, f_bv_reltio_sitedetails.marketsubsegment AS marketsubsegment, f_bv_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, f_bv_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2 FROM f_bv_reltio_sitedetails;

ALTER VIEW p_f_bv_reltio_sitedetails
 LAYOUT (f_bv_reltio_sitedetails = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_bv_almsit_api_info_attribute_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT p_bv_almsit_api_info_attribute_all.almassetidentifier AS almassetidentifier, (p_bv_almsit_api_info_attribute_all.registration).createdby AS createdby, (p_bv_almsit_api_info_attribute_all.registration).creationtime AS creationdate, (p_bv_almsit_api_info_attribute_all.registration).lastmodifiedby AS lastmodifiedby, (p_bv_almsit_api_info_attribute_all.registration).lastmodifiedtime AS lastmodifieddate, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.city AS city, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.countrylabel AS country, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.gpslatitude AS latitude, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.gpslongitude AS longitude, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.siteid AS id, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.sitename AS name, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.statelabel AS state, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.street AS street, (p_bv_almsit_api_info_attribute_all.registration).sitedetails.zipcode AS postalcode FROM p_bv_almsit_api_info_attribute_all;

ALTER VIEW p_p_bv_almsit_api_info_attribute_all
 LAYOUT (p_bv_almsit_api_info_attribute_all = [21, 25, 200, 200]);

CREATE OR REPLACE VIEW p_p_bv_almsit_api_product_data_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT p_bv_almsit_api_product_data_all.commref AS commref, (p_bv_almsit_api_product_data_all.data).productattributes AS productattributes, (p_bv_almsit_api_product_data_all.data).productimage AS productimage, (p_bv_almsit_api_product_data_all.data).productdocuments AS productdocuments, (p_bv_almsit_api_product_data_all.data).productcharacteristics AS productcharacteristics FROM p_bv_almsit_api_product_data_all;

ALTER VIEW p_p_bv_almsit_api_product_data_all
 LAYOUT (p_bv_almsit_api_product_data_all = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_bv_almsit_info_product_data_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT commref AS commref, access_token AS access_token, nest(productattributes, productdocuments, productimage, productcharacteristics) AS productdetails FROM p_bv_almsit_info_product_data_all GROUP BY commref, access_token;

ALTER VIEW p_p_bv_almsit_info_product_data_all
 LAYOUT (p_bv_almsit_info_product_data_all = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW bv_dynamodb_dfdev_sites_j_sublocation FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_dynamodb_dfdev_sites_1.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_sites_1.createdby AS createdby, bv_dynamodb_dfdev_sites_1.siteid AS siteid, bv_dynamodb_dfdev_sites_1.reltiocertified AS reltiocertified, bv_dynamodb_dfdev_sites_1.name AS name, bv_dynamodb_dfdev_sites_1.description AS description, substring(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, case WHEN (regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$', '') = regexp(regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', '')) THEN 0 ELSE (len(regexp(regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', ''))+1) END, len(regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$$', ''))) AS parentid, sublocation_j_bv_dynamodb_dfdev_master_sublocationids.locationtype AS locationtype, sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocation_name AS sublocationname, sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationmasterid AS sublocationmasterid FROM bv_dynamodb_dfdev_sites AS bv_dynamodb_dfdev_sites_1 LEFT OUTER JOIN iv_sublocation_j_bv_dynamodb_dfdev_master_sublocationids AS sublocation_j_bv_dynamodb_dfdev_master_sublocationids ON bv_dynamodb_dfdev_sites_1.siteid = sublocation_j_bv_dynamodb_dfdev_master_sublocationids.siteid ;

ALTER VIEW bv_dynamodb_dfdev_sites_j_sublocation
 LAYOUT (bv_dynamodb_dfdev_sites = [38, 17, 200, 200], iv_sublocation_j_bv_dynamodb_dfdev_master_sublocationids = [321, 30, 200, 200]);

CREATE OR REPLACE VIEW bv_master_assetid_ess_new_copy FOLDER = '/henry' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, p_bv_csv_ess_siteid_meterid_array.attributes AS attributes, p_bv_csv_ess_siteid_meterid_array.commref AS commref, 'ESS' AS sourcename, ds_dynamodb_dfe_dev_assetid.essid AS sourceid, test2_ess.reltiogoldenid AS reltiogoldenid FROM (bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid NESTED INNER JOIN p_bv_csv_ess_siteid_meterid_array AS p_bv_csv_ess_siteid_meterid_array ON ds_dynamodb_dfe_dev_assetid.essid = p_bv_csv_ess_siteid_meterid_array.id ) LEFT OUTER JOIN test2_ess AS test2_ess ON ds_dynamodb_dfe_dev_assetid.essid = test2_ess.assetid ;

ALTER VIEW bv_master_assetid_ess_new_copy
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [63, 40, 200, 200], p_bv_csv_ess_siteid_meterid_array = [377, 43, 200, 200], test2_ess = [374, 115, 200, 200]);

CREATE OR REPLACE VIEW f_bv_emcp_assetlist_emcp_token_j_master_sublocationids FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_emcp_assetlist_emcp_token.localsiteid AS localsiteid, f_bv_emcp_assetlist_emcp_token.parentid AS parentid, f_bv_emcp_assetlist_emcp_token.thing AS thing, f_bv_emcp_assetlist_emcp_token.label AS label, f_bv_emcp_assetlist_emcp_token.type AS type, f_bv_emcp_assetlist_emcp_token.pvalues AS pvalues, f_bv_emcp_assetlist_emcp_token.source AS source, bv_dynamodb_dfdev_master_sublocationids.id AS sublocationmasterid FROM f_bv_emcp_assetlist_emcp_token AS f_bv_emcp_assetlist_emcp_token LEFT OUTER JOIN bv_dynamodb_dfdev_master_sublocationids AS bv_dynamodb_dfdev_master_sublocationids ON f_bv_emcp_assetlist_emcp_token.id = bv_dynamodb_dfdev_master_sublocationids.emcpid  WHERE f_bv_emcp_assetlist_emcp_token.id <> f_bv_emcp_assetlist_emcp_token.localsiteid;

ALTER VIEW f_bv_emcp_assetlist_emcp_token_j_master_sublocationids
 LAYOUT (f_bv_emcp_assetlist_emcp_token = [20, 20, 200, 200], bv_dynamodb_dfdev_master_sublocationids = [316, 31, 200, 200]);

CREATE OR REPLACE VIEW f_bv_emcp_sitelist_token_formatted_j_master_siteid FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_emcp_sitelist_token_formatted.id AS id, f_bv_emcp_sitelist_token_formatted.name AS name, f_bv_emcp_sitelist_token_formatted.label AS label, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, 'EMCP' AS source FROM f_bv_emcp_sitelist_token_formatted AS f_bv_emcp_sitelist_token_formatted NESTED REVERSEORDER INNER JOIN bv_dynamodb_dfdev_master_siteid_archive AS bv_dynamodb_dfdev_master_siteid ON f_bv_emcp_sitelist_token_formatted.id = bv_dynamodb_dfdev_master_siteid.emcpid ;

ALTER VIEW f_bv_emcp_sitelist_token_formatted_j_master_siteid
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid_archive = [352, 16, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_assetlist_emcp_token FOLDER = '/3 - integration/api3/v 1.0' AS SELECT v.id AS id, v.localsiteid AS localsiteid, max(case WHEN ((v.property).name = 'commercial reference') THEN v.psval ELSE NULL END) AS reference, max(case WHEN ((v.property).name = 'serial number') THEN v.psval ELSE NULL END) AS serialnumber, max(case WHEN ((v.property).name = 'range') THEN v.psval ELSE NULL END) AS range, max(case WHEN ((v.property).name = 'description') THEN v.psval ELSE NULL END) AS productdescription, max(case WHEN ((v.property).name = 'image URL') THEN v.psval ELSE NULL END) AS imageurl, max(case WHEN ((v.property).name = 'brand') THEN v.psval ELSE NULL END) AS brand, (v.concept).description AS description, v.label AS label, v.source AS source, v.type AS type, v.parentid AS parentid, (v.concept).label AS locationtype FROM FLATTEN f_bv_emcp_assetlist_emcp_token AS v ( v.thing.pvalues) GROUP BY v.parentid, v.type, v.source, v.label, v.concept, v.localsiteid, v.id CONTEXT ('formatted' = 'yes');

ALTER VIEW f_f_bv_emcp_assetlist_emcp_token
 LAYOUT (f_bv_emcp_assetlist_emcp_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_assetlist_emcp_token_copy FOLDER = '/3 - integration/api2/archive' AS SELECT cast(v.id AS TEXT) AS sublocationid, v.localsiteid AS localsiteid, v.label AS sublocationname, v.type AS type, cast(v.parentid AS TEXT) AS parentid, (v.concept).label AS locationtype FROM FLATTEN f_bv_emcp_assetlist_emcp_token AS v ( v.thing.pvalues) WHERE v.id <> v.localsiteid GROUP BY v.parentid, v.type, v.source, v.label, v.concept, v.localsiteid, v.id;

ALTER VIEW f_f_bv_emcp_assetlist_emcp_token_copy
 LAYOUT (f_bv_emcp_assetlist_emcp_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_formatted FOLDER = '/3 - integration/api2/newdesign' AS SELECT id AS id, name AS name, label AS label, psval AS alm_siteid, 'EMCP' AS source FROM FLATTEN f_bv_emcp_sitelist_token_formatted AS v ( v.pvalues);

ALTER VIEW f_f_bv_emcp_sitelist_token_formatted
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_formatted_1 FOLDER = '/3 - integration/api1/archive' AS SELECT id AS id, name AS name, label AS label, psval AS alm_siteid, 'EMCP' AS source FROM FLATTEN f_bv_emcp_sitelist_token_formatted AS v ( v.pvalues);

ALTER VIEW f_f_bv_emcp_sitelist_token_formatted_1
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_formatted_1_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT id AS id, name AS name, label AS label, 'EMCP' AS source FROM FLATTEN f_bv_emcp_sitelist_token_formatted AS v ( v.pvalues);

ALTER VIEW f_f_bv_emcp_sitelist_token_formatted_1_v2
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_formatted_1_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT id AS emcpid, name AS name, label AS label, 'EMCP' AS source FROM FLATTEN f_bv_emcp_sitelist_token_formatted AS v ( v.pvalues);

ALTER VIEW f_f_bv_emcp_sitelist_token_formatted_1_v2_1
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_remove FOLDER = '/3 - integration/api1/archive' AS SELECT thing AS thing, id AS id, name AS name, label AS label, concept AS concept, urn AS urn, pival AS pival, pfval AS pfval, psval AS site_id, property AS property FROM FLATTEN f_bv_emcp_sitelist_token AS v ( v.pvalues);

ALTER VIEW f_f_bv_emcp_sitelist_token_remove
 LAYOUT (f_bv_emcp_sitelist_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_p_bv_emcp_assetlist_1 FOLDER = '/3 - integration/api3/v 1.0' AS SELECT v.id AS id, v.localsiteid AS localsiteid, max(case WHEN ((v.property).name = 'commercial reference') THEN v.psval ELSE NULL END) AS reference, max(case WHEN ((v.property).name = 'serial number') THEN v.psval ELSE NULL END) AS serialnumber, max(case WHEN ((v.property).name = 'range') THEN v.psval ELSE NULL END) AS range, max(case WHEN ((v.property).name = 'description') THEN v.psval ELSE NULL END) AS productdescription, max(case WHEN ((v.property).name = 'image URL') THEN v.psval ELSE NULL END) AS imageurl, max(case WHEN ((v.property).name = 'brand') THEN v.psval ELSE NULL END) AS brand, (v.concept).description AS description, v.label AS label, v.source AS source, v.type AS type, v.parentid AS parentid, (v.concept).label AS locationtype FROM FLATTEN f_p_bv_emcp_assetlist_1 AS v ( v.thing.pvalues) GROUP BY v.parentid, v.type, v.source, v.label, v.concept, v.localsiteid, v.id;

ALTER VIEW f_f_p_bv_emcp_assetlist_1
 LAYOUT (f_p_bv_emcp_assetlist_1 = [42, 18, 200, 200]);

CREATE OR REPLACE VIEW f_f_p_bv_emcp_timeseries_new FOLDER = '/2 - logical model' AS SELECT v.assetid AS assetid, v.starttime AS starttime, v.endtime AS endtime, v.name AS name, v.label AS label, register(v.symbol) AS unit, register(v.timestamp, v.value) AS value FROM FLATTEN f_p_bv_emcp_timeseries_new AS v ( v.value) GROUP BY v.assetid, v.starttime, v.endtime, v.name, v.label, v.symbol, v.timestamp, v.value;

ALTER VIEW f_f_p_bv_emcp_timeseries_new
 LAYOUT (f_p_bv_emcp_timeseries_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_iv_alm_asset_attribute_register FOLDER = '/3 - integration/api4/v 1.0' AS SELECT almassetidentifier AS almassetidentifier, commref AS commref, value AS value, key AS name FROM FLATTEN iv_alm_asset_attribute_register AS v ( v.attributes);

ALTER VIEW f_iv_alm_asset_attribute_register
 LAYOUT (iv_alm_asset_attribute_register = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.source AS source, v.address AS address, v.sitename AS sitename, v.siteid AS siteid, nest(v.accountid, v.accountvendorname, v.supplieraccountbegindate, v.supplieraccountenddate, v.accounttype) AS accounts, v.serviceoutput_metric AS serviceoutput_metric, v.serviceoutput_costusage AS serviceoutput_costusage, v.usagetomonth AS usagetomonth, v.usagefrommonth AS usagefrommonth, v.metricenddate AS metricenddate, v.metricbegindate AS metricbegindate FROM FLATTEN iv_ess_site_list_j_accountist_j_metricdata_j_costusage AS v ( v.serviceoutput) GROUP BY v.usagetomonth, v.usagefrommonth, v.metricenddate, v.metricbegindate, v.serviceoutput_costusage, v.serviceoutput_metric, v.source, v.address, v.sitename, v.siteid;

ALTER VIEW f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage
 LAYOUT (iv_ess_site_list_j_accountist_j_metricdata_j_costusage = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_data_j_sublocation FOLDER = '/3 - integration/api2/newdesign' AS SELECT substring(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, case WHEN (regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$', '') = regexp(regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', '')) THEN 0 ELSE (len(regexp(regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', ''))+1) END, len(regexp(sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationpath, '/(?:.(?!/))+$$', ''))) AS parentid, sublocation_j_bv_dynamodb_dfdev_master_sublocationids.locationtype AS locationtype, sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocation_name AS sublocationname, sublocation_j_bv_dynamodb_dfdev_master_sublocationids.sublocationmasterid AS sublocationmasterid, alm_sites.createdby AS createdby, alm_sites.siteid AS siteid, alm_sites.name AS name, alm_sites.description AS description FROM iv_alm_sites AS alm_sites LEFT OUTER JOIN iv_sublocation_j_bv_dynamodb_dfdev_master_sublocationids AS sublocation_j_bv_dynamodb_dfdev_master_sublocationids ON alm_sites.siteid = sublocation_j_bv_dynamodb_dfdev_master_sublocationids.siteid ;

ALTER VIEW iv_alm_data_j_sublocation
 LAYOUT (iv_sublocation_j_bv_dynamodb_dfdev_master_sublocationids = [321, 30, 200, 200], iv_alm_sites = [1, 23, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_dynamodb_asset_masterid FOLDER = '/3 - integration/api3/archive' AS SELECT bv_alm_site_asset.almassetidentifier AS id, bv_alm_site_asset.reltiogoldenid AS reltiogoldenid, bv_alm_site_asset.siteid AS siteid, ds_dynamodb_dfe_dev_assetid.id AS assetmasterid, 'ALM' AS source, bv_alm_site_asset.assetname AS name, bv_alm_site_asset.commref AS reference, bv_alm_site_asset.brand AS brand, bv_alm_site_asset.range AS range, bv_alm_site_asset.serialnumber AS serialnumber, bv_alm_site_asset.description AS assetdescription FROM bv_alm_site_asset AS bv_alm_site_asset NESTED PARALLEL ORDERED LEFT OUTER JOIN 100 bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid ON bv_alm_site_asset.almid = ds_dynamodb_dfe_dev_assetid.almid ;

ALTER VIEW iv_alm_dynamodb_asset_masterid
 LAYOUT (bv_alm_site_asset = [94, 49, 200, 200], bv_dynamodb_dfe_dev_assetid = [490, 43, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_site_list FOLDER = '/3 - integration/api1/archive' AS SELECT id AS id, name AS name, label AS label, psval AS alm_siteid, 'EMCP' AS source FROM FLATTEN f_bv_emcp_sitelist_token_formatted AS v ( v.pvalues);

ALTER VIEW iv_emcp_site_list
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_sitelist_j_p_bv_emcp_usage_energy FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_emcp_sitelist_token_formatted.id AS id, f_bv_emcp_sitelist_token_formatted.name AS name, (p_bv_emcp_usage_energy.binnedusagetrenddata).items AS items, p_bv_emcp_usage_energy.starttime AS starttime, p_bv_emcp_usage_energy.endtime AS endtime FROM f_bv_emcp_sitelist_token_formatted AS f_bv_emcp_sitelist_token_formatted LEFT OUTER JOIN p_bv_emcp_usage_energy AS p_bv_emcp_usage_energy ON f_bv_emcp_sitelist_token_formatted.id = p_bv_emcp_usage_energy.localsiteid ;

ALTER VIEW iv_emcp_sitelist_j_p_bv_emcp_usage_energy
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200], p_bv_emcp_usage_energy = [309, 37, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_sitelist_j_p_bv_emcp_usage_power FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_emcp_sitelist_token_formatted.id AS id, f_bv_emcp_sitelist_token_formatted.name AS name, (p_bv_emcp_usage_power.binnedusagetrenddata).items AS items, p_bv_emcp_usage_power.starttime AS starttime, p_bv_emcp_usage_power.endtime AS endtime FROM f_bv_emcp_sitelist_token_formatted AS f_bv_emcp_sitelist_token_formatted LEFT OUTER JOIN p_bv_emcp_usage_power AS p_bv_emcp_usage_power ON f_bv_emcp_sitelist_token_formatted.id = p_bv_emcp_usage_power.localsiteid ;

ALTER VIEW iv_emcp_sitelist_j_p_bv_emcp_usage_power
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200], p_bv_emcp_usage_power = [355, 28, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_apis_usage_power_u_usage_gas FOLDER = '/3 - integration/api2/newdesign' AS SELECT DISTINCT enddate, startdate, siteclienthierid, nest(usagename, timeseriesdata) AS usage FROM (SELECT enddate, usagename, timeseriesdata, startdate, siteclienthierid FROM f_p_bv_ess_apis_usage_power EXTENDED UNION ALL SELECT siteclienthierid, startdate, enddate, timeseriesdata, usagename FROM f_p_bv_ess_apis_usage_gas) GROUP BY enddate, startdate, siteclienthierid;

ALTER VIEW iv_ess_apis_usage_power_u_usage_gas
 LAYOUT (f_p_bv_ess_apis_usage_power = [20, 20, 200, 200], f_p_bv_ess_apis_usage_gas = [383, 18, 200, 200]);

CREATE OR REPLACE VIEW iv_master_assetid_ess FOLDER = '/3 - integration/api4/v 1.0' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, p_bv_csv_ess_siteid_meterid_array.attributes AS attributes, p_bv_csv_ess_siteid_meterid_array.commref AS commref FROM bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid NESTED INNER JOIN p_bv_csv_ess_siteid_meterid_array AS p_bv_csv_ess_siteid_meterid_array ON ds_dynamodb_dfe_dev_assetid.essid = p_bv_csv_ess_siteid_meterid_array.id ;

ALTER VIEW iv_master_assetid_ess
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [63, 40, 200, 200], p_bv_csv_ess_siteid_meterid_array = [377, 43, 200, 200]);

CREATE OR REPLACE VIEW iv_master_customer_reltio_details FOLDER = '/2 - logical model' AS SELECT p_f_bv_reltio_sitedetails.name AS name, p_f_bv_reltio_sitedetails.address AS address, p_f_bv_reltio_sitedetails.businesstype AS businesstype, p_f_bv_reltio_sitedetails.phone AS phone, p_f_bv_reltio_sitedetails.website AS website, p_f_bv_reltio_sitedetails.seprimarycontact AS seprimarycontact, p_f_bv_reltio_sitedetails.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails.marketsubsegment AS marketsubsegment, p_f_bv_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, p_f_bv_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2, iv_userid_to_customerid_mapping.reltiogoldenid AS reltiogoldenid, iv_userid_to_customerid_mapping.customerid AS customerid, iv_userid_to_customerid_mapping.userid AS userid FROM iv_userid_to_customerid_mapping AS iv_userid_to_customerid_mapping NESTED PARALLEL LEFT OUTER JOIN 25 p_f_bv_reltio_sitedetails AS p_f_bv_reltio_sitedetails ON iv_userid_to_customerid_mapping.reltiogoldenid = p_f_bv_reltio_sitedetails.id ;

ALTER VIEW iv_master_customer_reltio_details
 LAYOUT (iv_userid_to_customerid_mapping = [48, 13, 200, 200], p_f_bv_reltio_sitedetails = [402, 10, 200, 200]);

CREATE OR REPLACE VIEW iv_master_sites_j_reltio_sitedetails FOLDER = '/2 - logical model' AS SELECT iv_userid_to_customerid_siteid_mapping.userid AS userid, iv_userid_to_customerid_siteid_mapping.customerid AS customerid, iv_userid_to_customerid_siteid_mapping.siteid AS siteid, p_f_bv_reltio_sitedetails.name AS name, p_f_bv_reltio_sitedetails.address AS address, p_f_bv_reltio_sitedetails.businesstype AS businesstype, p_f_bv_reltio_sitedetails.phone AS phone, p_f_bv_reltio_sitedetails.website AS website, p_f_bv_reltio_sitedetails.seprimarycontact AS seprimarycontact, p_f_bv_reltio_sitedetails.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails.marketsubsegment AS marketsubsegment, p_f_bv_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, p_f_bv_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2 FROM iv_userid_to_customerid_siteid_mapping AS iv_userid_to_customerid_siteid_mapping NESTED PARALLEL LEFT OUTER JOIN 20 p_f_bv_reltio_sitedetails AS p_f_bv_reltio_sitedetails ON iv_userid_to_customerid_siteid_mapping.reltiogoldenid = p_f_bv_reltio_sitedetails.id ;

ALTER VIEW iv_master_sites_j_reltio_sitedetails
 LAYOUT (iv_userid_to_customerid_siteid_mapping = [20, 20, 200, 200], p_f_bv_reltio_sitedetails = [354, 17, 200, 200]);

CREATE OR REPLACE VIEW p_bv_csv_ess_siteid_meterid_master_siteid FOLDER = '/3 - integration/api3/v 1.0' AS SELECT bv_csv_ess_siteid_meterid_master_siteid.commodity AS description, bv_csv_ess_siteid_meterid_master_siteid.meter AS name, bv_csv_ess_siteid_meterid_master_siteid.meterid AS serialnumber, bv_csv_ess_siteid_meterid_master_siteid.meterid AS id, siteaddress AS siteaddress, bv_csv_ess_siteid_meterid_master_siteid.siteid AS siteid, source AS source, NULL AS brand, NULL AS range, NULL AS reference, bv_csv_ess_siteid_meterid_master_siteid.reltiogoldenid AS reltiogoldenid FROM bv_csv_ess_siteid_meterid_master_siteid;

ALTER VIEW p_bv_csv_ess_siteid_meterid_master_siteid
 LAYOUT (bv_csv_ess_siteid_meterid_master_siteid = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_csv_ess_siteid_meterid_array_3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT meterid AS meterid, siteid AS siteid, NULL AS commref, nest(name, value) AS attributes FROM f_bv_csv_ess_siteid_meterid_array_3 GROUP BY meterid, siteid;

ALTER VIEW p_f_bv_csv_ess_siteid_meterid_array_3
 LAYOUT (f_bv_csv_ess_siteid_meterid_array_3 = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_dynamodb_almsit_info_attribute_indexed_register FOLDER = '/3 - integration/api4/v 2.0' AS SELECT commref AS commref, almassetidentifier AS almassetidentifier, nest(name, value) AS attributes, description AS description, assetname AS assetname FROM f_bv_dynamodb_almsit_info_attribute_indexed_register GROUP BY description, assetname, commref, almassetidentifier;

ALTER VIEW p_f_bv_dynamodb_almsit_info_attribute_indexed_register
 LAYOUT (f_bv_dynamodb_almsit_info_attribute_indexed_register = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_emcp_asset_details FOLDER = '/3 - integration/api4/v 1.0' AS SELECT assetid AS id, nest(name, value) AS attributes FROM f_p_bv_emcp_asset_details GROUP BY assetid;

ALTER VIEW p_f_bv_emcp_asset_details
 LAYOUT (f_p_bv_emcp_asset_details = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_emcp_asset_j_emcp_token_siteid FOLDER = '/3 - integration/api4/v 2.0' AS SELECT f_p_bv_emcp_asset_details.assetid AS assetid, f_p_bv_emcp_asset_details.value AS siteid FROM f_p_bv_emcp_asset_details WHERE name = 'site';

ALTER VIEW p_f_bv_emcp_asset_j_emcp_token_siteid
 LAYOUT (f_p_bv_emcp_asset_details = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_site_details FOLDER = '/3 - integration/api1/archive' AS SELECT f_bv_reltio_sitedetails_apigee_token.id AS id, f_bv_reltio_sitedetails_apigee_token.createdby AS createdby, f_bv_reltio_sitedetails_apigee_token.name AS name, (f_bv_reltio_sitedetails_apigee_token.customerclassificationlevel1).value AS customerclassificationlevel1, (f_bv_reltio_sitedetails_apigee_token.marketsegment).value AS marketsegment, sitegoldenid AS sitegoldenid, f_bv_reltio_sitedetails_apigee_token.address AS address FROM f_bv_reltio_sitedetails_apigee_token;

ALTER VIEW p_f_bv_reltio_site_details
 LAYOUT (f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_sitedetails_apigee_token FOLDER = '/3 - integration/api2/archive' AS SELECT f_bv_reltio_sitedetails_apigee_token.id AS id, f_bv_reltio_sitedetails_apigee_token.createdby AS createdby, f_bv_reltio_sitedetails_apigee_token.name AS name, (f_bv_reltio_sitedetails_apigee_token.customerclassificationlevel1).value AS customerclassfiicationlevel1, (f_bv_reltio_sitedetails_apigee_token.marketsegment).value AS marketsegment, sitegoldenid AS sitegoldenid, f_bv_reltio_sitedetails_apigee_token.address AS address FROM f_bv_reltio_sitedetails_apigee_token;

ALTER VIEW p_f_bv_reltio_sitedetails_apigee_token
 LAYOUT (f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_p_bv_emcp_asset_details FOLDER = '/3 - integration/api4/v 1.0' AS SELECT f_p_bv_emcp_asset_details.assetid AS assetid, f_p_bv_emcp_asset_details.value AS commref FROM f_p_bv_emcp_asset_details WHERE name = 'commercial reference';

ALTER VIEW p_f_p_bv_emcp_asset_details
 LAYOUT (f_p_bv_emcp_asset_details = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_iv_emcp_asset_site_details FOLDER = '/3 - integration/api4/v 2.0' AS SELECT 
id,REGISTER(id,name, businesstype, phone, website, seprimarycontact, marketsegment, marketsubsegment,customerclassificationlevel1, customerclassificationlevel2,address) AS registration
FROM p_f_bv_reltio_sitedetails CONTEXT ('formatted' = 'yes');

CREATE OR REPLACE VIEW p_iv_user_customer_j_sites_j__master_siteid_j_master_customerid_j_p_f_bv_reltio_sitedetails FOLDER = '/2 - logical model' AS SELECT userid AS userid, customerid AS customerid, customerreltiogoldenid AS customerreltiogoldenid FROM iv_user_customer_j_sites_j__master_siteid_j_master_customerid_j_p_f_bv_reltio_sitedetails GROUP BY userid, customerid, customerreltiogoldenid;

ALTER VIEW p_iv_user_customer_j_sites_j__master_siteid_j_master_customerid_j_p_f_bv_reltio_sitedetails
 LAYOUT (iv_user_customer_j_sites_j__master_siteid_j_master_customerid_j_p_f_bv_reltio_sitedetails = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_bv_almsit_info_product_data_all_j_alm_app_token FOLDER = '/3 - integration/api4/v 1.0' AS SELECT p_p_bv_almsit_info_product_data_all.commref AS commref, p_p_bv_almsit_info_product_data_all.productdetails AS productdetails FROM p_p_bv_almsit_info_product_data_all AS p_p_bv_almsit_info_product_data_all INNER JOIN bv_alm_app_token AS alm_app_token ON p_p_bv_almsit_info_product_data_all.access_token = alm_app_token.access_token ;

ALTER VIEW p_p_bv_almsit_info_product_data_all_j_alm_app_token
 LAYOUT (bv_alm_app_token = [381, 36, 200, 200], p_p_bv_almsit_info_product_data_all = [57, 41, 200, 200]);

CREATE OR REPLACE VIEW p_p_p_bv_almsit_api_info_attribute_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT almassetidentifier AS almassetidentifier, id AS id, name AS name, nest(street, city, state, country, postalcode, latitude, longitude) AS address, creationdate AS creationdate, createdby AS createdby, lastmodifieddate AS lastmodifieddate, lastmodifiedby AS lastmodifiedby FROM p_p_bv_almsit_api_info_attribute_all GROUP BY name, id, lastmodifieddate, lastmodifiedby, creationdate, createdby, almassetidentifier;

ALTER VIEW p_p_p_bv_almsit_api_info_attribute_all
 LAYOUT (p_p_bv_almsit_api_info_attribute_all = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_p_bv_almsit_api_product_data_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT commref AS commref, nest(productattributes, productimage, productdocuments, productcharacteristics) AS productdetails FROM p_p_bv_almsit_api_product_data_all GROUP BY commref;

ALTER VIEW p_p_p_bv_almsit_api_product_data_all
 LAYOUT (p_p_bv_almsit_api_product_data_all = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW archive_iv_emcp_alm_site_list FOLDER = '/3 - integration/api1/archive' AS SELECT f_f_bv_emcp_sitelist_token_formatted_1.id AS id, f_f_bv_emcp_sitelist_token_formatted_1.name AS name, iv_dynamodb_sites_alm_formatted.createdby AS createdby, f_f_bv_emcp_sitelist_token_formatted_1.label AS label, iv_dynamodb_sites_alm_formatted.description AS description, iv_dynamodb_sites_alm_formatted.sublocationid AS sublocationid, 'EMCP' AS source FROM f_f_bv_emcp_sitelist_token_formatted_1 AS f_f_bv_emcp_sitelist_token_formatted_1 INNER JOIN iv_dynamodb_sites_alm_formatted AS iv_dynamodb_sites_alm_formatted ON f_f_bv_emcp_sitelist_token_formatted_1.alm_siteid = iv_dynamodb_sites_alm_formatted.siteid ;

ALTER VIEW archive_iv_emcp_alm_site_list
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted_1 = [49, 29, 200, 200], iv_dynamodb_sites_alm_formatted = [426, 31, 200, 200]);

CREATE OR REPLACE VIEW bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1 FOLDER = '/3 - integration/api3/v 1.0' AS SELECT f_f_p_bv_emcp_assetlist_1.id AS id, f_f_p_bv_emcp_assetlist_1.label AS label, f_f_p_bv_emcp_assetlist_1.type AS type, f_f_p_bv_emcp_assetlist_1.localsiteid AS localsiteid, f_f_p_bv_emcp_assetlist_1.source AS source, f_f_p_bv_emcp_assetlist_1.label AS name, f_f_p_bv_emcp_assetlist_1.reference AS reference, f_f_p_bv_emcp_assetlist_1.brand AS brand, f_f_p_bv_emcp_assetlist_1.range AS range, f_f_p_bv_emcp_assetlist_1.productdescription AS productdescription, f_f_p_bv_emcp_assetlist_1.imageurl AS imageurl, f_f_p_bv_emcp_assetlist_1.serialnumber AS serialnumber, f_f_p_bv_emcp_assetlist_1.parentid AS parentid, f_f_p_bv_emcp_assetlist_1.description AS assetdescription, bv_dynamodb_dfdev_master_siteid_3.reltiogoldenid AS reltiogoldenid FROM bv_dynamodb_dfdev_master_siteid_3 AS bv_dynamodb_dfdev_master_siteid_3 INNER JOIN f_f_p_bv_emcp_assetlist_1 AS f_f_p_bv_emcp_assetlist_1 ON bv_dynamodb_dfdev_master_siteid_3.emcpid = f_f_p_bv_emcp_assetlist_1.localsiteid  WHERE f_f_p_bv_emcp_assetlist_1.type = 'PRODUCT';

ALTER VIEW bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3 = [93, 3, 200, 200], f_f_p_bv_emcp_assetlist_1 = [384, 2, 200, 200]);

CREATE OR REPLACE VIEW bv_emcp_asset_info_commref_siteid FOLDER = '/3 - integration/api4/v 2.0' AS SELECT p_f_bv_emcp_asset_j_emcp_token.id AS id, p_f_bv_emcp_asset_j_emcp_token.attributes AS attributes, p_f_bv_emcp_asset_j_emcp_token_commref.commref AS commref, p_f_bv_emcp_asset_j_emcp_token_siteid.siteid AS siteid FROM (p_f_bv_emcp_asset_details AS p_f_bv_emcp_asset_j_emcp_token INNER JOIN p_f_p_bv_emcp_asset_details AS p_f_bv_emcp_asset_j_emcp_token_commref ON p_f_bv_emcp_asset_j_emcp_token.id = p_f_bv_emcp_asset_j_emcp_token_commref.assetid ) INNER JOIN p_f_bv_emcp_asset_j_emcp_token_siteid AS p_f_bv_emcp_asset_j_emcp_token_siteid ON p_f_bv_emcp_asset_j_emcp_token_commref.assetid = p_f_bv_emcp_asset_j_emcp_token_siteid.assetid ;

ALTER VIEW bv_emcp_asset_info_commref_siteid
 LAYOUT (p_f_bv_emcp_asset_details = [20, 20, 200, 200], p_f_p_bv_emcp_asset_details = [345, 22, 200, 200], p_f_bv_emcp_asset_j_emcp_token_siteid = [346, 109, 200, 200]);

CREATE OR REPLACE VIEW bv_master_assetid_alm_new_copy FOLDER = '/henry' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.commref AS commref, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.attributes AS attributes, 'ALM' AS sourcename, ds_dynamodb_dfe_dev_assetid.almid AS sourceid, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.description AS description, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.assetname AS assetname, test1_alm.reltiogoldenid AS reltiogoldenid FROM (bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid NESTED LEFT OUTER JOIN p_f_bv_dynamodb_almsit_info_attribute_indexed_register AS p_f_bv_dynamodb_almsit_info_attribute_indexed_register ON ds_dynamodb_dfe_dev_assetid.almid = p_f_bv_dynamodb_almsit_info_attribute_indexed_register.almassetidentifier ) NESTED LEFT OUTER JOIN test1_alm AS test1_alm ON ds_dynamodb_dfe_dev_assetid.almid = test1_alm.assetid ;

ALTER VIEW bv_master_assetid_alm_new_copy
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [55, 39, 200, 200], p_f_bv_dynamodb_almsit_info_attribute_indexed_register = [424, 35, 200, 200], test1_alm = [433, 134, 200, 200]);

CREATE OR REPLACE VIEW bv_master_assetid_alm_new_v3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.commref AS commref, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.attributes AS attributes, 'ALM' AS sourcename, ds_dynamodb_dfe_dev_assetid.almid AS sourceid, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.description AS description, p_f_bv_dynamodb_almsit_info_attribute_indexed_register.assetname AS assetname, bv_dynamodb_almsit_registration_new.siteid AS siteid FROM (bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid NESTED LEFT OUTER JOIN p_f_bv_dynamodb_almsit_info_attribute_indexed_register AS p_f_bv_dynamodb_almsit_info_attribute_indexed_register ON ds_dynamodb_dfe_dev_assetid.almid = p_f_bv_dynamodb_almsit_info_attribute_indexed_register.almassetidentifier ) NESTED LEFT OUTER JOIN bv_dynamodb_almsit_registration_new AS bv_dynamodb_almsit_registration_new ON ds_dynamodb_dfe_dev_assetid.almid = bv_dynamodb_almsit_registration_new.almassetidentifier ;

ALTER VIEW bv_master_assetid_alm_new_v3
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [30, 35, 200, 200], p_f_bv_dynamodb_almsit_info_attribute_indexed_register = [309, 35, 200, 200], bv_dynamodb_almsit_registration_new = [565, 34, 200, 200]);

CREATE OR REPLACE VIEW bv_master_assetid_ess_new_v3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, 'ESS' AS sourcename, ds_dynamodb_dfe_dev_assetid.essid AS sourceid, p_f_bv_csv_ess_siteid_meterid_array_3.siteid AS siteid, p_f_bv_csv_ess_siteid_meterid_array_3.commref AS commref, p_f_bv_csv_ess_siteid_meterid_array_3.attributes AS attributes FROM bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid NESTED INNER JOIN p_f_bv_csv_ess_siteid_meterid_array_3 AS p_f_bv_csv_ess_siteid_meterid_array_3 ON ds_dynamodb_dfe_dev_assetid.essid = p_f_bv_csv_ess_siteid_meterid_array_3.meterid ;

ALTER VIEW bv_master_assetid_ess_new_v3
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [63, 40, 200, 200], p_f_bv_csv_ess_siteid_meterid_array_3 = [357, 41, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_assetlist_emcp_token_j_bv_dynamodb_dfdev_master_siteid_3 FOLDER = '/3 - integration/api3/v 1.0' AS SELECT f_f_bv_emcp_assetlist_emcp_token.id AS id, f_f_bv_emcp_assetlist_emcp_token.label AS label, f_f_bv_emcp_assetlist_emcp_token.type AS type, f_f_bv_emcp_assetlist_emcp_token.localsiteid AS localsiteid, f_f_bv_emcp_assetlist_emcp_token.source AS source, f_f_bv_emcp_assetlist_emcp_token.label AS name, f_f_bv_emcp_assetlist_emcp_token.reference AS reference, f_f_bv_emcp_assetlist_emcp_token.brand AS brand, f_f_bv_emcp_assetlist_emcp_token.range AS range, f_f_bv_emcp_assetlist_emcp_token.productdescription AS productdescription, f_f_bv_emcp_assetlist_emcp_token.imageurl AS imageurl, f_f_bv_emcp_assetlist_emcp_token.serialnumber AS serialnumber, f_f_bv_emcp_assetlist_emcp_token.parentid AS parentid, f_f_bv_emcp_assetlist_emcp_token.description AS assetdescription, bv_dynamodb_dfdev_master_siteid_3.reltiogoldenid AS reltiogoldenid FROM bv_dynamodb_dfdev_master_siteid_3 AS bv_dynamodb_dfdev_master_siteid_3 ORDERED INNER JOIN f_f_bv_emcp_assetlist_emcp_token AS f_f_bv_emcp_assetlist_emcp_token ON bv_dynamodb_dfdev_master_siteid_3.emcpid = f_f_bv_emcp_assetlist_emcp_token.localsiteid  WHERE f_f_bv_emcp_assetlist_emcp_token.type = 'PRODUCT';

ALTER VIEW f_f_bv_emcp_assetlist_emcp_token_j_bv_dynamodb_dfdev_master_siteid_3
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3 = [93, 3, 200, 200], f_f_bv_emcp_assetlist_emcp_token = [374, 4, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.sublocationmasterid AS sublocationmasterid, v.source AS source, v.type AS type, v.label AS sublocationname, cast(v.parentid AS TEXT) AS parentid, v.localsiteid AS localsiteid, (v.concept).name AS locationtype FROM FLATTEN f_bv_emcp_assetlist_emcp_token_j_master_sublocationids AS v ( v.thing.pvalues) GROUP BY v.concept, v.sublocationmasterid, v.source, v.type, v.label, v.parentid, v.localsiteid;

ALTER VIEW f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids
 LAYOUT (f_bv_emcp_assetlist_emcp_token_j_master_sublocationids = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_assetlist_emcp_token_sublocationids FOLDER = '/3 - integration/api3/v 1.0' AS SELECT f_f_p_bv_emcp_assetlist_1.localsiteid AS localsiteid, f_f_p_bv_emcp_assetlist_1.reference AS reference, f_f_p_bv_emcp_assetlist_1.serialnumber AS serialnumber, f_f_p_bv_emcp_assetlist_1.range AS range, f_f_p_bv_emcp_assetlist_1.productdescription AS productdescription, f_f_p_bv_emcp_assetlist_1.imageurl AS imageurl, f_f_p_bv_emcp_assetlist_1.brand AS brand, f_f_p_bv_emcp_assetlist_1.description AS description, f_f_p_bv_emcp_assetlist_1.label AS label, f_f_p_bv_emcp_assetlist_1.source AS source, f_f_p_bv_emcp_assetlist_1.type AS type, f_f_p_bv_emcp_assetlist_1.parentid AS parentid, f_f_p_bv_emcp_assetlist_1.locationtype AS locationtype, bv_dynamodb_dfdev_master_sublocationids.id AS id FROM f_f_p_bv_emcp_assetlist_1 AS f_f_p_bv_emcp_assetlist_1 LEFT OUTER JOIN bv_dynamodb_dfdev_master_sublocationids AS bv_dynamodb_dfdev_master_sublocationids ON f_f_p_bv_emcp_assetlist_1.id = bv_dynamodb_dfdev_master_sublocationids.emcpid ;

ALTER VIEW f_f_bv_emcp_assetlist_emcp_token_sublocationids
 LAYOUT (bv_dynamodb_dfdev_master_sublocationids = [353, 34, 200, 200], f_f_p_bv_emcp_assetlist_1 = [39, 34, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_assetlist_emcp_token_sublocationids_copy FOLDER = '/3 - integration/api3/v 1.0' AS SELECT f_f_bv_emcp_assetlist_emcp_token.localsiteid AS localsiteid, f_f_bv_emcp_assetlist_emcp_token.reference AS reference, f_f_bv_emcp_assetlist_emcp_token.serialnumber AS serialnumber, f_f_bv_emcp_assetlist_emcp_token.range AS range, f_f_bv_emcp_assetlist_emcp_token.productdescription AS productdescription, f_f_bv_emcp_assetlist_emcp_token.imageurl AS imageurl, f_f_bv_emcp_assetlist_emcp_token.brand AS brand, f_f_bv_emcp_assetlist_emcp_token.description AS description, f_f_bv_emcp_assetlist_emcp_token.label AS label, f_f_bv_emcp_assetlist_emcp_token.source AS source, f_f_bv_emcp_assetlist_emcp_token.type AS type, f_f_bv_emcp_assetlist_emcp_token.parentid AS parentid, f_f_bv_emcp_assetlist_emcp_token.locationtype AS locationtype, bv_dynamodb_dfdev_master_sublocationids.id AS id FROM f_f_bv_emcp_assetlist_emcp_token AS f_f_bv_emcp_assetlist_emcp_token LEFT OUTER JOIN bv_dynamodb_dfdev_master_sublocationids AS bv_dynamodb_dfdev_master_sublocationids ON f_f_bv_emcp_assetlist_emcp_token.id = bv_dynamodb_dfdev_master_sublocationids.emcpid ;

ALTER VIEW f_f_bv_emcp_assetlist_emcp_token_sublocationids_copy
 LAYOUT (f_f_bv_emcp_assetlist_emcp_token = [20, 20, 200, 200], bv_dynamodb_dfdev_master_sublocationids = [371, 28, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_alm FOLDER = '/3 - integration/api1/archive' AS SELECT f_f_bv_emcp_sitelist_j_emcp_token.thing AS thing, f_f_bv_emcp_sitelist_j_emcp_token.id AS id, f_f_bv_emcp_sitelist_j_emcp_token.name AS emcp_name, f_f_bv_emcp_sitelist_j_emcp_token.label AS label, f_f_bv_emcp_sitelist_j_emcp_token.concept AS concept, f_f_bv_emcp_sitelist_j_emcp_token.urn AS urn, f_f_bv_emcp_sitelist_j_emcp_token.pival AS pival, f_f_bv_emcp_sitelist_j_emcp_token.pfval AS pfval, f_f_bv_emcp_sitelist_j_emcp_token.site_id AS site_id, f_f_bv_emcp_sitelist_j_emcp_token.property AS property, bv_dynamodb_dfdev_sites_1.createdby AS createdby, bv_dynamodb_dfdev_sites_1.sublocationid AS sublocationid, bv_dynamodb_dfdev_sites_1.siteid AS siteid, bv_dynamodb_dfdev_sites_1.version AS version, bv_dynamodb_dfdev_sites_1.sublocationpath AS sublocationpath, bv_dynamodb_dfdev_sites_1.publishercode AS publishercode, bv_dynamodb_dfdev_sites_1.reltiocertified AS reltiocertified, bv_dynamodb_dfdev_sites_1.status AS status, bv_dynamodb_dfdev_sites_1.name AS alm_name, bv_dynamodb_dfdev_sites_1.lang AS lang, bv_dynamodb_dfdev_sites_1.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_sites_1.blockbfo AS blockbfo, bv_dynamodb_dfdev_sites_1.description AS description, bv_dynamodb_dfdev_sites_1.reltioentityid AS reltioentityid, bv_dynamodb_dfdev_sites_1.type AS type FROM f_f_bv_emcp_sitelist_token_remove AS f_f_bv_emcp_sitelist_j_emcp_token INNER JOIN bv_dynamodb_dfdev_sites AS bv_dynamodb_dfdev_sites_1 ON f_f_bv_emcp_sitelist_j_emcp_token.site_id = bv_dynamodb_dfdev_sites_1.siteid ;

ALTER VIEW f_f_bv_emcp_sitelist_token_alm
 LAYOUT (f_f_bv_emcp_sitelist_token_remove = [20, 20, 200, 200], bv_dynamodb_dfdev_sites = [419, 115, 200, 200]);

CREATE OR REPLACE VIEW f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.source AS source, v.address AS address, v.sitename AS sitename, v.siteid AS siteid, v.accounts AS accounts, nest(v.attributename, v.attributevalue, v.startdt, v.enddt, v.attributetype) AS metrics, v.serviceoutput_costusage AS serviceoutput_costusage, v.usagetomonth AS usagetomonth, v.usagefrommonth AS usagefrommonth, v.metricenddate AS metricenddate, v.metricbegindate AS metricbegindate FROM FLATTEN f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage AS v ( v.serviceoutput_metric) GROUP BY v.siteid, v.sitename, v.address, v.source, v.accounts, v.serviceoutput_costusage, v.usagetomonth, v.usagefrommonth, v.metricenddate, v.metricbegindate;

ALTER VIEW f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage
 LAYOUT (f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_f_p_bv_emcp_assetlist_1_j_bv_dynamodb_dfdev_master_siteid FOLDER = '/tugce' AS SELECT f_f_p_bv_emcp_assetlist_1.id AS id, f_f_p_bv_emcp_assetlist_1.localsiteid AS localsiteid, f_f_p_bv_emcp_assetlist_1.reference AS reference, f_f_p_bv_emcp_assetlist_1.serialnumber AS serialnumber, f_f_p_bv_emcp_assetlist_1.range AS range, f_f_p_bv_emcp_assetlist_1.productdescription AS productdescription, f_f_p_bv_emcp_assetlist_1.imageurl AS imageurl, f_f_p_bv_emcp_assetlist_1.brand AS brand, f_f_p_bv_emcp_assetlist_1.description AS description, f_f_p_bv_emcp_assetlist_1.label AS label, f_f_p_bv_emcp_assetlist_1.source AS source, f_f_p_bv_emcp_assetlist_1.type AS type, f_f_p_bv_emcp_assetlist_1.parentid AS parentid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid FROM f_f_p_bv_emcp_assetlist_1 AS f_f_p_bv_emcp_assetlist_1 INNER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON bv_dynamodb_dfdev_master_siteid.emcpid = f_f_p_bv_emcp_assetlist_1.localsiteid  WHERE f_f_p_bv_emcp_assetlist_1.type = 'PRODUCT';

ALTER VIEW f_f_p_bv_emcp_assetlist_1_j_bv_dynamodb_dfdev_master_siteid
 LAYOUT (f_f_p_bv_emcp_assetlist_1 = [21, 20, 200, 200], bv_dynamodb_dfdev_master_siteid = [376, 23, 200, 200]);

CREATE OR REPLACE VIEW f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy FOLDER = '/3 - integration/api2/newdesign' AS SELECT id AS id, name AS name, (businessquantity).name AS usagename, value AS usage, keytime AS month, 'NA' AS cost, starttime AS starttime, endtime AS endtime FROM FLATTEN iv_emcp_sitelist_j_p_bv_emcp_usage_energy AS v ( v.items.timeseriesvalues) WHERE v.usageid = '276';

ALTER VIEW f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy
 LAYOUT (iv_emcp_sitelist_j_p_bv_emcp_usage_energy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW f_iv_emcp_sitelist_j_p_bv_emcp_usage_power FOLDER = '/3 - integration/api2/newdesign' AS SELECT id AS id, name AS name, (businessquantity).name AS usagename, keytime AS month, value AS usage, 'NA' AS cost, starttime AS starttime, endtime AS endtime FROM FLATTEN iv_emcp_sitelist_j_p_bv_emcp_usage_power AS v ( v.items.timeseriesvalues) WHERE v.usageid = '276';

ALTER VIEW f_iv_emcp_sitelist_j_p_bv_emcp_usage_power
 LAYOUT (iv_emcp_sitelist_j_p_bv_emcp_usage_power = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_emcp_ess_asset_to_site FOLDER = '/3 - integration/api4/v 2.0' AS SELECT assetid, siteid FROM (SELECT siteid, almassetidentifier AS assetid FROM bv_dynamodb_almsit_registration_new EXTENDED UNION ALL SELECT assetid, siteid FROM p_f_bv_emcp_asset_j_emcp_token_siteid EXTENDED UNION ALL SELECT siteid, meterid AS assetid FROM bv_csv_ess_siteid_meterid_1);

ALTER VIEW iv_alm_emcp_ess_asset_to_site
 LAYOUT (bv_dynamodb_almsit_registration_new = [20, 20, 200, 200], p_f_bv_emcp_asset_j_emcp_token_siteid = [277, 19, 200, 200], bv_csv_ess_siteid_meterid_1 = [527, 24, 200, 200]);

CREATE OR REPLACE VIEW iv_customer_j_sites FOLDER = '/3 - integration/api1' (
    customerid (description = 'test5474')
 )
 AS SELECT master_customer_reltio_details.customerid AS customerid, master_customer_reltio_details.name AS name, master_customer_reltio_details.address AS address, master_customer_reltio_details.businesstype AS businesstype, master_customer_reltio_details.phone AS phone, master_customer_reltio_details.website AS website, master_customer_reltio_details.seprimarycontact AS seprimarycontact, master_customer_reltio_details.marketsegment AS marketsegment, master_customer_reltio_details.marketsubsegment AS marketsubsegment, master_customer_reltio_details.customerclassificationlevel1 AS customerclassificationlevel1, master_customer_reltio_details.customerclassificationlevel2 AS customerclassificationlevel2, nest(iv_master_sites_j_reltio_sitedetails.siteid, iv_master_sites_j_reltio_sitedetails.name, iv_master_sites_j_reltio_sitedetails.address, iv_master_sites_j_reltio_sitedetails.businesstype, iv_master_sites_j_reltio_sitedetails.phone, iv_master_sites_j_reltio_sitedetails.website, iv_master_sites_j_reltio_sitedetails.seprimarycontact, iv_master_sites_j_reltio_sitedetails.marketsegment, iv_master_sites_j_reltio_sitedetails.marketsubsegment, iv_master_sites_j_reltio_sitedetails.customerclassificationlevel1, iv_master_sites_j_reltio_sitedetails.customerclassificationlevel2) AS hierarchy, id FROM iv_master_customer_reltio_details AS master_customer_reltio_details NESTED PARALLEL LEFT OUTER JOIN 25 iv_master_sites_j_reltio_sitedetails AS iv_master_sites_j_reltio_sitedetails ON master_customer_reltio_details.customerid = iv_master_sites_j_reltio_sitedetails.customerid  WHERE id = master_customer_reltio_details.userid GROUP BY master_customer_reltio_details.name, master_customer_reltio_details.address, master_customer_reltio_details.businesstype, master_customer_reltio_details.phone, master_customer_reltio_details.website, master_customer_reltio_details.seprimarycontact, master_customer_reltio_details.marketsegment, master_customer_reltio_details.marketsubsegment, master_customer_reltio_details.customerclassificationlevel1, master_customer_reltio_details.customerclassificationlevel2, master_customer_reltio_details.reltiogoldenid, master_customer_reltio_details.customerid, master_customer_reltio_details.userid USING PARAMETERS ( id : text);

ALTER VIEW iv_customer_j_sites
 LAYOUT (iv_master_customer_reltio_details = [81, 46, 200, 200], iv_master_sites_j_reltio_sitedetails = [384, 55, 200, 200]);

CREATE OR REPLACE VIEW iv_dynamodb_sites_alm_formatted_locsite FOLDER = '/3 - integration/api1/archive' AS SELECT iv_dynamodb_sites_alm_formatted.id AS id, iv_dynamodb_sites_alm_formatted.name AS name, iv_dynamodb_sites_alm_formatted.description AS description, iv_dynamodb_sites_alm_formatted.createdby AS createdby, iv_dynamodb_sites_alm_formatted.sublocationid AS sublocationid, iv_dynamodb_sites_alm_formatted.siteid AS siteid, iv_dynamodb_sites_alm_formatted.publishercode AS publishercode, f_f_bv_emcp_sitelist_token_formatted_1.id AS local_siteid, iv_dynamodb_sites_alm_formatted.source AS source, f_f_bv_emcp_sitelist_token_formatted_1.source AS source_2 FROM iv_dynamodb_sites_alm_formatted AS iv_dynamodb_sites_alm_formatted INNER JOIN f_f_bv_emcp_sitelist_token_formatted_1 AS f_f_bv_emcp_sitelist_token_formatted_1 ON iv_dynamodb_sites_alm_formatted.siteid = f_f_bv_emcp_sitelist_token_formatted_1.alm_siteid ;

ALTER VIEW iv_dynamodb_sites_alm_formatted_locsite
 LAYOUT (iv_dynamodb_sites_alm_formatted = [20, 20, 200, 200], f_f_bv_emcp_sitelist_token_formatted_1 = [386, 26, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_formatted FOLDER = '/3 - integration/api1/archive' AS SELECT f_f_bv_emcp_sitelist_token_formatted_1.id AS id, f_f_bv_emcp_sitelist_token_formatted_1.name AS name, iv_dynamodb_sites_alm_formatted.createdby AS createdby, f_f_bv_emcp_sitelist_token_formatted_1.label AS label, iv_dynamodb_sites_alm_formatted.description AS description, iv_dynamodb_sites_alm_formatted.sublocationid AS sublocationid, 'EMCP' AS source, f_f_bv_emcp_sitelist_token_formatted_1.source AS source_2, iv_dynamodb_sites_alm_formatted.source AS source_3 FROM f_f_bv_emcp_sitelist_token_formatted_1 AS f_f_bv_emcp_sitelist_token_formatted_1 INNER JOIN iv_dynamodb_sites_alm_formatted AS iv_dynamodb_sites_alm_formatted ON f_f_bv_emcp_sitelist_token_formatted_1.alm_siteid = iv_dynamodb_sites_alm_formatted.siteid ;

ALTER VIEW iv_emcp_alm_formatted
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted_1 = [49, 29, 200, 200], iv_dynamodb_sites_alm_formatted = [426, 31, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_formatted_3 FOLDER = '/3 - integration/api3/v 1.0' AS SELECT f_f_bv_emcp_sitelist_token_formatted_1.id AS local_id, f_f_bv_emcp_sitelist_token_formatted_1.name AS name, f_f_bv_emcp_sitelist_token_formatted_1.label AS label, iv_dynamodb_sites_alm_formatted.description AS description, iv_dynamodb_sites_alm_formatted.sublocationid AS sublocationid, iv_dynamodb_sites_alm_formatted.id AS reltiogoldenid FROM f_f_bv_emcp_sitelist_token_formatted_1 AS f_f_bv_emcp_sitelist_token_formatted_1 ORDERED INNER JOIN iv_dynamodb_sites_alm_formatted AS iv_dynamodb_sites_alm_formatted ON f_f_bv_emcp_sitelist_token_formatted_1.alm_siteid = iv_dynamodb_sites_alm_formatted.siteid ;

ALTER VIEW iv_emcp_alm_formatted_3
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted_1 = [49, 29, 200, 200], iv_dynamodb_sites_alm_formatted = [426, 31, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_formatted_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT f_f_bv_emcp_sitelist_token_formatted_1.id AS id, f_f_bv_emcp_sitelist_token_formatted_1.name AS name, iv_dynamodb_sites_alm_formatted.createdby AS createdby, f_f_bv_emcp_sitelist_token_formatted_1.label AS label, iv_dynamodb_sites_alm_formatted.description AS description, iv_dynamodb_sites_alm_formatted.sublocationid AS sublocationid, 'EMCP' AS source, f_f_bv_emcp_sitelist_token_formatted_1.source AS source_2, iv_dynamodb_sites_alm_formatted.source AS source_3 FROM f_f_bv_emcp_sitelist_token_formatted_1 AS f_f_bv_emcp_sitelist_token_formatted_1 INNER JOIN iv_dynamodb_sites_alm_formatted AS iv_dynamodb_sites_alm_formatted ON f_f_bv_emcp_sitelist_token_formatted_1.alm_siteid = iv_dynamodb_sites_alm_formatted.siteid ;

ALTER VIEW iv_emcp_alm_formatted_v2
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted_1 = [49, 29, 200, 200], iv_dynamodb_sites_alm_formatted = [426, 31, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_formatted_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT f_f_bv_emcp_sitelist_token_formatted_1.id AS emcpsiteid, f_f_bv_emcp_sitelist_token_formatted_1.name AS name, iv_dynamodb_sites_alm_formatted.createdby AS createdby, f_f_bv_emcp_sitelist_token_formatted_1.label AS label, iv_dynamodb_sites_alm_formatted.description AS description, iv_dynamodb_sites_alm_formatted.sublocationid AS sublocationid, 'EMCP' AS source, f_f_bv_emcp_sitelist_token_formatted_1.source AS source_2, iv_dynamodb_sites_alm_formatted.source AS source_3 FROM f_f_bv_emcp_sitelist_token_formatted_1 AS f_f_bv_emcp_sitelist_token_formatted_1 INNER JOIN iv_dynamodb_sites_alm_formatted AS iv_dynamodb_sites_alm_formatted ON f_f_bv_emcp_sitelist_token_formatted_1.alm_siteid = iv_dynamodb_sites_alm_formatted.siteid ;

ALTER VIEW iv_emcp_alm_formatted_v2_1
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted_1 = [49, 29, 200, 200], iv_dynamodb_sites_alm_formatted = [426, 31, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_asset_info_commref FOLDER = '/3 - integration/api4/v 1.0' AS SELECT p_f_bv_emcp_asset_j_emcp_token.id AS id, p_f_bv_emcp_asset_j_emcp_token.attributes AS attributes, p_f_bv_emcp_asset_j_emcp_token_commref.commref AS commref FROM p_f_bv_emcp_asset_details AS p_f_bv_emcp_asset_j_emcp_token INNER JOIN p_f_p_bv_emcp_asset_details AS p_f_bv_emcp_asset_j_emcp_token_commref ON p_f_bv_emcp_asset_j_emcp_token.id = p_f_bv_emcp_asset_j_emcp_token_commref.assetid ;

ALTER VIEW iv_emcp_asset_info_commref
 LAYOUT (p_f_bv_emcp_asset_details = [20, 20, 200, 200], p_f_p_bv_emcp_asset_details = [345, 22, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_union_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT id, name, description, createdby, sublocationid, almsiteid, publishercode, source, emcpid, label, siteid, divisionname, sitename, address FROM (SELECT almsiteid, createdby, description, source, name, sublocationid, id, publishercode FROM iv_dynamodb_sites_alm_formatted_v2_1 EXTENDED UNION ALL SELECT source, name, label, emcpid FROM f_f_bv_emcp_sitelist_token_formatted_1_v2_1 EXTENDED UNION ALL SELECT sitename, address, divisionname, source, siteid FROM f_bv_ess_site_list_api_v2_1);

ALTER VIEW iv_ess_emcp_alm_union_v2_1
 LAYOUT (iv_dynamodb_sites_alm_formatted_v2_1 = [72, 43, 200, 200], f_f_bv_emcp_sitelist_token_formatted_1_v2_1 = [380, 56, 200, 200], f_bv_ess_site_list_api_v2_1 = [661, 59, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_site_list_j_accountist_j_metricdata_j_usage FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_ess_site_list_api.siteid AS siteid, f_bv_ess_site_list_api.sitename AS sitename, 'NULL' AS createdby, 'NULL' AS description, f_bv_ess_site_list_api.source AS source, f_p_bv_ess_apis_accountist.accounts AS accounts, f_p_bv_ess_apis_metricdata.metrics AS metrics, iv_ess_apis_usage_power_u_usage_gas.usage AS usage, start_time, end_time FROM ((f_bv_ess_site_list_api AS f_bv_ess_site_list_api LEFT OUTER JOIN f_p_bv_ess_apis_accountist AS f_p_bv_ess_apis_accountist ON f_bv_ess_site_list_api.siteclienthierid = f_p_bv_ess_apis_accountist.siteclienthierid ) LEFT OUTER JOIN f_p_bv_ess_apis_metricdata AS f_p_bv_ess_apis_metricdata ON f_bv_ess_site_list_api.siteclienthierid = f_p_bv_ess_apis_metricdata.siteclienthierid ) LEFT OUTER JOIN iv_ess_apis_usage_power_u_usage_gas AS iv_ess_apis_usage_power_u_usage_gas ON f_bv_ess_site_list_api.siteclienthierid = iv_ess_apis_usage_power_u_usage_gas.siteclienthierid  WHERE (f_p_bv_ess_apis_metricdata.startdate = start_time AND iv_ess_apis_usage_power_u_usage_gas.startdate = start_time AND f_p_bv_ess_apis_metricdata.enddate = end_time AND iv_ess_apis_usage_power_u_usage_gas.enddate = end_time) USING PARAMETERS ( start_time : text, end_time : text);

ALTER VIEW iv_ess_site_list_j_accountist_j_metricdata_j_usage
 LAYOUT (f_bv_ess_site_list_api = [20, 82, 200, 200], f_p_bv_ess_apis_accountist = [334, 13, 200, 200], f_p_bv_ess_apis_metricdata = [440, 85, 200, 200], iv_ess_apis_usage_power_u_usage_gas = [476, 183, 200, 200]);

CREATE OR REPLACE VIEW p_alm_data_j_sublocation FOLDER = '/3 - integration/api2/newdesign' AS SELECT iv_alm_data_j_sublocation.createdby AS createdby, iv_alm_data_j_sublocation.siteid AS siteid, iv_alm_data_j_sublocation.name AS name, iv_alm_data_j_sublocation.description AS description, nest(iv_alm_data_j_sublocation.sublocationmasterid, iv_alm_data_j_sublocation.locationtype, iv_alm_data_j_sublocation.sublocationname, iv_alm_data_j_sublocation.parentid) AS hierarchy, 'ALM' AS source FROM iv_alm_data_j_sublocation WHERE createdby <> 'NULL' GROUP BY iv_alm_data_j_sublocation.createdby, iv_alm_data_j_sublocation.siteid, iv_alm_data_j_sublocation.name, iv_alm_data_j_sublocation.description;

ALTER VIEW p_alm_data_j_sublocation
 LAYOUT (iv_alm_data_j_sublocation = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_bv_dynamodb_dfdev_sites_j_sublocation FOLDER = '/3 - integration/api2/newdesign' AS SELECT reltiogoldenid AS reltiogoldenid, createdby AS createdby, siteid AS siteid, name AS name, nest(sublocationmasterid, locationtype, sublocationname, parentid) AS hierarchy, 'ALM' AS source, description AS description FROM bv_dynamodb_dfdev_sites_j_sublocation GROUP BY description, createdby, siteid, reltiocertified, name, reltiogoldenid;

ALTER VIEW p_bv_dynamodb_dfdev_sites_j_sublocation
 LAYOUT (bv_dynamodb_dfdev_sites_j_sublocation = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_f_bv_emcp_assetlist_emcp_token_copy FOLDER = '/3 - integration/api2/archive' AS SELECT f_f_bv_emcp_assetlist_emcp_token_copy.localsiteid AS localsiteid, nest(f_f_bv_emcp_assetlist_emcp_token_copy.sublocationid, f_f_bv_emcp_assetlist_emcp_token_copy.locationtype, f_f_bv_emcp_assetlist_emcp_token_copy.sublocationname, f_f_bv_emcp_assetlist_emcp_token_copy.parentid) AS hierarchy FROM f_f_bv_emcp_assetlist_emcp_token_copy WHERE type = 'OTHER' GROUP BY f_f_bv_emcp_assetlist_emcp_token_copy.localsiteid;

ALTER VIEW p_f_f_bv_emcp_assetlist_emcp_token_copy
 LAYOUT (f_f_bv_emcp_assetlist_emcp_token_copy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_f_p_bv_emcp_timeseries_new FOLDER = '/2 - logical model' AS SELECT assetid AS assetid, starttime AS starttime, endtime AS endtime, nest(name, label, unit, value) AS timeseriesdata FROM f_f_p_bv_emcp_timeseries_new GROUP BY assetid, starttime, endtime;

ALTER VIEW p_f_f_p_bv_emcp_timeseries_new
 LAYOUT (f_f_p_bv_emcp_timeseries_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_iv_alm_asset_attribute_register FOLDER = '/3 - integration/api4/v 1.0' AS SELECT almassetidentifier AS id, commref AS commref, nest(name, value) AS attributes FROM f_iv_alm_asset_attribute_register GROUP BY almassetidentifier, commref;

ALTER VIEW p_f_iv_alm_asset_attribute_register
 LAYOUT (f_iv_alm_asset_attribute_register = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_f_bv_reltio_sitedetails_apigee_token FOLDER = '/3 - integration/api2/archive' AS SELECT p_f_bv_reltio_sitedetails_apigee_token.id AS id, p_f_bv_reltio_sitedetails_apigee_token.createdby AS createdby, p_f_bv_reltio_sitedetails_apigee_token.name AS name, p_f_bv_reltio_sitedetails_apigee_token.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_apigee_token.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_apigee_token.sitegoldenid AS sitegoldenid, (p_f_bv_reltio_sitedetails_apigee_token.address).addresstype AS type, (p_f_bv_reltio_sitedetails_apigee_token.address).addressline1 AS street, (p_f_bv_reltio_sitedetails_apigee_token.address).city AS city, (p_f_bv_reltio_sitedetails_apigee_token.address).postalcode AS postalcode, (p_f_bv_reltio_sitedetails_apigee_token.address).country.value AS country FROM p_f_bv_reltio_sitedetails_apigee_token;

ALTER VIEW p_p_f_bv_reltio_sitedetails_apigee_token
 LAYOUT (p_f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_p_p_bv_almsit_api_info_attribute_all FOLDER = '/3 - integration/api4/v 1.0' AS SELECT almassetidentifier AS almassetidentifier, nest(id, name, address, createdby, creationdate, lastmodifiedby, lastmodifieddate) AS registration FROM p_p_p_bv_almsit_api_info_attribute_all GROUP BY almassetidentifier;

ALTER VIEW p_p_p_p_bv_almsit_api_info_attribute_all
 LAYOUT (p_p_p_bv_almsit_api_info_attribute_all = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW test_emcp FOLDER = '/henry' AS SELECT p_f_bv_emcp_asset_j_emcp_token_siteid.assetid AS assetid, p_f_bv_emcp_asset_j_emcp_token_siteid.siteid AS siteid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid FROM p_f_bv_emcp_asset_j_emcp_token_siteid AS p_f_bv_emcp_asset_j_emcp_token_siteid LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON p_f_bv_emcp_asset_j_emcp_token_siteid.siteid = bv_dynamodb_dfdev_master_siteid.emcpid ;

ALTER VIEW test_emcp
 LAYOUT (p_f_bv_emcp_asset_j_emcp_token_siteid = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid = [354, 20, 200, 200]);

CREATE OR REPLACE VIEW bv_master_assetid_emcp_new_copy FOLDER = '/henry' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, emcp_asset_info_commref.attributes AS attributes, emcp_asset_info_commref.commref AS commref, 'EMCP' AS sourcename, ds_dynamodb_dfe_dev_assetid.emcpid AS sourceid, test_emcp.reltiogoldenid AS reltiogoldenid FROM (bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid INNER JOIN iv_emcp_asset_info_commref AS emcp_asset_info_commref ON ds_dynamodb_dfe_dev_assetid.emcpid = emcp_asset_info_commref.id ) LEFT OUTER JOIN test_emcp AS test_emcp ON ds_dynamodb_dfe_dev_assetid.emcpid = test_emcp.assetid ;

ALTER VIEW bv_master_assetid_emcp_new_copy
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [43, 30, 200, 200], iv_emcp_asset_info_commref = [348, 31, 200, 200], test_emcp = [351, 112, 200, 200]);

CREATE OR REPLACE VIEW bv_master_assetid_emcp_new_v3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, 'EMCP' AS sourcename, ds_dynamodb_dfe_dev_assetid.emcpid AS sourceid, bv_emcp_asset_info_commref_siteid.attributes AS attributes, bv_emcp_asset_info_commref_siteid.commref AS commref, bv_emcp_asset_info_commref_siteid.siteid AS siteid FROM bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid INNER JOIN bv_emcp_asset_info_commref_siteid AS bv_emcp_asset_info_commref_siteid ON ds_dynamodb_dfe_dev_assetid.emcpid = bv_emcp_asset_info_commref_siteid.id ;

ALTER VIEW bv_master_assetid_emcp_new_v3
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [43, 30, 200, 200], bv_emcp_asset_info_commref_siteid = [332, 31, 200, 200]);

CREATE OR REPLACE VIEW emcp_alm_sitedetails_copy_copy_testshashi FOLDER = '/3 - integration/api2/archive' AS SELECT p_f_f_bv_emcp_assetlist_emcp_token_copy.hierarchy AS hierarchy, f_f_bv_emcp_sitelist_token_formatted.id AS id, f_f_bv_emcp_sitelist_token_formatted.name AS name, f_f_bv_emcp_sitelist_token_formatted.label AS label, f_f_bv_emcp_sitelist_token_formatted.alm_siteid AS alm_siteid, p_f_f_bv_emcp_assetlist_emcp_token_copy.localsiteid AS localsiteid, iv_dynamodb_sites_alm_formatted.description AS description, iv_dynamodb_sites_alm_formatted.createdby AS createdby, iv_dynamodb_sites_alm_formatted.sublocationid AS sublocationid, iv_dynamodb_sites_alm_formatted.siteid AS siteid, iv_dynamodb_sites_alm_formatted.publishercode AS publishercode, iv_dynamodb_sites_alm_formatted.source AS source, iv_dynamodb_sites_alm_formatted.id AS reltioid, iv_dynamodb_sites_alm_formatted.source AS source_2, f_f_bv_emcp_sitelist_token_formatted.source AS source_3 FROM iv_dynamodb_sites_alm_formatted AS iv_dynamodb_sites_alm_formatted NESTED ORDERED INNER JOIN (f_f_bv_emcp_sitelist_token_formatted AS f_f_bv_emcp_sitelist_token_formatted NESTED PARALLEL ORDERED INNER JOIN 20 p_f_f_bv_emcp_assetlist_emcp_token_copy AS p_f_f_bv_emcp_assetlist_emcp_token_copy ON f_f_bv_emcp_sitelist_token_formatted.id = p_f_f_bv_emcp_assetlist_emcp_token_copy.localsiteid ) ON iv_dynamodb_sites_alm_formatted.siteid = f_f_bv_emcp_sitelist_token_formatted.alm_siteid ;

ALTER VIEW emcp_alm_sitedetails_copy_copy_testshashi
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted = [380, 35, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_copy = [630, 45, 200, 200], iv_dynamodb_sites_alm_formatted = [127, 39, 200, 200]);

CREATE OR REPLACE VIEW f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage FOLDER = '/3 - integration/api2/newdesign' AS SELECT v.siteid AS siteid, v.sitename AS sitename, v.address AS address, 'NULL' AS createdby, 'NULL' AS description, v.source AS source, v.accounts AS accounts, v.metrics AS metrics, v.servicename AS usagename, nest(v.month, v.usage, v.cost) AS timeseriesdata, v.usagetomonth AS usagetomonth, v.usagefrommonth AS usagefrommonth, v.metricenddate AS metricenddate, v.metricbegindate AS metricbegindate FROM FLATTEN f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage AS v ( v.serviceoutput_costusage) GROUP BY v.servicename, v.siteid, v.sitename, v.address, v.source, v.accounts, v.metrics, v.usagetomonth, v.usagefrommonth, v.metricenddate, v.metricbegindate;

ALTER VIEW f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage
 LAYOUT (f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_union_emcp_union_ess FOLDER = '/3 - integration/api4/v 1.0' AS SELECT id, attributes, commref FROM (SELECT id, commref, attributes FROM iv_emcp_asset_info_commref EXTENDED UNION ALL SELECT attributes, id, commref FROM p_bv_csv_ess_siteid_meterid_array EXTENDED UNION ALL SELECT id, commref, attributes FROM p_f_iv_alm_asset_attribute_register);

ALTER VIEW iv_alm_union_emcp_union_ess
 LAYOUT (iv_emcp_asset_info_commref = [25, 61, 200, 200], p_bv_csv_ess_siteid_meterid_array = [322, 64, 200, 200], p_f_iv_alm_asset_attribute_register = [607, 65, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_formatted_formatted_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT iv_emcp_alm_formatted_v2.id AS id, iv_emcp_alm_formatted_v2.name AS name, iv_emcp_alm_formatted_v2.createdby AS createdby, iv_emcp_alm_formatted_v2.label AS label, iv_emcp_alm_formatted_v2.description AS description, iv_emcp_alm_formatted_v2.sublocationid AS sublocationid, iv_emcp_alm_formatted_v2.source AS source, iv_emcp_alm_formatted_v2.source_2 AS source_2, iv_emcp_alm_formatted_v2.source_3 AS source_3, bv_dynamodb_dfdev_master_siteid_v2.reltiogoldenid AS reltiogoldenid FROM iv_emcp_alm_formatted_v2 AS iv_emcp_alm_formatted_v2 INNER JOIN bv_dynamodb_dfdev_master_siteid_v2_archive AS bv_dynamodb_dfdev_master_siteid_v2 ON iv_emcp_alm_formatted_v2.id = bv_dynamodb_dfdev_master_siteid_v2.emcpid ;

ALTER VIEW iv_emcp_alm_formatted_formatted_v2
 LAYOUT (iv_emcp_alm_formatted_v2 = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid_v2_archive = [470, 22, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_formatted_locsite FOLDER = '/3 - integration/api1/archive' AS SELECT f_f_bv_emcp_sitelist_token_formatted_1.id AS id, f_f_bv_emcp_sitelist_token_formatted_1.name AS name, iv_dynamodb_sites_alm_formatted_locsite.createdby AS createdby, f_f_bv_emcp_sitelist_token_formatted_1.label AS label, iv_dynamodb_sites_alm_formatted_locsite.description AS description, iv_dynamodb_sites_alm_formatted_locsite.sublocationid AS sublocationid, iv_dynamodb_sites_alm_formatted_locsite.local_siteid AS local_siteid, f_f_bv_emcp_sitelist_token_formatted_1.source AS source, iv_dynamodb_sites_alm_formatted_locsite.source AS source_2, f_f_bv_emcp_sitelist_token_formatted_1.source AS source_3, iv_dynamodb_sites_alm_formatted_locsite.source AS source_4, iv_dynamodb_sites_alm_formatted_locsite.source_2 AS source_2_2 FROM f_f_bv_emcp_sitelist_token_formatted_1 AS f_f_bv_emcp_sitelist_token_formatted_1 INNER JOIN iv_dynamodb_sites_alm_formatted_locsite AS iv_dynamodb_sites_alm_formatted_locsite ON f_f_bv_emcp_sitelist_token_formatted_1.alm_siteid = iv_dynamodb_sites_alm_formatted_locsite.siteid ;

ALTER VIEW iv_emcp_alm_formatted_locsite
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted_1 = [61, 16, 200, 200], iv_dynamodb_sites_alm_formatted_locsite = [484, 64, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_masterid FOLDER = '/3 - integration/api3/v 1.0' AS SELECT bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.id AS id, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.label AS label, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.type AS type, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.reltiogoldenid AS reltiogoldenid, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.localsiteid AS siteid, ds_dynamodb_dfe_dev_assetid.id AS assetmasterid, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.source AS source, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.name AS name, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.reference AS reference, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.brand AS brand, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.range AS range, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.productdescription AS description, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.imageurl AS imageurl, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.serialnumber AS serialnumber, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.parentid AS parentid, bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.assetdescription AS assetdescription FROM bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1 AS bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1 LEFT OUTER JOIN bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid ON bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1.id = ds_dynamodb_dfe_dev_assetid.emcpid ;

ALTER VIEW iv_emcp_alm_masterid
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3_j_f_f_p_bv_emcp_assetlist_1 = [42, 46, 200, 200], bv_dynamodb_dfe_dev_assetid = [429, 44, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_alm_masterid_copy FOLDER = '/3 - integration/api3/v 1.0' AS SELECT f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.id AS id, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.label AS label, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.type AS type, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.reltiogoldenid AS reltiogoldenid, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.localsiteid AS siteid, ds_dynamodb_dfe_dev_assetid.id AS assetmasterid, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.source AS source, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.name AS name, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.reference AS reference, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.brand AS brand, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.range AS range, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.productdescription AS description, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.imageurl AS imageurl, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.serialnumber AS serialnumber, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.parentid AS parentid, f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.assetdescription AS assetdescription FROM f_f_bv_emcp_assetlist_emcp_token_j_bv_dynamodb_dfdev_master_siteid_3 AS f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3 LEFT OUTER JOIN bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid ON f_f_bv_emcp_assetlist_emcp_token_j_iv_emcp_alm_formatted_3.id = ds_dynamodb_dfe_dev_assetid.emcpid ;

ALTER VIEW iv_emcp_alm_masterid_copy
 LAYOUT (f_f_bv_emcp_assetlist_emcp_token_j_bv_dynamodb_dfdev_master_siteid_3 = [21, 20, 200, 200], bv_dynamodb_dfe_dev_assetid = [449, 37, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_asset_site_details FOLDER = '/3 - integration/api4/v 2.0' AS SELECT iv_alm_emcp_ess_asset_site.assetid AS assetid, bv_dynamodb_dfdev_master_siteid.id AS id, iv_alm_emcp_ess_asset_site.siteid AS localsiteid, p_f_bv_reltio_sitedetails.id AS reltiogoldenid, p_f_bv_reltio_sitedetails.name AS name, p_f_bv_reltio_sitedetails.address AS address, p_f_bv_reltio_sitedetails.businesstype AS businesstype, p_f_bv_reltio_sitedetails.phone AS phone, p_f_bv_reltio_sitedetails.website AS website, p_f_bv_reltio_sitedetails.seprimarycontact AS seprimarycontact, p_f_bv_reltio_sitedetails.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails.marketsubsegment AS marketsubsegment, p_f_bv_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, p_f_bv_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2 FROM (iv_alm_emcp_ess_asset_to_site AS iv_alm_emcp_ess_asset_site LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON (iv_alm_emcp_ess_asset_site.siteid = bv_dynamodb_dfdev_master_siteid.almid OR iv_alm_emcp_ess_asset_site.siteid = bv_dynamodb_dfdev_master_siteid.emcpid OR iv_alm_emcp_ess_asset_site.siteid = bv_dynamodb_dfdev_master_siteid.essid) ) LEFT OUTER JOIN p_f_bv_reltio_sitedetails AS p_f_bv_reltio_sitedetails ON bv_dynamodb_dfdev_master_siteid.reltiogoldenid = p_f_bv_reltio_sitedetails.id CONTEXT ('formatted' = 'yes');

ALTER VIEW iv_emcp_asset_site_details
 LAYOUT (iv_alm_emcp_ess_asset_to_site = [59, 37, 200, 200], bv_dynamodb_dfdev_master_siteid = [363, 37, 200, 200], p_f_bv_reltio_sitedetails = [629, 39, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT iv_ess_emcp_alm_union_v2_1.name AS name, iv_ess_emcp_alm_union_v2_1.createdby AS createdby, iv_ess_emcp_alm_union_v2_1.siteid AS siteid, iv_ess_emcp_alm_union_v2_1.source AS source, iv_ess_emcp_alm_union_v2_1.address AS address, iv_ess_emcp_alm_union_v2_1.description AS description, iv_ess_emcp_alm_union_v2_1.sublocationid AS sublocationid, iv_ess_emcp_alm_union_v2_1.publishercode AS publishercode, iv_ess_emcp_alm_union_v2_1.divisionname AS divisionname, iv_ess_emcp_alm_union_v2_1.label AS label, iv_ess_emcp_alm_union_v2_1.almsiteid AS almsiteid, bv_dynamodb_dfdev_master_siteid_v2_1.id AS id, bv_dynamodb_dfdev_master_siteid_v2_1.almid AS almid, bv_dynamodb_dfdev_master_siteid_v2_1.emcpid AS emcpid, bv_dynamodb_dfdev_master_siteid_v2_1.essid AS essid, bv_dynamodb_dfdev_master_siteid_v2_1.reltiogoldenid AS reltiogoldenid FROM iv_ess_emcp_alm_union_v2_1 AS iv_ess_emcp_alm_union_v2_1 INNER JOIN bv_dynamodb_dfdev_master_siteid_v2_1 AS bv_dynamodb_dfdev_master_siteid_v2_1 ON iv_ess_emcp_alm_union_v2_1.almsiteid = bv_dynamodb_dfdev_master_siteid_v2_1.almid ;

ALTER VIEW iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1
 LAYOUT (iv_ess_emcp_alm_union_v2_1 = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid_v2_1 = [416, 8, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_union_v2_1_test FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT id, name, description, createdby, sublocationid, almsiteid, publishercode, source, emcpsiteid, label, source_2, source_3, siteid, divisionname, sitename, address FROM (SELECT almsiteid, createdby, description, source, name, sublocationid, id, publishercode FROM iv_dynamodb_sites_alm_formatted_v2_1 EXTENDED UNION ALL SELECT name, description, source, source_2, createdby, source_3, sublocationid, emcpsiteid, label FROM iv_emcp_alm_formatted_v2_1 EXTENDED UNION ALL SELECT sitename, address, divisionname, source, siteid FROM f_bv_ess_site_list_api_v2_1);

ALTER VIEW iv_ess_emcp_alm_union_v2_1_test
 LAYOUT (iv_dynamodb_sites_alm_formatted_v2_1 = [72, 43, 200, 200], iv_emcp_alm_formatted_v2_1 = [406, 53, 200, 200], f_bv_ess_site_list_api_v2_1 = [706, 53, 200, 200]);

CREATE OR REPLACE VIEW iv_master_assetid_alm FOLDER = '/3 - integration/api4/v 1.0' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, p_f_bv_alm_asset_attribute_register.commref AS commref, p_f_bv_alm_asset_attribute_register.attributes AS attributes FROM bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid INNER JOIN p_f_iv_alm_asset_attribute_register AS p_f_bv_alm_asset_attribute_register ON ds_dynamodb_dfe_dev_assetid.almid = p_f_bv_alm_asset_attribute_register.id ;

ALTER VIEW iv_master_assetid_alm
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [55, 39, 200, 200], p_f_iv_alm_asset_attribute_register = [415, 40, 200, 200]);

CREATE OR REPLACE VIEW iv_master_assetid_emcp FOLDER = '/3 - integration/api4/v 1.0' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, emcp_asset_info_commref.attributes AS attributes, emcp_asset_info_commref.commref AS commref FROM bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid INNER JOIN iv_emcp_asset_info_commref AS emcp_asset_info_commref ON ds_dynamodb_dfe_dev_assetid.emcpid = emcp_asset_info_commref.id ;

ALTER VIEW iv_master_assetid_emcp
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [43, 30, 200, 200], iv_emcp_asset_info_commref = [348, 31, 200, 200]);

CREATE OR REPLACE VIEW iv_sitelist_alm_ess_emcp_union FOLDER = '/3 - integration/api1/archive' AS SELECT id, name, customername, address, createdby, siteid, source, description, sublocationid, publishercode, label, source_2 AS source_2, source_3 AS source_3 FROM (SELECT name, source, customername, id, siteid, address, createdby FROM iv_csv_sitelist_ess_formatted EXTENDED UNION ALL SELECT publishercode, id, siteid, sublocationid, description, name, source, createdby FROM iv_dynamodb_sites_alm_formatted EXTENDED UNION ALL SELECT id, description, label, createdby, sublocationid, name, source, source_2 AS source_2, source_3 AS source_3 FROM iv_emcp_alm_formatted);

ALTER VIEW iv_sitelist_alm_ess_emcp_union
 LAYOUT (iv_csv_sitelist_ess_formatted = [20, 20, 200, 200], iv_dynamodb_sites_alm_formatted = [306, 31, 200, 200], iv_emcp_alm_formatted = [622, 64, 200, 200]);

CREATE OR REPLACE VIEW iv_sitelist_emcp_ess_alm_union FOLDER = '/3 - integration/api1/archive' AS SELECT userid AS userid, siteid AS siteid, name AS name, reltiogoldenid AS reltiogoldenid FROM (SELECT userid, siteid, name, reltiogoldenid FROM iv_sitelist_alm_ess_union_bkup SQL UNION ALL SELECT id, siteid, emcp_name, reltiogoldenid FROM f_f_bv_emcp_sitelist_token_alm);

ALTER VIEW iv_sitelist_emcp_ess_alm_union
 LAYOUT (iv_sitelist_alm_ess_union_bkup = [20, 20, 200, 200], f_f_bv_emcp_sitelist_token_alm = [462, 86, 200, 200]);

CREATE OR REPLACE VIEW p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.localsiteid AS localsiteid, f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.source AS source, nest(f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.sublocationmasterid, f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.locationtype, f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.sublocationname, f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.parentid) AS hierarchy FROM f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids WHERE type = 'OTHER' GROUP BY f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.source, f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.localsiteid;

ALTER VIEW p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids
 LAYOUT (f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_f_bv_emcp_assetlist_emcp_token_sublocationids FOLDER = '/3 - integration/api6' AS SELECT f_f_bv_emcp_assetlist_emcp_token_sublocationids.localsiteid AS localsiteid, nest(f_f_bv_emcp_assetlist_emcp_token_sublocationids.id, f_f_bv_emcp_assetlist_emcp_token_sublocationids.locationtype, f_f_bv_emcp_assetlist_emcp_token_sublocationids.label, f_f_bv_emcp_assetlist_emcp_token_sublocationids.parentid) AS sublocations FROM f_f_bv_emcp_assetlist_emcp_token_sublocationids WHERE (type = 'OTHER' AND locationtype <> 'site') GROUP BY f_f_bv_emcp_assetlist_emcp_token_sublocationids.localsiteid;

ALTER VIEW p_f_f_bv_emcp_assetlist_emcp_token_sublocationids
 LAYOUT (f_f_bv_emcp_assetlist_emcp_token_sublocationids = [107, 54, 200, 200]);

CREATE OR REPLACE VIEW p_f_iv_alm_asset_attribute_register_j_ds_dynamodb_dfe_dev_assetid FOLDER = '/3 - integration/api4/v 1.0' AS SELECT ds_dynamodb_dfe_dev_assetid.id AS id, ds_dynamodb_dfe_dev_assetid.emcpid AS emcpid, ds_dynamodb_dfe_dev_assetid.almid AS almid, ds_dynamodb_dfe_dev_assetid.essid AS essid, p_f_bv_alm_asset_attribute_register.commref AS commref, p_f_bv_alm_asset_attribute_register.attributes AS attributes FROM bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid INNER JOIN p_f_iv_alm_asset_attribute_register AS p_f_bv_alm_asset_attribute_register ON ds_dynamodb_dfe_dev_assetid.almid = p_f_bv_alm_asset_attribute_register.id ;

ALTER VIEW p_f_iv_alm_asset_attribute_register_j_ds_dynamodb_dfe_dev_assetid
 LAYOUT (bv_dynamodb_dfe_dev_assetid = [88, 49, 200, 200], p_f_iv_alm_asset_attribute_register = [447, 46, 200, 200]);

CREATE OR REPLACE VIEW p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy FOLDER = '/3 - integration/api2/newdesign' AS SELECT id AS id, name AS name, usagename AS usagename, nest(month, usage, cost) AS timeseriesdata, starttime AS starttime, endtime AS endtime FROM f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy GROUP BY usagename, name, id, starttime, endtime;

ALTER VIEW p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy
 LAYOUT (f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_power FOLDER = '/3 - integration/api2/newdesign' AS SELECT id AS id, name AS name, usagename AS usagename, nest(month, usage, cost) AS timeseriesdata, starttime AS starttime, endtime AS endtime FROM f_iv_emcp_sitelist_j_p_bv_emcp_usage_power GROUP BY usagename, id, name, starttime, endtime;

ALTER VIEW p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_power
 LAYOUT (f_iv_emcp_sitelist_j_p_bv_emcp_usage_power = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_p_f_bv_reltio_sitedetails_apigee_token FOLDER = '/3 - integration/api2/archive' AS SELECT id AS id, register(street, city, postalcode, country, type) AS address FROM p_p_f_bv_reltio_sitedetails_apigee_token GROUP BY country, postalcode, city, street, type, id;

ALTER VIEW p_p_p_f_bv_reltio_sitedetails_apigee_token
 LAYOUT (p_p_f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW sites FOLDER = '/4 - business views/api1' AS SELECT id AS userid, nest(customerid, name, address, businesstype, phone, website, seprimarycontact, marketsegment, marketsubsegment, customerclassificationlevel1, customerclassificationlevel2, hierarchy) AS data FROM iv_customer_j_sites GROUP BY id;

ALTER VIEW sites
 LAYOUT (iv_customer_j_sites = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW test1_alm_u_test2_ess_u_test_emcp FOLDER = '/henry' AS SELECT assetid, siteid, reltiogoldenid FROM (SELECT reltiogoldenid, siteid, assetid FROM test1_alm EXTENDED UNION ALL SELECT assetid, siteid, reltiogoldenid FROM test2_ess EXTENDED UNION ALL SELECT siteid, assetid, reltiogoldenid FROM test_emcp);

ALTER VIEW test1_alm_u_test2_ess_u_test_emcp
 LAYOUT (test1_alm = [33, 98, 200, 200], test2_ess = [328, 98, 200, 200], test_emcp = [645, 100, 200, 200]);

CREATE OR REPLACE VIEW f_bv_emcp_sitelist_token_formatted_j_sublocationids FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_emcp_sitelist_token_formatted_j_master_siteid.id AS id, f_bv_emcp_sitelist_token_formatted_j_master_siteid.name AS name, f_bv_emcp_sitelist_token_formatted_j_master_siteid.label AS label, f_bv_emcp_sitelist_token_formatted_j_master_siteid.reltiogoldenid AS reltiogoldenid, f_bv_emcp_sitelist_token_formatted_j_master_siteid.source AS source, p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.hierarchy AS hierarchy, 'NULL' AS createdby, 'NULL' AS description FROM f_bv_emcp_sitelist_token_formatted_j_master_siteid AS f_bv_emcp_sitelist_token_formatted_j_master_siteid LEFT OUTER JOIN p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids AS p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids ON f_bv_emcp_sitelist_token_formatted_j_master_siteid.id = p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.localsiteid ;

ALTER VIEW f_bv_emcp_sitelist_token_formatted_j_sublocationids
 LAYOUT (f_bv_emcp_sitelist_token_formatted_j_master_siteid = [20, 20, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids = [340, 19, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_formatted_j_sublocation FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_f_bv_emcp_sitelist_token_formatted.id AS id, f_f_bv_emcp_sitelist_token_formatted.name AS name, f_f_bv_emcp_sitelist_token_formatted.label AS label, f_f_bv_emcp_sitelist_token_formatted.alm_siteid AS alm_siteid, p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.hierarchy AS hierarchy, f_f_bv_emcp_sitelist_token_formatted.source AS source FROM f_f_bv_emcp_sitelist_token_formatted AS f_f_bv_emcp_sitelist_token_formatted NESTED PARALLEL LEFT OUTER JOIN 10 p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids AS p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids ON f_f_bv_emcp_sitelist_token_formatted.id = p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.localsiteid ;

ALTER VIEW f_f_bv_emcp_sitelist_token_formatted_j_sublocation
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted = [27, 18, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids = [302, 44, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_data_j_sublocationid FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_bv_emcp_sitelist_token_formatted.id AS id, f_bv_emcp_sitelist_token_formatted.name AS name, 'EMCP' AS source, p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.hierarchy AS hierarchy, 'NULL' AS createdby, 'NULL' AS description FROM f_bv_emcp_sitelist_token_formatted AS f_bv_emcp_sitelist_token_formatted NESTED PARALLEL ORDERED LEFT OUTER JOIN 10 p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids AS p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids ON f_bv_emcp_sitelist_token_formatted.id = p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.localsiteid ;

ALTER VIEW iv_emcp_data_j_sublocationid
 LAYOUT (f_bv_emcp_sitelist_token_formatted = [20, 20, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids = [372, 24, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_usage_energy_u_emcp_usage_power FOLDER = '/3 - integration/api2/newdesign' AS SELECT name, id, nest(usagename, timeseriesdata) AS usage, starttime, endtime FROM (SELECT timeseriesdata, id, name, endtime, usagename, starttime FROM p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy EXTENDED UNION ALL SELECT name, usagename, timeseriesdata, starttime, id, endtime FROM p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_power) GROUP BY name, id, starttime, endtime, starttime, endtime;

ALTER VIEW iv_emcp_usage_energy_u_emcp_usage_power
 LAYOUT (p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_energy = [103, 47, 200, 200], p_f_iv_emcp_sitelist_j_p_bv_emcp_usage_power = [413, 53, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_new FOLDER = '/3 - integration/api3/v 1.0' AS SELECT siteid, name, serialnumber, localsiteid, assetdescription, source, sourcebrand, sourcerange, label, sourcedescription, sourceimageurl, parentid, reference, iv_emcp_alm_masterid_id, sourceid FROM (SELECT range AS sourcerange, description AS assetdescription, name, source, reference, reltiogoldenid AS siteid, id AS sourceid, serialnumber, brand AS sourcebrand, siteid AS localsiteid FROM p_bv_csv_ess_siteid_meterid_master_siteid EXTENDED UNION ALL SELECT imageurl AS sourceimageurl, parentid, name, range AS sourcerange, label, serialnumber, reltiogoldenid AS siteid, assetmasterid AS iv_emcp_alm_masterid_id, assetdescription, description AS sourcedescription, reference, source, siteid AS localsiteid, brand AS sourcebrand, id AS sourceid FROM iv_emcp_alm_masterid);

ALTER VIEW iv_ess_emcp_alm_new
 LAYOUT (p_bv_csv_ess_siteid_meterid_master_siteid = [37, 22, 200, 200], iv_emcp_alm_masterid = [446, 24, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_new_copy FOLDER = '/3 - integration/api3/archive' AS SELECT siteid, name, serialnumber, localsiteid, assetdescription, source, sourcebrand, sourcerange, label, sourcedescription, sourceimageurl, parentid, reference, iv_emcp_alm_masterid_id FROM (SELECT range AS sourcerange, description AS assetdescription, name, source, reference, reltiogoldenid AS siteid, id, serialnumber, brand AS sourcebrand, siteid AS localsiteid FROM p_bv_csv_ess_siteid_meterid_master_siteid EXTENDED UNION ALL SELECT imageurl AS sourceimageurl, parentid, name, range AS sourcerange, label, serialnumber, reltiogoldenid AS siteid, assetmasterid AS iv_emcp_alm_masterid_id, assetdescription, description AS sourcedescription, reference, source, siteid AS localsiteid, brand AS sourcebrand, id FROM iv_emcp_alm_masterid EXTENDED UNION ALL SELECT assetmasterid AS iv_emcp_alm_masterid_id, reltiogoldenid AS siteid, source, reference, name, brand AS sourcebrand, id, range AS sourcerange, siteid AS localsiteid, serialnumber FROM iv_alm_dynamodb_asset_masterid);

ALTER VIEW iv_ess_emcp_alm_new_copy
 LAYOUT (p_bv_csv_ess_siteid_meterid_master_siteid = [37, 22, 200, 200], iv_emcp_alm_masterid = [318, 23, 200, 200], iv_alm_dynamodb_asset_masterid = [594, 21, 200, 200]);

CREATE OR REPLACE VIEW iv_final_emcp_alm_ess_masterid_without_reltiosite FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT id, name, register(siteaddressline1, city, statename, zipcode, countryname) AS address, createdby, siteid, source, description, sublocationid, publishercode, divisionname, label, source_2, source_3, userid FROM (SELECT zipcode, siteid, city, id, countryname, divisionname, statename, name, siteaddressline1, source, reltiogoldenid FROM f_bv_ess_site_list_api_formatted_v2 EXTENDED UNION ALL SELECT id, publishercode, siteid, sublocationid, description, reltiogoldenid, source, name, createdby FROM iv_dynamodb_sites_alm_formatted_formatted_v2 EXTENDED UNION ALL SELECT source, name, description, label, source_3, id, source_2, createdby, sublocationid, reltiogoldenid FROM iv_emcp_alm_formatted_formatted_v2) WHERE (createdby = userid OR source = 'ESS' OR source = 'EMCP') USING PARAMETERS ( userid : text);

ALTER VIEW iv_final_emcp_alm_ess_masterid_without_reltiosite
 LAYOUT (f_bv_ess_site_list_api_formatted_v2 = [20, 20, 200, 200], iv_dynamodb_sites_alm_formatted_formatted_v2 = [353, 24, 200, 200], iv_emcp_alm_formatted_formatted_v2 = [719, 36, 200, 200]);

CREATE OR REPLACE VIEW iv_final_masterid_emcp_alm_ess_without_reltiosite FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT bv_dynamodb_dfdev_master_siteid_v2_1.id AS id, bv_dynamodb_dfdev_master_siteid_v2_1.almid AS almid, bv_dynamodb_dfdev_master_siteid_v2_1.emcpid AS emcpid, bv_dynamodb_dfdev_master_siteid_v2_1.essid AS essid, bv_dynamodb_dfdev_master_siteid_v2_1.reltiogoldenid AS reltiogoldenid, iv_ess_emcp_alm_union_v2_1_test.name AS name, iv_ess_emcp_alm_union_v2_1_test.description AS description, iv_ess_emcp_alm_union_v2_1_test.createdby AS createdby, iv_ess_emcp_alm_union_v2_1_test.sublocationid AS sublocationid, iv_ess_emcp_alm_union_v2_1_test.almsiteid AS almsiteid, iv_ess_emcp_alm_union_v2_1_test.publishercode AS publishercode, iv_ess_emcp_alm_union_v2_1_test.source AS source, iv_ess_emcp_alm_union_v2_1_test.emcpsiteid AS emcpsiteid, iv_ess_emcp_alm_union_v2_1_test.label AS label, iv_ess_emcp_alm_union_v2_1_test.source_2 AS source_2, iv_ess_emcp_alm_union_v2_1_test.source_3 AS source_3, iv_ess_emcp_alm_union_v2_1_test.siteid AS siteid, iv_ess_emcp_alm_union_v2_1_test.divisionname AS divisionname, iv_ess_emcp_alm_union_v2_1_test.sitename AS sitename, iv_ess_emcp_alm_union_v2_1_test.address AS address FROM bv_dynamodb_dfdev_master_siteid_v2_1 AS bv_dynamodb_dfdev_master_siteid_v2_1 LEFT OUTER JOIN iv_ess_emcp_alm_union_v2_1_test AS iv_ess_emcp_alm_union_v2_1_test ON (bv_dynamodb_dfdev_master_siteid_v2_1.almid = iv_ess_emcp_alm_union_v2_1_test.almsiteid OR bv_dynamodb_dfdev_master_siteid_v2_1.emcpid = iv_ess_emcp_alm_union_v2_1_test.emcpsiteid OR bv_dynamodb_dfdev_master_siteid_v2_1.essid = iv_ess_emcp_alm_union_v2_1_test.siteid) ;

ALTER VIEW iv_final_masterid_emcp_alm_ess_without_reltiosite
 LAYOUT (bv_dynamodb_dfdev_master_siteid_v2_1 = [20, 20, 200, 200], iv_ess_emcp_alm_union_v2_1_test = [426, 15, 200, 200]);

CREATE OR REPLACE VIEW iv_final_union_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT id, name, createdby, siteid, source, description, sublocationid, publishercode, divisionname, label, source_2, source_3, reltiogoldenid FROM (SELECT siteid, id, divisionname, name, source, reltiogoldenid FROM f_bv_ess_site_list_api_formatted_v2 EXTENDED UNION ALL SELECT id, publishercode, siteid, sublocationid, description, reltiogoldenid, source, name, createdby FROM iv_dynamodb_sites_alm_formatted_formatted_v2 EXTENDED UNION ALL SELECT source, name, description, label, source_3, id, source_2, createdby, sublocationid, reltiogoldenid FROM iv_emcp_alm_formatted_formatted_v2);

ALTER VIEW iv_final_union_v2
 LAYOUT (f_bv_ess_site_list_api_formatted_v2 = [20, 20, 200, 200], iv_dynamodb_sites_alm_formatted_formatted_v2 = [353, 24, 200, 200], iv_emcp_alm_formatted_formatted_v2 = [719, 36, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_sitedetails_formatted FOLDER = '/3 - integration/api2/newdesign' AS SELECT p_f_bv_reltio_sitedetails_apigee_token.createdby AS createdby, p_f_bv_reltio_sitedetails_apigee_token.name AS name, p_f_bv_reltio_sitedetails_apigee_token.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_apigee_token.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_apigee_token.sitegoldenid AS sitegoldenid, p_p_p_f_bv_reltio_sitedetails_apigee_token.address AS address, p_id FROM p_f_bv_reltio_sitedetails_apigee_token AS p_f_bv_reltio_sitedetails_apigee_token INNER JOIN p_p_p_f_bv_reltio_sitedetails_apigee_token AS p_p_p_f_bv_reltio_sitedetails_apigee_token ON p_f_bv_reltio_sitedetails_apigee_token.id = p_p_p_f_bv_reltio_sitedetails_apigee_token.id  WHERE (p_f_bv_reltio_sitedetails_apigee_token.id = p_id AND p_p_p_f_bv_reltio_sitedetails_apigee_token.id = p_id) USING PARAMETERS ( p_id : text);

ALTER VIEW p_f_bv_reltio_sitedetails_formatted
 LAYOUT (p_f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200], p_p_p_f_bv_reltio_sitedetails_apigee_token = [432, 22, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_sitedetails_formatted_1 FOLDER = '/3 - integration/api1/archive' AS SELECT p_f_bv_reltio_sitedetails_apigee_token.createdby AS createdby, p_f_bv_reltio_sitedetails_apigee_token.name AS name, p_f_bv_reltio_sitedetails_apigee_token.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_apigee_token.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_apigee_token.sitegoldenid AS sitegoldenid, p_p_p_f_bv_reltio_sitedetails_apigee_token.address AS address, p_id FROM p_f_bv_reltio_sitedetails_apigee_token AS p_f_bv_reltio_sitedetails_apigee_token INNER JOIN p_p_p_f_bv_reltio_sitedetails_apigee_token AS p_p_p_f_bv_reltio_sitedetails_apigee_token ON p_f_bv_reltio_sitedetails_apigee_token.id = p_p_p_f_bv_reltio_sitedetails_apigee_token.id  WHERE (p_f_bv_reltio_sitedetails_apigee_token.id = p_id AND p_p_p_f_bv_reltio_sitedetails_apigee_token.id = p_id) USING PARAMETERS ( p_id : text);

ALTER VIEW p_f_bv_reltio_sitedetails_formatted_1
 LAYOUT (p_f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200], p_p_p_f_bv_reltio_sitedetails_apigee_token = [432, 22, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_sitedetails_formatted_1_v2 FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT p_f_bv_reltio_sitedetails_apigee_token.createdby AS createdby, p_f_bv_reltio_sitedetails_apigee_token.name AS name, p_f_bv_reltio_sitedetails_apigee_token.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_apigee_token.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_apigee_token.sitegoldenid AS sitegoldenid, p_p_p_f_bv_reltio_sitedetails_apigee_token.address AS address, p_id FROM p_f_bv_reltio_sitedetails_apigee_token AS p_f_bv_reltio_sitedetails_apigee_token INNER JOIN p_p_p_f_bv_reltio_sitedetails_apigee_token AS p_p_p_f_bv_reltio_sitedetails_apigee_token ON p_f_bv_reltio_sitedetails_apigee_token.id = p_p_p_f_bv_reltio_sitedetails_apigee_token.id  WHERE (p_f_bv_reltio_sitedetails_apigee_token.id = p_id AND p_p_p_f_bv_reltio_sitedetails_apigee_token.id = p_id) USING PARAMETERS ( p_id : text);

ALTER VIEW p_f_bv_reltio_sitedetails_formatted_1_v2
 LAYOUT (p_f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200], p_p_p_f_bv_reltio_sitedetails_apigee_token = [432, 22, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_sitedetails_formatted_1_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT p_f_bv_reltio_sitedetails_apigee_token.createdby AS createdby, p_f_bv_reltio_sitedetails_apigee_token.name AS name, p_f_bv_reltio_sitedetails_apigee_token.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_apigee_token.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_apigee_token.sitegoldenid AS sitegoldenid, p_p_p_f_bv_reltio_sitedetails_apigee_token.address AS address, p_id FROM p_f_bv_reltio_sitedetails_apigee_token AS p_f_bv_reltio_sitedetails_apigee_token INNER JOIN p_p_p_f_bv_reltio_sitedetails_apigee_token AS p_p_p_f_bv_reltio_sitedetails_apigee_token ON p_f_bv_reltio_sitedetails_apigee_token.id = p_p_p_f_bv_reltio_sitedetails_apigee_token.id  WHERE (p_f_bv_reltio_sitedetails_apigee_token.id = p_id AND p_p_p_f_bv_reltio_sitedetails_apigee_token.id = p_id) USING PARAMETERS ( p_id : text);

ALTER VIEW p_f_bv_reltio_sitedetails_formatted_1_v2_1
 LAYOUT (p_f_bv_reltio_sitedetails_apigee_token = [20, 20, 200, 200], p_p_p_f_bv_reltio_sitedetails_apigee_token = [432, 22, 200, 200]);

CREATE OR REPLACE VIEW p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid FOLDER = '/3 - integration/api6' AS SELECT p_f_f_bv_emcp_assetlist_emcp_token_sublocationids.sublocations AS sublocations, bv_dynamodb_dfdev_master_siteid_3.reltiogoldenid AS siteid FROM bv_dynamodb_dfdev_master_siteid_3 AS bv_dynamodb_dfdev_master_siteid_3 LEFT OUTER JOIN p_f_f_bv_emcp_assetlist_emcp_token_sublocationids AS p_f_f_bv_emcp_assetlist_emcp_token_sublocationids ON bv_dynamodb_dfdev_master_siteid_3.emcpid = p_f_f_bv_emcp_assetlist_emcp_token_sublocationids.localsiteid ;

ALTER VIEW p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3 = [99, 38, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_sublocationids = [398, 56, 200, 200]);

CREATE OR REPLACE VIEW p_f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage FOLDER = '/3 - integration/api2/newdesign' AS SELECT siteid AS siteid, sitename AS sitename, address AS address, createdby AS createdby, description AS description, source AS source, accounts AS accounts, metrics AS metrics, nest(usagename, timeseriesdata) AS usage, usagetomonth AS usagetomonth, usagefrommonth AS usagefrommonth, metricenddate AS metricenddate, metricbegindate AS metricbegindate FROM f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage GROUP BY siteid, sitename, address, createdby, description, source, accounts, metrics, usagetomonth, usagefrommonth, metricenddate, metricbegindate;

ALTER VIEW p_f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage
 LAYOUT (f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW test1_alm_u_test2_ess_u_test_emcp_j_p_f_bv_reltio_sitedetails FOLDER = '/henry' AS SELECT test1_alm_u_test2_ess_u_test_emcp.assetid AS assetid, test1_alm_u_test2_ess_u_test_emcp.siteid AS siteid, test1_alm_u_test2_ess_u_test_emcp.reltiogoldenid AS reltiogoldenid, p_f_bv_reltio_sitedetails.id AS id, p_f_bv_reltio_sitedetails.name AS name, p_f_bv_reltio_sitedetails.address AS address, p_f_bv_reltio_sitedetails.businesstype AS businesstype, p_f_bv_reltio_sitedetails.phone AS phone, p_f_bv_reltio_sitedetails.website AS website, p_f_bv_reltio_sitedetails.seprimarycontact AS seprimarycontact, p_f_bv_reltio_sitedetails.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails.marketsubsegment AS marketsubsegment, p_f_bv_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, p_f_bv_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2 FROM test1_alm_u_test2_ess_u_test_emcp AS test1_alm_u_test2_ess_u_test_emcp INNER JOIN p_f_bv_reltio_sitedetails AS p_f_bv_reltio_sitedetails ON test1_alm_u_test2_ess_u_test_emcp.reltiogoldenid = p_f_bv_reltio_sitedetails.id ;

ALTER VIEW test1_alm_u_test2_ess_u_test_emcp_j_p_f_bv_reltio_sitedetails
 LAYOUT (test1_alm_u_test2_ess_u_test_emcp = [247, 138, 200, 200], p_f_bv_reltio_sitedetails = [677, 166, 200, 200]);

CREATE OR REPLACE VIEW union_master_assetid_alm_ess_emcp FOLDER = '/3 - integration/api4/v 1.0' AS SELECT id, emcpid, almid, essid, commref, attributes FROM (SELECT attributes, emcpid, almid, commref, id, essid FROM iv_master_assetid_alm EXTENDED UNION ALL SELECT id, emcpid, attributes, commref, essid, almid FROM iv_master_assetid_emcp EXTENDED UNION ALL SELECT essid, id, commref, emcpid, attributes, almid FROM iv_master_assetid_ess);

ALTER VIEW union_master_assetid_alm_ess_emcp
 LAYOUT (iv_master_assetid_alm = [86, 76, 200, 200], iv_master_assetid_emcp = [382, 77, 200, 200], iv_master_assetid_ess = [675, 73, 200, 200]);

CREATE OR REPLACE VIEW union_master_assetid_alm_ess_emcp_new_copy FOLDER = '/henry' AS SELECT id, emcpid, almid, essid, commref, attributes, sourcename, sourceid, reltiogoldenid, description, assetname FROM (SELECT assetname, description, almid, essid, sourcename, id, commref, attributes, emcpid, sourceid, reltiogoldenid FROM bv_master_assetid_alm_new_copy EXTENDED UNION ALL SELECT attributes, id, essid, almid, sourceid, reltiogoldenid, commref, sourcename, emcpid FROM bv_master_assetid_emcp_new_copy EXTENDED UNION ALL SELECT reltiogoldenid, almid, sourceid, commref, id, essid, attributes, sourcename, emcpid FROM bv_master_assetid_ess_new_copy);

ALTER VIEW union_master_assetid_alm_ess_emcp_new_copy
 LAYOUT (bv_master_assetid_alm_new_copy = [82, 85, 200, 200], bv_master_assetid_emcp_new_copy = [358, 87, 200, 200], bv_master_assetid_ess_new_copy = [645, 86, 200, 200]);

CREATE OR REPLACE VIEW union_master_assetid_alm_ess_emcp_v2 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT id, emcpid, almid, essid, commref, attributes, sourcename, sourceid, siteid, description, assetname FROM (SELECT attributes, emcpid, siteid, sourceid, almid, description, sourcename, assetname, essid, id, commref FROM bv_master_assetid_alm_new_v3 EXTENDED UNION ALL SELECT sourceid, almid, emcpid, sourcename, siteid, attributes, id, commref, essid FROM bv_master_assetid_emcp_new_v3 EXTENDED UNION ALL SELECT siteid, emcpid, id, sourcename, commref, essid, almid, sourceid, attributes FROM bv_master_assetid_ess_new_v3);

ALTER VIEW union_master_assetid_alm_ess_emcp_v2
 LAYOUT (bv_master_assetid_alm_new_v3 = [20, 20, 200, 200], bv_master_assetid_emcp_new_v3 = [293, 22, 200, 200], bv_master_assetid_ess_new_v3 = [597, 29, 200, 200]);

CREATE OR REPLACE VIEW f_f_bv_emcp_sitelist_token_formatted_j_sublocation_j_alm FOLDER = '/3 - integration/api2/newdesign' AS SELECT f_f_bv_emcp_sitelist_token_formatted_j_sublocation.id AS id, f_f_bv_emcp_sitelist_token_formatted_j_sublocation.name AS name, f_f_bv_emcp_sitelist_token_formatted_j_sublocation.label AS label, f_f_bv_emcp_sitelist_token_formatted_j_sublocation.alm_siteid AS alm_siteid, f_f_bv_emcp_sitelist_token_formatted_j_sublocation.hierarchy AS hierarchy, bv_dynamodb_dfdev_sites_1.reltiogoldenid AS reltiogoldenid, 'NULL' AS createdby, bv_dynamodb_dfdev_sites_1.description AS description, f_f_bv_emcp_sitelist_token_formatted_j_sublocation.source AS source FROM f_f_bv_emcp_sitelist_token_formatted_j_sublocation AS f_f_bv_emcp_sitelist_token_formatted_j_sublocation INNER JOIN bv_dynamodb_dfdev_sites AS bv_dynamodb_dfdev_sites_1 ON f_f_bv_emcp_sitelist_token_formatted_j_sublocation.alm_siteid = bv_dynamodb_dfdev_sites_1.siteid ;

ALTER VIEW f_f_bv_emcp_sitelist_token_formatted_j_sublocation_j_alm
 LAYOUT (f_f_bv_emcp_sitelist_token_formatted_j_sublocation = [33, 33, 200, 200], bv_dynamodb_dfdev_sites = [306, 51, 200, 200]);

CREATE OR REPLACE VIEW f_union_master_assetid_alm_ess_emcp FOLDER = '/3 - integration/api4/v 1.0' AS SELECT id AS id, emcpid AS emcpid, almid AS almid, essid AS essid, commref AS commref, name AS name, value AS value FROM FLATTEN union_master_assetid_alm_ess_emcp AS v ( v.attributes);

ALTER VIEW f_union_master_assetid_alm_ess_emcp
 LAYOUT (union_master_assetid_alm_ess_emcp = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_usage_energy_u_emcp_usage_power_j_subloc FOLDER = '/3 - integration/api2/newdesign' AS SELECT iv_emcp_usage_energy_u_emcp_usage_power.id AS id, iv_emcp_usage_energy_u_emcp_usage_power.name AS name, 'NULL' AS createdby, 'NULL' AS description, 'EMCP' AS source, p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.hierarchy AS hierarchy, iv_emcp_usage_energy_u_emcp_usage_power.usage AS usage, iv_emcp_usage_energy_u_emcp_usage_power.starttime AS starttime, iv_emcp_usage_energy_u_emcp_usage_power.endtime AS endtime FROM iv_emcp_usage_energy_u_emcp_usage_power AS iv_emcp_usage_energy_u_emcp_usage_power NESTED PARALLEL LEFT OUTER JOIN 10 p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids AS p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids ON iv_emcp_usage_energy_u_emcp_usage_power.id = p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids.localsiteid ;

ALTER VIEW iv_emcp_usage_energy_u_emcp_usage_power_j_subloc
 LAYOUT (iv_emcp_usage_energy_u_emcp_usage_power = [38, 5, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_j_master_sublocationids = [372, 24, 200, 200]);

CREATE OR REPLACE VIEW iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage FOLDER = '/3 - integration/api2/newdesign' AS SELECT id, name, accounts, metrics, usage, starttime, endtime, usagetomonth, usagefrommonth, metricenddate, metricbegindate FROM (SELECT name, endtime, usage, starttime, id FROM iv_emcp_usage_energy_u_emcp_usage_power EXTENDED UNION ALL SELECT usagetomonth, sitename AS name, metrics, usage, siteid AS id, metricenddate, usagefrommonth, accounts, metricbegindate FROM p_f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage);

ALTER VIEW iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage
 LAYOUT (iv_emcp_usage_energy_u_emcp_usage_power = [20, 20, 200, 200], p_f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage = [344, 29, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_mastersite_reltiosite_v2_1 FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.id AS id, p_f_bv_reltio_sitedetails_formatted_1_v2_1.name AS name, p_f_bv_reltio_sitedetails_formatted_1_v2_1.createdby AS createdby, p_f_bv_reltio_sitedetails_formatted_1_v2_1.address AS address, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.siteid AS siteid, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.source AS source, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.description AS description, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.sublocationid AS sublocationid, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.publishercode AS publishercode, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.divisionname AS divisionname, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.label AS label, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.emcpid AS emcpid, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.almsiteid AS almsiteid, iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.reltiogoldenid AS reltiogoldenid, p_f_bv_reltio_sitedetails_formatted_1_v2_1.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_formatted_1_v2_1.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_formatted_1_v2_1.sitegoldenid AS sitegoldenid, p_f_bv_reltio_sitedetails_formatted_1_v2_1.p_id AS p_id, userid FROM iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1 AS iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy NESTED PARALLEL INNER JOIN 25 p_f_bv_reltio_sitedetails_formatted_1_v2_1 AS p_f_bv_reltio_sitedetails_formatted_1_v2_1 ON iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1_copy.reltiogoldenid = p_f_bv_reltio_sitedetails_formatted_1_v2_1.p_id  WHERE p_f_bv_reltio_sitedetails_formatted_1_v2_1.createdby = userid USING PARAMETERS ( userid : text);

ALTER VIEW iv_ess_emcp_alm_mastersite_reltiosite_v2_1
 LAYOUT (iv_ess_emcp_alm_union_v2_1_j_bv_dynamodb_dfdev_master_siteid_v2_1 = [20, 20, 200, 200], p_f_bv_reltio_sitedetails_formatted_1_v2_1 = [401, 22, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_new_j_bv_product_attributes FOLDER = '/3 - integration/api3/postgres' (
    imageurl (sourcetypedecimals = '0', sourcetyperadix = '10', sourcetypesize = '2147483647', sourcetypeid = '12')
 )
 AS SELECT iv_ess_emcp_alm_new.siteid AS siteid, iv_ess_emcp_alm_new.name AS name, iv_ess_emcp_alm_new.serialnumber AS serialnumber, iv_ess_emcp_alm_new.localsiteid AS localsiteid, iv_ess_emcp_alm_new.assetdescription AS assetdescription, iv_ess_emcp_alm_new.source AS source, iv_ess_emcp_alm_new.reference AS reference, iv_ess_emcp_alm_new.label AS label, iv_ess_emcp_alm_new.parentid AS parentid, case WHEN (sourceimageurl = NULL) THEN (('https://download.schneider-electric.com/files?p_Doc_Ref='||picturedocumentreference)||'&p_File_Type=rendition_288_png&default_image=DefaultProductImage.png') ELSE sourceimageurl END AS imageurl, case WHEN (sourcebrand = NULL) THEN brand ELSE sourcebrand END AS brand, case WHEN (sourcerange = NULL) THEN devicerange ELSE sourcerange END AS range, case WHEN (sourcedescription = NULL) THEN shortdescription ELSE sourcedescription END AS description, iv_ess_emcp_alm_new.iv_emcp_alm_masterid_id AS id FROM iv_ess_emcp_alm_new AS iv_ess_emcp_alm_new NESTED ORDERED LEFT OUTER JOIN bv_product_attributes AS bv_product_attributes ON iv_ess_emcp_alm_new.reference = bv_product_attributes.commref ;

ALTER VIEW iv_ess_emcp_alm_new_j_bv_product_attributes
 LAYOUT (iv_ess_emcp_alm_new = [20, 20, 200, 200], bv_product_attributes = [419, 61, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_new_pim FOLDER = '/3 - integration/api3/v 1.0' AS SELECT iv_ess_emcp_alm_new.siteid AS siteid, iv_ess_emcp_alm_new.name AS name, iv_ess_emcp_alm_new.serialnumber AS serialnumber, iv_ess_emcp_alm_new.assetdescription AS assetdescription, iv_ess_emcp_alm_new.source AS source, iv_ess_emcp_alm_new.label AS label, case WHEN (pimbrand = NULL) THEN sourcebrand ELSE pimbrand END AS brand, iv_ess_emcp_alm_new.reference AS reference, case WHEN (pimrange = NULL) THEN sourcerange ELSE pimrange END AS range, iv_ess_emcp_alm_new.sourceimageurl AS imageurl, case WHEN (pimdescription = NULL) THEN sourcedescription ELSE pimdescription END AS description, iv_ess_emcp_alm_new.localsiteid AS localsiteid, iv_ess_emcp_alm_new.parentid AS parentid, iv_ess_emcp_alm_new.iv_emcp_alm_masterid_id AS id, iv_ess_emcp_alm_new.sourceid AS sourceid FROM iv_ess_emcp_alm_new AS iv_ess_emcp_alm_new NESTED PARALLEL ORDERED LEFT OUTER JOIN 100 bv_almsit_info_product_data_attributes_j_alm_app_token AS bv_almsit_info_product_data_attributes_j_alm_app_token ON iv_ess_emcp_alm_new.reference = bv_almsit_info_product_data_attributes_j_alm_app_token.commref ;

ALTER VIEW iv_ess_emcp_alm_new_pim
 LAYOUT (iv_ess_emcp_alm_new = [19, 20, 200, 200], bv_almsit_info_product_data_attributes_j_alm_app_token = [409, 21, 200, 200]);

CREATE OR REPLACE VIEW iv_ess_emcp_alm_new_pim_new FOLDER = '/3 - integration/api3/v 1.0' AS SELECT iv_ess_emcp_alm_new.siteid AS siteid, iv_ess_emcp_alm_new.name AS name, iv_ess_emcp_alm_new.serialnumber AS serialnumber, iv_ess_emcp_alm_new.assetdescription AS assetdescription, iv_ess_emcp_alm_new.source AS source, iv_ess_emcp_alm_new.label AS label, case WHEN (pimbrand = NULL) THEN sourcebrand ELSE pimbrand END AS brand, iv_ess_emcp_alm_new.reference AS reference, case WHEN (pimrange = NULL) THEN sourcerange ELSE pimrange END AS range, iv_ess_emcp_alm_new.sourceimageurl AS imageurl, case WHEN (pimdescription = NULL) THEN sourcedescription ELSE pimdescription END AS description, iv_ess_emcp_alm_new.localsiteid AS localsiteid, iv_ess_emcp_alm_new.parentid AS parentid, iv_ess_emcp_alm_new.iv_emcp_alm_masterid_id AS id, iv_ess_emcp_alm_new.sourceid AS sourceid FROM iv_ess_emcp_alm_new AS iv_ess_emcp_alm_new NESTED PARALLEL LEFT OUTER JOIN 100 p_bv_alm_dynamodb_productdata AS p_bv_alm_dynamodb_productdata ON iv_ess_emcp_alm_new.reference = p_bv_alm_dynamodb_productdata.commref ;

ALTER VIEW iv_ess_emcp_alm_new_pim_new
 LAYOUT (iv_ess_emcp_alm_new = [71, 29, 200, 200], p_bv_alm_dynamodb_productdata = [410, 29, 200, 200]);

CREATE OR REPLACE VIEW iv_final_emcp_alm_ess_masterid_with_reltiosite FOLDER = '/3 - integration/api1/archive/v2.0' AS SELECT iv_final_union_v2.id AS id, p_f_bv_reltio_sitedetails_formatted_1_v2.name AS name, p_f_bv_reltio_sitedetails_formatted_1_v2.address AS address, iv_final_union_v2.description AS description, p_f_bv_reltio_sitedetails_formatted_1_v2.createdby AS createdby, iv_final_union_v2.label AS label, p_f_bv_reltio_sitedetails_formatted_1_v2.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_formatted_1_v2.marketsegment AS marketsegment, iv_final_union_v2.sublocationid AS sublocationid, iv_final_union_v2.source AS source, iv_final_union_v2.source_2 AS source_2, iv_final_union_v2.source_3 AS source_3, userid FROM iv_final_union_v2 AS iv_final_union_v2 NESTED PARALLEL INNER JOIN 50 p_f_bv_reltio_sitedetails_formatted_1_v2 AS p_f_bv_reltio_sitedetails_formatted_1_v2 ON iv_final_union_v2.reltiogoldenid = p_f_bv_reltio_sitedetails_formatted_1_v2.p_id  WHERE (p_f_bv_reltio_sitedetails_formatted_1_v2.createdby = userid OR iv_final_union_v2.source = 'ESS' OR iv_final_union_v2.source = 'EMCP') USING PARAMETERS ( userid : text);

ALTER VIEW iv_final_emcp_alm_ess_masterid_with_reltiosite
 LAYOUT (iv_final_union_v2 = [20, 20, 200, 200], p_f_bv_reltio_sitedetails_formatted_1_v2 = [353, 28, 200, 200]);

CREATE OR REPLACE VIEW iv_sitelist_alm_ess_emcp FOLDER = '/3 - integration/api1/archive' AS SELECT p_f_bv_reltio_sitedetails_formatted_1.p_id AS id, p_f_bv_reltio_sitedetails_formatted_1.name AS name, iv_sitelist_alm_ess_emcp_union.customername AS customername, p_f_bv_reltio_sitedetails_formatted_1.address AS address, iv_sitelist_alm_ess_emcp_union.description AS description, iv_sitelist_alm_ess_emcp_union.createdby AS createdby, iv_sitelist_alm_ess_emcp_union.label AS label, p_f_bv_reltio_sitedetails_formatted_1.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_formatted_1.marketsegment AS marketsegment, iv_sitelist_alm_ess_emcp_union.sublocationid AS sublocationid, iv_sitelist_alm_ess_emcp_union.source AS source, iv_sitelist_alm_ess_emcp_union.source_2 AS source_2, iv_sitelist_alm_ess_emcp_union.source_3 AS source_3 FROM iv_sitelist_alm_ess_emcp_union AS iv_sitelist_alm_ess_emcp_union NESTED PARALLEL ORDERED INNER JOIN 25 p_f_bv_reltio_sitedetails_formatted_1 AS p_f_bv_reltio_sitedetails_formatted_1 ON iv_sitelist_alm_ess_emcp_union.id = p_f_bv_reltio_sitedetails_formatted_1.p_id ;

ALTER VIEW iv_sitelist_alm_ess_emcp
 LAYOUT (iv_sitelist_alm_ess_emcp_union = [20, 20, 200, 200], p_f_bv_reltio_sitedetails_formatted_1 = [398, 35, 200, 200]);

CREATE OR REPLACE VIEW p_f_bv_reltio_sitedetails_formatted_1_v2_1_j_iv_final_masterid_emcp_alm_ess_without_reltiosite FOLDER = '/3 - integration/api1/archive/v2.1' AS SELECT p_f_bv_reltio_sitedetails_formatted_1_v2_1.createdby AS createdby, p_f_bv_reltio_sitedetails_formatted_1_v2_1.name AS name, p_f_bv_reltio_sitedetails_formatted_1_v2_1.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_formatted_1_v2_1.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_formatted_1_v2_1.sitegoldenid AS sitegoldenid, p_f_bv_reltio_sitedetails_formatted_1_v2_1.address AS address, p_f_bv_reltio_sitedetails_formatted_1_v2_1.p_id AS p_id, iv_final_masterid_emcp_alm_ess_without_reltiosite.id AS id, iv_final_masterid_emcp_alm_ess_without_reltiosite.almid AS almid, iv_final_masterid_emcp_alm_ess_without_reltiosite.emcpid AS emcpid, iv_final_masterid_emcp_alm_ess_without_reltiosite.essid AS essid, iv_final_masterid_emcp_alm_ess_without_reltiosite.reltiogoldenid AS reltiogoldenid, iv_final_masterid_emcp_alm_ess_without_reltiosite.description AS description, iv_final_masterid_emcp_alm_ess_without_reltiosite.sublocationid AS sublocationid, iv_final_masterid_emcp_alm_ess_without_reltiosite.almsiteid AS almsiteid, iv_final_masterid_emcp_alm_ess_without_reltiosite.publishercode AS publishercode, iv_final_masterid_emcp_alm_ess_without_reltiosite.source AS source, iv_final_masterid_emcp_alm_ess_without_reltiosite.emcpsiteid AS emcpsiteid, iv_final_masterid_emcp_alm_ess_without_reltiosite.label AS label, iv_final_masterid_emcp_alm_ess_without_reltiosite.source_2 AS source_2, iv_final_masterid_emcp_alm_ess_without_reltiosite.source_3 AS source_3, iv_final_masterid_emcp_alm_ess_without_reltiosite.siteid AS siteid, iv_final_masterid_emcp_alm_ess_without_reltiosite.divisionname AS divisionname, iv_final_masterid_emcp_alm_ess_without_reltiosite.sitename AS sitename FROM p_f_bv_reltio_sitedetails_formatted_1_v2_1 AS p_f_bv_reltio_sitedetails_formatted_1_v2_1 NESTED PARALLEL LEFT OUTER JOIN 50 iv_final_masterid_emcp_alm_ess_without_reltiosite AS iv_final_masterid_emcp_alm_ess_without_reltiosite ON p_f_bv_reltio_sitedetails_formatted_1_v2_1.p_id = iv_final_masterid_emcp_alm_ess_without_reltiosite.reltiogoldenid ;

ALTER VIEW p_f_bv_reltio_sitedetails_formatted_1_v2_1_j_iv_final_masterid_emcp_alm_ess_without_reltiosite
 LAYOUT (p_f_bv_reltio_sitedetails_formatted_1_v2_1 = [20, 20, 200, 200], iv_final_masterid_emcp_alm_ess_without_reltiosite = [404, 22, 200, 200]);

CREATE OR REPLACE VIEW p_union_master_assetid_alm_ess_emcp_new_copy FOLDER = '/henry' AS SELECT id AS id, max(reltiogoldenid) AS reltiogoldenid, max(description) AS description, max(assetname) AS name FROM union_master_assetid_alm_ess_emcp_new_copy GROUP BY id;

ALTER VIEW p_union_master_assetid_alm_ess_emcp_new_copy
 LAYOUT (union_master_assetid_alm_ess_emcp_new_copy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW reltio_alm_sitedetails FOLDER = '/3 - integration/api2/archive' AS SELECT p_f_bv_reltio_sitedetails_formatted.p_id AS p_id, p_f_bv_reltio_sitedetails_formatted.name AS name, p_f_bv_reltio_sitedetails_formatted.address AS address, p_f_bv_reltio_sitedetails_formatted.createdby AS createdby, p_f_bv_reltio_sitedetails_formatted.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_formatted.customerclassfiicationlevel1 AS customerclassfiicationlevel1, bv_dynamodb_dfdev_sites_1.sublocationid AS sublocationid, bv_dynamodb_dfdev_sites_1.siteid AS siteid, bv_dynamodb_dfdev_sites_1.publishercode AS publishercode, bv_dynamodb_dfdev_sites_1.description AS description FROM p_f_bv_reltio_sitedetails_formatted AS p_f_bv_reltio_sitedetails_formatted NESTED PARALLEL INNER JOIN 20 bv_dynamodb_dfdev_sites AS bv_dynamodb_dfdev_sites_1 ON p_f_bv_reltio_sitedetails_formatted.p_id = bv_dynamodb_dfdev_sites_1.reltiogoldenid ;

ALTER VIEW reltio_alm_sitedetails
 LAYOUT (p_f_bv_reltio_sitedetails_formatted = [20, 20, 200, 200], bv_dynamodb_dfdev_sites = [333, 27, 200, 200]);

CREATE OR REPLACE VIEW reltio_alm_sitedetails_copy FOLDER = '/3 - integration/api2/archive' AS SELECT p_f_bv_reltio_sitedetails_formatted.p_id AS p_id, p_f_bv_reltio_sitedetails_formatted.name AS name, p_f_bv_reltio_sitedetails_formatted.address AS address, p_f_bv_reltio_sitedetails_formatted.createdby AS createdby, p_f_bv_reltio_sitedetails_formatted.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails_formatted.customerclassfiicationlevel1 AS customerclassfiicationlevel1, bv_dynamodb_dfdev_sites_1.publishercode AS publishercode, bv_dynamodb_dfdev_sites_1.description AS description, p_bv_dynamodb_dfdev_sites_1_copy.sublocationid AS sublocationid, p_bv_dynamodb_dfdev_sites_1_copy.siteid AS siteid, p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath AS sublocationpath, p_bv_dynamodb_dfdev_sites_1_copy.locationtype AS locationtype, p_bv_dynamodb_dfdev_sites_1_copy.sublocation_name AS sublocationname, substring(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, case WHEN (regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$', '') = regexp(regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', '')) THEN 0 ELSE (len(regexp(regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$$', ''), '/(?:.(?!/))+$$', ''))+1) END, len(regexp(p_bv_dynamodb_dfdev_sites_1_copy.sublocationpath, '/(?:.(?!/))+$$', ''))) AS parentid FROM (p_f_bv_reltio_sitedetails_formatted AS p_f_bv_reltio_sitedetails_formatted NESTED PARALLEL INNER JOIN 20 bv_dynamodb_dfdev_sites AS bv_dynamodb_dfdev_sites_1 ON p_f_bv_reltio_sitedetails_formatted.p_id = bv_dynamodb_dfdev_sites_1.reltiogoldenid ) NESTED ORDERED INNER JOIN p_bv_dynamodb_dfdev_sites AS p_bv_dynamodb_dfdev_sites_1_copy ON bv_dynamodb_dfdev_sites_1.siteid = p_bv_dynamodb_dfdev_sites_1_copy.siteid  WHERE p_bv_dynamodb_dfdev_sites_1_copy.sublocationid <> p_bv_dynamodb_dfdev_sites_1_copy.siteid;

ALTER VIEW reltio_alm_sitedetails_copy
 LAYOUT (p_f_bv_reltio_sitedetails_formatted = [20, 20, 200, 200], bv_dynamodb_dfdev_sites = [333, 27, 200, 200], p_bv_dynamodb_dfdev_sites = [603, 51, 200, 200]);

CREATE OR REPLACE VIEW reltio_ess_sitedetails FOLDER = '/3 - integration/api2/archive' AS SELECT p_f_bv_reltio_sitedetails_formatted.p_id AS p_id, p_f_bv_reltio_sitedetails_formatted.name AS name, p_f_bv_reltio_sitedetails_formatted.address AS address, p_f_bv_reltio_sitedetails_formatted.createdby AS createdby, p_f_bv_reltio_sitedetails_formatted.customerclassfiicationlevel1 AS customerclassfiicationlevel1, p_f_bv_reltio_sitedetails_formatted.marketsegment AS marketsegment, bv_csv_sitelist.client AS customername, bv_csv_sitelist.site AS site, bv_csv_sitelist.siteid_0 AS siteid, 'ESS' AS source FROM p_f_bv_reltio_sitedetails_formatted AS p_f_bv_reltio_sitedetails_formatted INNER JOIN bv_csv_sitelist AS bv_csv_sitelist ON p_f_bv_reltio_sitedetails_formatted.p_id = bv_csv_sitelist.reltioid ;

ALTER VIEW reltio_ess_sitedetails
 LAYOUT (p_f_bv_reltio_sitedetails_formatted = [20, 20, 200, 200], bv_csv_sitelist = [390, 29, 200, 200]);

CREATE OR REPLACE VIEW union_alm_emcp_ess FOLDER = '/3 - integration/api2/newdesign' AS SELECT reltiogoldenid, createdby, siteid, name, hierarchy, source, description FROM (SELECT siteid, reltiogoldenid, description, source, name, hierarchy, createdby FROM p_bv_dynamodb_dfdev_sites_j_sublocation EXTENDED UNION ALL SELECT source, description, reltiogoldenid, name, createdby, id AS siteid, hierarchy FROM f_bv_emcp_sitelist_token_formatted_j_sublocationids EXTENDED UNION ALL SELECT siteid, createdby, source, reltiogoldenid, sitename AS name FROM f_bv_ess_site_list_api_copy_j_bv_dynamodb_dfdev_master_siteid);

ALTER VIEW union_alm_emcp_ess
 LAYOUT (p_bv_dynamodb_dfdev_sites_j_sublocation = [20, 20, 200, 200], f_bv_emcp_sitelist_token_formatted_j_sublocationids = [278, 48, 200, 200], f_bv_ess_site_list_api_copy_j_bv_dynamodb_dfdev_master_siteid = [567, 68, 200, 200]);

CREATE OR REPLACE VIEW union_master_assetid_alm_ess_emcp_v2_reltioid FOLDER = '/3 - integration/api4/v 2.0' AS SELECT union_master_assetid_alm_ess_emcp_v3.id AS id, union_master_assetid_alm_ess_emcp_v3.emcpid AS emcpid, union_master_assetid_alm_ess_emcp_v3.almid AS almid, union_master_assetid_alm_ess_emcp_v3.essid AS essid, union_master_assetid_alm_ess_emcp_v3.commref AS commref, union_master_assetid_alm_ess_emcp_v3.attributes AS attributes, union_master_assetid_alm_ess_emcp_v3.sourcename AS sourcename, union_master_assetid_alm_ess_emcp_v3.sourceid AS sourceid, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, union_master_assetid_alm_ess_emcp_v3.description AS description, union_master_assetid_alm_ess_emcp_v3.assetname AS assetname FROM union_master_assetid_alm_ess_emcp_v2 AS union_master_assetid_alm_ess_emcp_v3 LEFT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON (union_master_assetid_alm_ess_emcp_v3.siteid = bv_dynamodb_dfdev_master_siteid.almid OR union_master_assetid_alm_ess_emcp_v3.siteid = bv_dynamodb_dfdev_master_siteid.emcpid OR union_master_assetid_alm_ess_emcp_v3.siteid = bv_dynamodb_dfdev_master_siteid.essid) ;

ALTER VIEW union_master_assetid_alm_ess_emcp_v2_reltioid
 LAYOUT (union_master_assetid_alm_ess_emcp_v2 = [20, 20, 200, 200], bv_dynamodb_dfdev_master_siteid = [362, 24, 200, 200]);

CREATE OR REPLACE VIEW alm_emcp_ess_union FOLDER = '/3 - integration/api2/newdesign' AS SELECT createdby, siteid, name, reltiogoldenid, hierarchy, description, description AS description_2, source FROM (SELECT siteid, reltiogoldenid, description, source, name, hierarchy, createdby FROM p_bv_dynamodb_dfdev_sites_j_sublocation EXTENDED UNION ALL SELECT reltiogoldenid, source, name, id AS siteid, createdby, hierarchy, description FROM f_f_bv_emcp_sitelist_token_formatted_j_sublocation_j_alm EXTENDED UNION ALL SELECT userid AS createdby, siteid_0 AS siteid, reltioid AS reltiogoldenid, site AS name, source FROM p_bv_csv_sitelist);

ALTER VIEW alm_emcp_ess_union
 LAYOUT (p_bv_dynamodb_dfdev_sites_j_sublocation = [20, 20, 200, 200], f_f_bv_emcp_sitelist_token_formatted_j_sublocation_j_alm = [302, 46, 200, 200], p_bv_csv_sitelist = [568, 62, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_emcp_ess_union_norel FOLDER = '/3 - integration/api2/newdesign' AS SELECT siteid, name, createdby, description, source, hierarchy, accounts, metrics, usage, starttime, endtime, usagetomonth, usagefrommonth, metricenddate, metricbegindate FROM (SELECT hierarchy, name, source, createdby, siteid, description FROM p_alm_data_j_sublocation EXTENDED UNION ALL SELECT id AS siteid, usage, hierarchy, endtime, createdby, name, source, starttime, description FROM iv_emcp_usage_energy_u_emcp_usage_power_j_subloc EXTENDED UNION ALL SELECT usagetomonth, sitename AS name, metrics, createdby, description, usage, siteid, metricenddate, usagefrommonth, accounts, metricbegindate, source FROM p_f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage);

ALTER VIEW iv_alm_emcp_ess_union_norel
 LAYOUT (p_alm_data_j_sublocation = [20, 20, 200, 200], iv_emcp_usage_energy_u_emcp_usage_power_j_subloc = [297, 40, 200, 200], p_f_f_f_iv_ess_site_list_j_accountist_j_metricdata_j_costusage = [626, 47, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_u_emcp_u_ess_norel FOLDER = '/3 - integration/api2/v2.0' AS SELECT siteid, name, createdby, description, source, hierarchy, accounts, metrics, usage, starttime, endtime FROM (SELECT hierarchy, name, source, createdby, siteid, description FROM p_alm_data_j_sublocation EXTENDED UNION ALL SELECT id AS siteid, usage, hierarchy, endtime, createdby, name, source, starttime, description FROM iv_emcp_usage_energy_u_emcp_usage_power_j_subloc EXTENDED UNION ALL SELECT accounts, usage, metrics, siteid, description, createdby, sitename AS name, end_time AS endtime, start_time AS starttime, source FROM iv_ess_site_list_j_accountist_j_metricdata_j_usage);

ALTER VIEW iv_alm_u_emcp_u_ess_norel
 LAYOUT (p_alm_data_j_sublocation = [20, 20, 200, 200], iv_emcp_usage_energy_u_emcp_usage_power_j_subloc = [337, 25, 200, 200], iv_ess_site_list_j_accountist_j_metricdata_j_usage = [627, 40, 200, 200]);

CREATE OR REPLACE VIEW p_f_union_master_assetid_alm_ess_emcp FOLDER = '/3 - integration/api4/v 1.0' AS SELECT id AS id, emcpid AS emcpid, almid AS almid, essid AS essid, commref AS commref, nest(name, value) AS attributes FROM f_union_master_assetid_alm_ess_emcp GROUP BY id, emcpid, almid, essid, commref;

ALTER VIEW p_f_union_master_assetid_alm_ess_emcp
 LAYOUT (f_union_master_assetid_alm_ess_emcp = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_iv_ess_emcp_alm_new_j_bv_product_attributes FOLDER = '/3 - integration/api3/postgres' AS SELECT siteid AS siteid, id AS id, name AS name, serialnumber AS serialnumber, localsiteid AS localsiteid, assetdescription AS description, source AS source, label AS label, parentid AS parentid, register(brand, range, reference, description, imageurl) AS productdetails FROM iv_ess_emcp_alm_new_j_bv_product_attributes GROUP BY siteid, id, name, serialnumber, localsiteid, assetdescription, source, reference, label, parentid, imageurl, brand, range, description;

ALTER VIEW p_iv_ess_emcp_alm_new_j_bv_product_attributes
 LAYOUT (iv_ess_emcp_alm_new_j_bv_product_attributes = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_iv_ess_emcp_alm_new_pim FOLDER = '/3 - integration/api3/v 1.0' AS SELECT register(brand, range, reference, description, imageurl) AS productdetails, siteid AS siteid, id AS id, name AS name, serialnumber AS serialnumber, description AS description, source AS source, label AS label, localsiteid AS localsiteid, parentid AS parentid, sourceid AS sourceid FROM iv_ess_emcp_alm_new_pim_new GROUP BY siteid, name, serialnumber, assetdescription, source, label, brand, reference, range, imageurl, description, localsiteid, parentid, id, sourceid;

ALTER VIEW p_iv_ess_emcp_alm_new_pim
 LAYOUT (iv_ess_emcp_alm_new_pim_new = [201, 99, 200, 200]);

CREATE OR REPLACE VIEW p_iv_ess_emcp_alm_new_pim_copy FOLDER = '/3 - integration/api3/v 1.0' AS SELECT register(brand, range, reference, description, imageurl) AS productdetails, siteid AS siteid, id AS id, name AS name, serialnumber AS serialnumber, assetdescription AS description, source AS source, label AS label, localsiteid AS localsiteid, parentid AS parentid, sourceid AS sourceid FROM iv_ess_emcp_alm_new_pim GROUP BY siteid, id, name, serialnumber, assetdescription, source, label, brand, reference, range, imageurl, description, localsiteid, parentid, sourceid;

ALTER VIEW p_iv_ess_emcp_alm_new_pim_copy
 LAYOUT (iv_ess_emcp_alm_new_pim = [295, 118, 200, 200]);

CREATE OR REPLACE VIEW p_reltio_alm_sitedetails_copy2 FOLDER = '/3 - integration/api2/archive' AS SELECT p_id AS p_id, name AS name, address AS address, createdby AS createdby, marketsegment AS marketsegment, customerclassfiicationlevel1 AS customerclassfiicationlevel1, description AS description, siteid AS siteid, nest(sublocationid, locationtype, sublocationname, parentid) AS hierarchy, 'ALM' AS source FROM reltio_alm_sitedetails_copy GROUP BY p_id, name, address, createdby, marketsegment, customerclassfiicationlevel1, publishercode, description, siteid;

ALTER VIEW p_reltio_alm_sitedetails_copy2
 LAYOUT (reltio_alm_sitedetails_copy = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_union_master_assetid_alm_ess_emcp_v2_reltioid FOLDER = '/3 - integration/api4/v 2.0' AS SELECT id AS id, max(assetname) AS assetname, max(description) AS description, max(reltiogoldenid) AS reltiogoldenid FROM union_master_assetid_alm_ess_emcp_v2_reltioid GROUP BY id;

ALTER VIEW p_union_master_assetid_alm_ess_emcp_v2_reltioid
 LAYOUT (union_master_assetid_alm_ess_emcp_v2_reltioid = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW reltio_emcp_alm_sitedetails FOLDER = '/3 - integration/api2/archive' AS SELECT reltio_sitedetails_formatted_j_alm_dynamodb_sites.p_id AS p_id, reltio_sitedetails_formatted_j_alm_dynamodb_sites.name AS name, reltio_sitedetails_formatted_j_alm_dynamodb_sites.address AS address, reltio_sitedetails_formatted_j_alm_dynamodb_sites.createdby AS createdby, reltio_sitedetails_formatted_j_alm_dynamodb_sites.marketsegment AS marketsegment, reltio_sitedetails_formatted_j_alm_dynamodb_sites.customerclassfiicationlevel1 AS customerclassfiicationlevel1, reltio_sitedetails_formatted_j_alm_dynamodb_sites.sublocationid AS sublocationid, reltio_sitedetails_formatted_j_alm_dynamodb_sites.publishercode AS publishercode, reltio_sitedetails_formatted_j_alm_dynamodb_sites.description AS description, f_f_bv_emcp_sitelist_token_formatted.label AS label, f_f_bv_emcp_sitelist_token_formatted.alm_siteid AS alm_siteid, reltio_sitedetails_formatted_j_alm_dynamodb_sites.siteid AS siteid, f_f_bv_emcp_sitelist_token_formatted.id AS id, f_f_bv_emcp_sitelist_token_formatted.source AS source FROM reltio_alm_sitedetails AS reltio_sitedetails_formatted_j_alm_dynamodb_sites NESTED PARALLEL LEFT OUTER JOIN 20 f_f_bv_emcp_sitelist_token_formatted AS f_f_bv_emcp_sitelist_token_formatted ON reltio_sitedetails_formatted_j_alm_dynamodb_sites.siteid = f_f_bv_emcp_sitelist_token_formatted.alm_siteid ;

ALTER VIEW reltio_emcp_alm_sitedetails
 LAYOUT (reltio_alm_sitedetails = [20, 20, 200, 200], f_f_bv_emcp_sitelist_token_formatted = [380, 35, 200, 200]);

CREATE OR REPLACE VIEW reltio_emcp_alm_sitedetails_copy FOLDER = '/3 - integration/api2/archive' AS SELECT reltio_sitedetails_formatted_j_alm_dynamodb_sites.p_id AS p_id, reltio_sitedetails_formatted_j_alm_dynamodb_sites.name AS name, reltio_sitedetails_formatted_j_alm_dynamodb_sites.address AS address, reltio_sitedetails_formatted_j_alm_dynamodb_sites.createdby AS createdby, reltio_sitedetails_formatted_j_alm_dynamodb_sites.marketsegment AS marketsegment, reltio_sitedetails_formatted_j_alm_dynamodb_sites.customerclassfiicationlevel1 AS customerclassfiicationlevel1, reltio_sitedetails_formatted_j_alm_dynamodb_sites.description AS description, 'EMCP' AS source, p_f_f_bv_emcp_assetlist_emcp_token_copy.hierarchy AS hierarchy, f_f_bv_emcp_sitelist_token_formatted.id AS siteid, f_f_bv_emcp_sitelist_token_formatted.source AS source_2 FROM (reltio_alm_sitedetails AS reltio_sitedetails_formatted_j_alm_dynamodb_sites NESTED PARALLEL LEFT OUTER JOIN 20 f_f_bv_emcp_sitelist_token_formatted AS f_f_bv_emcp_sitelist_token_formatted ON reltio_sitedetails_formatted_j_alm_dynamodb_sites.siteid = f_f_bv_emcp_sitelist_token_formatted.alm_siteid ) INNER JOIN p_f_f_bv_emcp_assetlist_emcp_token_copy AS p_f_f_bv_emcp_assetlist_emcp_token_copy ON f_f_bv_emcp_sitelist_token_formatted.id = p_f_f_bv_emcp_assetlist_emcp_token_copy.localsiteid ;

ALTER VIEW reltio_emcp_alm_sitedetails_copy
 LAYOUT (reltio_alm_sitedetails = [20, 20, 200, 200], f_f_bv_emcp_sitelist_token_formatted = [380, 35, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_copy = [647, 64, 200, 200]);

CREATE OR REPLACE VIEW union_master_assetid_alm_ess_emcp_new_copy_j_p_union_master_assetid_alm_ess_emcp_new_copy FOLDER = '/henry' AS SELECT union_master_assetid_alm_ess_emcp_new_copy.id AS id, union_master_assetid_alm_ess_emcp_new_copy.emcpid AS emcpid, union_master_assetid_alm_ess_emcp_new_copy.almid AS almid, union_master_assetid_alm_ess_emcp_new_copy.essid AS essid, union_master_assetid_alm_ess_emcp_new_copy.commref AS commref, p_union_master_assetid_alm_ess_emcp_new_copy.reltiogoldenid AS reltiogoldenid, p_union_master_assetid_alm_ess_emcp_new_copy.description AS description, p_union_master_assetid_alm_ess_emcp_new_copy.name AS assetname, nest(union_master_assetid_alm_ess_emcp_new_copy.attributes) AS attributes_array, nest(union_master_assetid_alm_ess_emcp_new_copy.sourceid, union_master_assetid_alm_ess_emcp_new_copy.sourcename) AS sourcereferences FROM union_master_assetid_alm_ess_emcp_new_copy AS union_master_assetid_alm_ess_emcp_new_copy NESTED INNER JOIN p_union_master_assetid_alm_ess_emcp_new_copy AS p_union_master_assetid_alm_ess_emcp_new_copy ON union_master_assetid_alm_ess_emcp_new_copy.id = p_union_master_assetid_alm_ess_emcp_new_copy.id  GROUP BY union_master_assetid_alm_ess_emcp_new_copy.id, union_master_assetid_alm_ess_emcp_new_copy.emcpid, union_master_assetid_alm_ess_emcp_new_copy.almid, union_master_assetid_alm_ess_emcp_new_copy.essid, union_master_assetid_alm_ess_emcp_new_copy.commref, p_union_master_assetid_alm_ess_emcp_new_copy.id, p_union_master_assetid_alm_ess_emcp_new_copy.reltiogoldenid, p_union_master_assetid_alm_ess_emcp_new_copy.description, p_union_master_assetid_alm_ess_emcp_new_copy.name;

ALTER VIEW union_master_assetid_alm_ess_emcp_new_copy_j_p_union_master_assetid_alm_ess_emcp_new_copy
 LAYOUT (union_master_assetid_alm_ess_emcp_new_copy = [20, 20, 200, 200], p_union_master_assetid_alm_ess_emcp_new_copy = [301, 20, 200, 200]);

CREATE OR REPLACE VIEW asset_parentid FOLDER = '/3 - integration/api3/archive' AS SELECT p_iv_ess_emcp_alm_new_j_bv_product_attributes.siteid AS siteid, p_iv_ess_emcp_alm_new_j_bv_product_attributes.id AS id, p_iv_ess_emcp_alm_new_j_bv_product_attributes.name AS name, p_iv_ess_emcp_alm_new_j_bv_product_attributes.serialnumber AS serialnumber, p_iv_ess_emcp_alm_new_j_bv_product_attributes.localsiteid AS localsiteid, p_iv_ess_emcp_alm_new_j_bv_product_attributes.description AS description, p_iv_ess_emcp_alm_new_j_bv_product_attributes.source AS source, p_iv_ess_emcp_alm_new_j_bv_product_attributes.label AS label, case WHEN (ds_dynamodb_dfe_dev_assetid.id = NULL) THEN bv_dynamodb_dfdev_master_sublocationids.id ELSE ds_dynamodb_dfe_dev_assetid.id END AS parentidnew, p_iv_ess_emcp_alm_new_j_bv_product_attributes.productdetails AS productdetails, bv_dynamodb_dfdev_master_sublocationids.id AS sid, ds_dynamodb_dfe_dev_assetid.id AS aid, p_iv_ess_emcp_alm_new_j_bv_product_attributes.parentid AS parentid FROM (p_iv_ess_emcp_alm_new_j_bv_product_attributes AS p_iv_ess_emcp_alm_new_j_bv_product_attributes LEFT OUTER JOIN bv_dynamodb_dfdev_master_sublocationids AS bv_dynamodb_dfdev_master_sublocationids ON p_iv_ess_emcp_alm_new_j_bv_product_attributes.parentid = bv_dynamodb_dfdev_master_sublocationids.emcpid ) LEFT OUTER JOIN bv_dynamodb_dfe_dev_assetid AS ds_dynamodb_dfe_dev_assetid ON p_iv_ess_emcp_alm_new_j_bv_product_attributes.parentid = ds_dynamodb_dfe_dev_assetid.emcpid ;

ALTER VIEW asset_parentid
 LAYOUT (p_iv_ess_emcp_alm_new_j_bv_product_attributes = [20, 20, 200, 200], bv_dynamodb_dfdev_master_sublocationids = [447, 13, 200, 200], bv_dynamodb_dfe_dev_assetid = [507, 108, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_emcp_ess_union_norel_j_master_siteid_copy FOLDER = '/3 - integration/api2/newdesign' AS SELECT bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, max(alm_emcp_ess_union_norel.description) AS description, 'NULL' AS createdby, nest(alm_emcp_ess_union_norel.source, alm_emcp_ess_union_norel.siteid) AS sourcereference, nest(alm_emcp_ess_union_norel.hierarchy) AS hierarchy, nest(alm_emcp_ess_union_norel.accounts) AS accounts, nest(alm_emcp_ess_union_norel.metrics) AS metrics, nest(alm_emcp_ess_union_norel.usage) AS usage, mastersiteid FROM iv_alm_emcp_ess_union_norel AS alm_emcp_ess_union_norel NESTED REVERSEORDER RIGHT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON (alm_emcp_ess_union_norel.siteid = bv_dynamodb_dfdev_master_siteid.almid OR alm_emcp_ess_union_norel.siteid = bv_dynamodb_dfdev_master_siteid.emcpid OR alm_emcp_ess_union_norel.siteid = bv_dynamodb_dfdev_master_siteid.essid)  WHERE bv_dynamodb_dfdev_master_siteid.id = mastersiteid GROUP BY bv_dynamodb_dfdev_master_siteid.id, bv_dynamodb_dfdev_master_siteid.reltiogoldenid USING PARAMETERS ( mastersiteid : text);

ALTER VIEW iv_alm_emcp_ess_union_norel_j_master_siteid_copy
 LAYOUT (iv_alm_emcp_ess_union_norel = [61, 10, 200, 200], bv_dynamodb_dfdev_master_siteid = [340, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_master_siteid_assets FOLDER = '/3 - integration/api6' AS SELECT bv_dynamodb_dfdev_master_siteid.id AS id, bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, p_iv_ess_emcp_alm_new_pim.id AS asset_id, p_iv_ess_emcp_alm_new_pim.productdetails AS productdetails, p_iv_ess_emcp_alm_new_pim.name AS name, p_iv_ess_emcp_alm_new_pim.serialnumber AS serialnumber, p_iv_ess_emcp_alm_new_pim.description AS description, p_iv_ess_emcp_alm_new_pim.source AS source, p_iv_ess_emcp_alm_new_pim.label AS label, p_iv_ess_emcp_alm_new_pim.localsiteid AS localsiteid, p_iv_ess_emcp_alm_new_pim.parentid AS parentid, p_iv_ess_emcp_alm_new_pim.sourceid AS sourceid FROM bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid NESTED ORDERED LEFT OUTER JOIN p_iv_ess_emcp_alm_new_pim AS p_iv_ess_emcp_alm_new_pim ON bv_dynamodb_dfdev_master_siteid.reltiogoldenid = p_iv_ess_emcp_alm_new_pim.siteid ;

ALTER VIEW iv_master_siteid_assets
 LAYOUT (bv_dynamodb_dfdev_master_siteid = [20, 20, 200, 200], p_iv_ess_emcp_alm_new_pim = [329, 37, 200, 200]);

CREATE OR REPLACE VIEW iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel FOLDER = '/3 - integration/api2/v2.0' AS SELECT bv_dynamodb_dfdev_master_siteid.reltiogoldenid AS reltiogoldenid, 'NULL' AS createdby, max(iv_alm_u_emcp_u_ess_norel.description) AS description, nest(iv_alm_u_emcp_u_ess_norel.siteid, iv_alm_u_emcp_u_ess_norel.source) AS sourcereference, nest(iv_alm_u_emcp_u_ess_norel.hierarchy) AS hierarchy, nest(iv_alm_u_emcp_u_ess_norel.accounts) AS accounts, nest(iv_alm_u_emcp_u_ess_norel.metrics) AS metrics, nest(iv_alm_u_emcp_u_ess_norel.usage) AS usage, iv_alm_u_emcp_u_ess_norel.starttime AS starttime, iv_alm_u_emcp_u_ess_norel.endtime AS endtime, mastersiteid FROM iv_alm_u_emcp_u_ess_norel AS iv_alm_u_emcp_u_ess_norel NESTED REVERSEORDER RIGHT OUTER JOIN bv_dynamodb_dfdev_master_siteid AS bv_dynamodb_dfdev_master_siteid ON (iv_alm_u_emcp_u_ess_norel.siteid = bv_dynamodb_dfdev_master_siteid.almid OR iv_alm_u_emcp_u_ess_norel.siteid = bv_dynamodb_dfdev_master_siteid.emcpid OR iv_alm_u_emcp_u_ess_norel.siteid = bv_dynamodb_dfdev_master_siteid.essid)  WHERE bv_dynamodb_dfdev_master_siteid.id = mastersiteid GROUP BY iv_alm_u_emcp_u_ess_norel.endtime, iv_alm_u_emcp_u_ess_norel.starttime, bv_dynamodb_dfdev_master_siteid.reltiogoldenid, bv_dynamodb_dfdev_master_siteid.id USING PARAMETERS ( mastersiteid : text);

ALTER VIEW iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel
 LAYOUT (iv_alm_u_emcp_u_ess_norel = [19, 39, 200, 200], bv_dynamodb_dfdev_master_siteid = [322, 24, 200, 200]);

CREATE OR REPLACE VIEW p_p_f_union_master_assetid_alm_ess_emcp FOLDER = '/3 - integration/api4/v 1.0' AS SELECT assetid, attributes, almid, essid, emcpid, commref, nest(source, id) AS sourcereferences FROM (SELECT id AS assetid, attributes, almid, essid, emcpid, commref, 'alm' AS source, almid AS id FROM p_f_union_master_assetid_alm_ess_emcp WHERE almid is not null  SQL UNION SELECT id AS assetid, attributes, almid, essid, emcpid, commref, 'ess' AS source, essid AS id FROM p_f_union_master_assetid_alm_ess_emcp WHERE essid is not null  SQL UNION SELECT id AS assetid, attributes, almid, essid, emcpid, commref, 'emcp' AS source, emcpid AS id FROM p_f_union_master_assetid_alm_ess_emcp WHERE emcpid is not null ) GROUP BY assetid, attributes, almid, essid, emcpid, commref CONTEXT ('formatted' = 'yes');

CREATE OR REPLACE VIEW p_p_iv_ess_emcp_alm_new_j_bv_product_attributes FOLDER = '/3 - integration/api3/postgres' AS SELECT siteid AS siteid, nest(id, name, description, productdetails, serialnumber, label, parentid, source) AS assets FROM p_iv_ess_emcp_alm_new_j_bv_product_attributes GROUP BY siteid;

ALTER VIEW p_p_iv_ess_emcp_alm_new_j_bv_product_attributes
 LAYOUT (p_iv_ess_emcp_alm_new_j_bv_product_attributes = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_p_iv_ess_emcp_alm_new_pim FOLDER = '/3 - integration/api3/v 1.0' AS SELECT nest(id, name, description, productdetails, serialnumber, label, parentid, source, sourceid) AS assets, siteid AS siteid FROM p_iv_ess_emcp_alm_new_pim GROUP BY siteid;

ALTER VIEW p_p_iv_ess_emcp_alm_new_pim
 LAYOUT (p_iv_ess_emcp_alm_new_pim = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW reltio_alm_ess_emcp_sitedetails FOLDER = '/3 - integration/api2/archive' AS SELECT id, name, customername, address, createdby, marketsegment, customerclassfiicationlevel1, description, label, site, sublocationid, source AS source FROM (SELECT createdby, customerclassfiicationlevel1, address, publishercode, siteid, marketsegment, sublocationid, p_id AS id, name, description FROM reltio_alm_sitedetails EXTENDED UNION ALL SELECT publishercode, id AS siteid, sublocationid, name, label, createdby, description, address, p_id AS id, marketsegment, customerclassfiicationlevel1, source AS source FROM reltio_emcp_alm_sitedetails EXTENDED UNION ALL SELECT marketsegment, site, name, p_id AS id, customerclassfiicationlevel1, address, createdby, customername, siteid FROM reltio_ess_sitedetails);

ALTER VIEW reltio_alm_ess_emcp_sitedetails
 LAYOUT (reltio_alm_sitedetails = [20, 20, 200, 200], reltio_emcp_alm_sitedetails = [312, 50, 200, 200], reltio_ess_sitedetails = [649, 129, 200, 200]);

CREATE OR REPLACE VIEW reltio_alm_ess_emcp_sitedetails_new FOLDER = '/3 - integration/api2/archive' AS SELECT id, name, address, createdby, marketsegment, customerclassfiicationlevel1, description, siteid, hierarchy, source, source_2 AS source_2 FROM (SELECT hierarchy, p_id AS id, customerclassfiicationlevel1, createdby, name, description, source, marketsegment, siteid, address FROM p_reltio_alm_sitedetails_copy2 EXTENDED UNION ALL SELECT address, p_id AS id, customerclassfiicationlevel1, siteid, createdby, source, name, marketsegment, hierarchy, description, source_2 AS source_2 FROM reltio_emcp_alm_sitedetails_copy EXTENDED UNION ALL SELECT marketsegment, name, source, p_id AS id, customerclassfiicationlevel1, address, createdby, siteid FROM reltio_ess_sitedetails);

ALTER VIEW reltio_alm_ess_emcp_sitedetails_new
 LAYOUT (p_reltio_alm_sitedetails_copy2 = [20, 20, 200, 200], reltio_emcp_alm_sitedetails_copy = [292, 56, 200, 200], reltio_ess_sitedetails = [547, 73, 200, 200]);

CREATE OR REPLACE VIEW union_master_assetid_alm_ess_emcp_v2_final FOLDER = '/3 - integration/api4/v 2.0' AS SELECT union_master_assetid_alm_ess_emcp_v3.id AS id, union_master_assetid_alm_ess_emcp_v3.emcpid AS emcpid, union_master_assetid_alm_ess_emcp_v3.almid AS almid, union_master_assetid_alm_ess_emcp_v3.essid AS essid, union_master_assetid_alm_ess_emcp_v3.commref AS commref, union_master_assetid_alm_ess_emcp_v3.attributes AS attributes, union_master_assetid_alm_ess_emcp_v3.sourcename AS sourcename, union_master_assetid_alm_ess_emcp_v3.sourceid AS sourceid, p_union_master_assetid_alm_ess_emcp_v3_reltioid.assetname AS assetname, p_union_master_assetid_alm_ess_emcp_v3_reltioid.description AS description, p_union_master_assetid_alm_ess_emcp_v3_reltioid.reltiogoldenid AS reltiogoldenid FROM union_master_assetid_alm_ess_emcp_v2 AS union_master_assetid_alm_ess_emcp_v3 INNER JOIN p_union_master_assetid_alm_ess_emcp_v2_reltioid AS p_union_master_assetid_alm_ess_emcp_v3_reltioid ON union_master_assetid_alm_ess_emcp_v3.id = p_union_master_assetid_alm_ess_emcp_v3_reltioid.id ;

ALTER VIEW union_master_assetid_alm_ess_emcp_v2_final
 LAYOUT (union_master_assetid_alm_ess_emcp_v2 = [20, 20, 200, 200], p_union_master_assetid_alm_ess_emcp_v2_reltioid = [325, 20, 200, 200]);

CREATE OR REPLACE VIEW assets FOLDER = '/4 - business views/api4' AS SELECT p_p_f_union_master_assetid_alm_ess_emcp.assetid AS assetid, p_bv_almsit_api_info_attribute_all.name AS name, p_bv_almsit_api_info_attribute_all.description AS description, p_p_f_union_master_assetid_alm_ess_emcp.attributes AS attributes, p_p_p_bv_almsit_api_product_data_all.productdetails AS productdetails, p_bv_almsit_api_info_attribute_all.hierarchy AS hierarchy, p_p_p_p_bv_almsit_api_info_attribute_all.registration AS registration, p_bv_emcp_alarm.alarms AS alarms, p_f_f_p_bv_emcp_timeseries_new.timeseriesdata AS timeseriesdata, p_p_f_union_master_assetid_alm_ess_emcp.sourcereferences AS sourcereferences, p_p_f_union_master_assetid_alm_ess_emcp.almid AS almid, p_p_f_union_master_assetid_alm_ess_emcp.essid AS essid, p_p_f_union_master_assetid_alm_ess_emcp.emcpid AS emcpid, p_p_f_union_master_assetid_alm_ess_emcp.commref AS commref, p_bv_almsit_api_info_attribute_all.createdby AS createdby, p_starttime, p_endtime FROM ((((p_p_f_union_master_assetid_alm_ess_emcp AS p_p_f_union_master_assetid_alm_ess_emcp LEFT OUTER JOIN p_bv_emcp_alarm AS p_bv_emcp_alarm ON p_p_f_union_master_assetid_alm_ess_emcp.emcpid = p_bv_emcp_alarm.assetid ) LEFT OUTER JOIN p_f_f_p_bv_emcp_timeseries_new AS p_f_f_p_bv_emcp_timeseries_new ON p_p_f_union_master_assetid_alm_ess_emcp.emcpid = p_f_f_p_bv_emcp_timeseries_new.assetid ) LEFT OUTER JOIN p_bv_almsit_api_info_attribute_all AS p_bv_almsit_api_info_attribute_all ON p_p_f_union_master_assetid_alm_ess_emcp.almid = p_bv_almsit_api_info_attribute_all.almassetidentifier ) LEFT OUTER JOIN p_p_p_p_bv_almsit_api_info_attribute_all AS p_p_p_p_bv_almsit_api_info_attribute_all ON p_p_f_union_master_assetid_alm_ess_emcp.almid = p_p_p_p_bv_almsit_api_info_attribute_all.almassetidentifier ) LEFT OUTER JOIN p_p_p_bv_almsit_api_product_data_all AS p_p_p_bv_almsit_api_product_data_all ON p_p_f_union_master_assetid_alm_ess_emcp.commref = p_p_p_bv_almsit_api_product_data_all.commref  WHERE (p_bv_emcp_alarm.starttime = p_starttime AND p_bv_emcp_alarm.endtime = p_endtime AND p_f_f_p_bv_emcp_timeseries_new.starttime = p_bv_emcp_alarm.starttime AND p_f_f_p_bv_emcp_timeseries_new.endtime = p_bv_emcp_alarm.endtime) USING PARAMETERS ( p_starttime : text '', p_endtime : text '');

ALTER VIEW assets
 LAYOUT (p_p_f_union_master_assetid_alm_ess_emcp = [2, 112, 200, 200], p_bv_almsit_api_info_attribute_all = [377, 146, 200, 200], p_bv_emcp_alarm = [357, 2, 200, 200], p_f_f_p_bv_emcp_timeseries_new = [377, 66, 200, 200], p_p_p_p_bv_almsit_api_info_attribute_all = [344, 208, 200, 200], p_p_p_bv_almsit_api_product_data_all = [307, 276, 200, 200]);

CREATE OR REPLACE VIEW iv_master_siteid_assets_sublocation FOLDER = '/3 - integration/api6' AS SELECT iv_master_siteid_assets.id AS id, iv_master_siteid_assets.reltiogoldenid AS reltiogoldenid, iv_master_siteid_assets.asset_id AS asset_id, iv_master_siteid_assets.productdetails AS productdetails, iv_master_siteid_assets.name AS name, iv_master_siteid_assets.serialnumber AS serialnumber, iv_master_siteid_assets.description AS description, iv_master_siteid_assets.source AS source, iv_master_siteid_assets.label AS label, iv_master_siteid_assets.localsiteid AS localsiteid, iv_master_siteid_assets.parentid AS parentid, p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.sublocations AS sublocations, iv_master_siteid_assets.sourceid AS sourceid FROM iv_master_siteid_assets AS iv_master_siteid_assets LEFT OUTER JOIN p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid AS p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid ON iv_master_siteid_assets.reltiogoldenid = p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.siteid ;

ALTER VIEW iv_master_siteid_assets_sublocation
 LAYOUT (iv_master_siteid_assets = [20, 20, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid = [359, 30, 200, 200]);

CREATE OR REPLACE VIEW iv_master_siteid_assets_sublocation_copy FOLDER = '/3 - integration/api6/v2.0' AS SELECT iv_master_siteid_assets.id AS id, iv_master_siteid_assets.reltiogoldenid AS reltiogoldenid, iv_master_siteid_assets.asset_id AS asset_id, iv_master_siteid_assets.productdetails AS productdetails, iv_master_siteid_assets.name AS name, iv_master_siteid_assets.serialnumber AS serialnumber, iv_master_siteid_assets.description AS description, iv_master_siteid_assets.source AS source, iv_master_siteid_assets.label AS label, iv_master_siteid_assets.localsiteid AS localsiteid, iv_master_siteid_assets.parentid AS parentid, p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.sublocations AS sublocations, iv_master_siteid_assets.sourceid AS sourceid, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.accounts AS accounts, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.metrics AS metrics, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.usage AS usage, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.starttime AS starttime, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.endtime AS endtime, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.usagetomonth AS usagetomonth, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.usagefrommonth AS usagefrommonth, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.metricenddate AS metricenddate, iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.metricbegindate AS metricbegindate FROM (iv_master_siteid_assets AS iv_master_siteid_assets LEFT OUTER JOIN p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid AS p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid ON iv_master_siteid_assets.reltiogoldenid = p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.siteid ) LEFT OUTER JOIN iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage AS iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage ON iv_master_siteid_assets.localsiteid = iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage.id ;

ALTER VIEW iv_master_siteid_assets_sublocation_copy
 LAYOUT (iv_master_siteid_assets = [16, 98, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid = [354, 5, 200, 200], iv_emcp_usage_u_ess_site_list_j_accountist_j_metricdata_j_costusage = [380, 132, 200, 200]);

CREATE OR REPLACE VIEW iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel FOLDER = '/3 - integration/api6/v2.0' AS SELECT iv_userid_to_customerid_siteid_mapping.userid AS userid, iv_userid_to_customerid_siteid_mapping.customerid AS customerid, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.mastersiteid AS mastersiteid, iv_userid_to_customerid_siteid_mapping.reltiogoldenid AS reltiogoldenid, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.createdby AS createdby, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.description AS description, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.sourcereference AS sourcereference, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.hierarchy AS hierarchy, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.accounts AS accounts, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.metrics AS metrics, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.usage AS usage, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.starttime AS starttime, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.endtime AS endtime FROM iv_userid_to_customerid_siteid_mapping AS iv_userid_to_customerid_siteid_mapping NESTED ORDERED LEFT OUTER JOIN iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel AS iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel ON iv_userid_to_customerid_siteid_mapping.siteid = iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.mastersiteid ;

ALTER VIEW iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel
 LAYOUT (iv_userid_to_customerid_siteid_mapping = [20, 20, 200, 200], iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel = [350, 38, 200, 200]);

CREATE OR REPLACE VIEW p_p_iv_ess_emcp_alm_assetlist_subloc FOLDER = '/3 - integration/api3/v 1.0' AS SELECT p_p_iv_ess_emcp_alm_new_pim.assets AS assets, p_p_iv_ess_emcp_alm_new_pim.siteid AS siteid, p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.sublocations AS sublocations FROM p_p_iv_ess_emcp_alm_new_pim AS p_p_iv_ess_emcp_alm_new_pim LEFT OUTER JOIN p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid AS p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid ON p_p_iv_ess_emcp_alm_new_pim.siteid = p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.siteid ;

ALTER VIEW p_p_iv_ess_emcp_alm_assetlist_subloc
 LAYOUT (p_p_iv_ess_emcp_alm_new_pim = [115, 38, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid = [554, 66, 200, 200]);

CREATE OR REPLACE VIEW p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid FOLDER = '/3 - integration/api3/postgres' AS SELECT p_p_iv_ess_emcp_alm_new_j_bv_product_attributes.siteid AS siteid, p_p_iv_ess_emcp_alm_new_j_bv_product_attributes.assets AS assets, p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.sublocations AS sublocations FROM p_p_iv_ess_emcp_alm_new_j_bv_product_attributes AS p_p_iv_ess_emcp_alm_new_j_bv_product_attributes LEFT OUTER JOIN p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid AS p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid ON p_p_iv_ess_emcp_alm_new_j_bv_product_attributes.siteid = p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.siteid ;

ALTER VIEW p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid
 LAYOUT (p_p_iv_ess_emcp_alm_new_j_bv_product_attributes = [20, 20, 200, 200], p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid = [464, 35, 200, 200]);

CREATE OR REPLACE VIEW p_reltio_alm_ess_emcp_sitedetails_new FOLDER = '/3 - integration/api2/archive' AS SELECT id AS id, name AS name, address AS address, createdby AS createdby, marketsegment AS marketsegment, customerclassfiicationlevel1 AS customerclassfiicationlevel1, nest(source, siteid) AS sourcereferences, nest(hierarchy) AS hierarchy, max(description) AS description, source_2 AS source_2 FROM reltio_alm_ess_emcp_sitedetails_new GROUP BY id, name, address, createdby, marketsegment, customerclassfiicationlevel1, source_2;

ALTER VIEW p_reltio_alm_ess_emcp_sitedetails_new
 LAYOUT (reltio_alm_ess_emcp_sitedetails_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW p_union_master_assetid_alm_ess_emcp_v2_final FOLDER = '/3 - integration/api4/v 2.0' AS SELECT id AS id, emcpid AS emcpid, almid AS almid, essid AS essid, commref AS commref, assetname AS assetname, description AS description, reltiogoldenid AS reltiogoldenid, nest(sourcename, sourceid) AS sourcereferences, nest(attributes) AS attributes_array FROM union_master_assetid_alm_ess_emcp_v2_final GROUP BY id, emcpid, almid, essid, commref, assetname, description, reltiogoldenid;

ALTER VIEW p_union_master_assetid_alm_ess_emcp_v2_final
 LAYOUT (union_master_assetid_alm_ess_emcp_v2_final = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW site_v2 FOLDER = '/3 - integration/api2/v2.0' AS SELECT iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.mastersiteid AS mastersiteid, p_f_bv_reltio_sitedetails.name AS name, p_f_bv_reltio_sitedetails.address AS address, p_f_bv_reltio_sitedetails.businesstype AS businesstype, p_f_bv_reltio_sitedetails.phone AS phone, p_f_bv_reltio_sitedetails.website AS website, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.createdby AS createdby, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.description AS description, p_f_bv_reltio_sitedetails.seprimarycontact AS seprimarycontact, p_f_bv_reltio_sitedetails.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails.marketsubsegment AS marketsubsegment, p_f_bv_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, p_f_bv_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.sourcereference AS sourcereference, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.hierarchy AS hierarchy, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.accounts AS accounts, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.metrics AS metrics, iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.usage AS usage, start_time, end_time FROM iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel AS iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel INNER JOIN p_f_bv_reltio_sitedetails AS p_f_bv_reltio_sitedetails ON iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.reltiogoldenid = p_f_bv_reltio_sitedetails.id  WHERE (iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.starttime = start_time AND iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel.endtime = end_time) USING PARAMETERS ( start_time : text, end_time : text);

ALTER VIEW site_v2
 LAYOUT (iv_master_siteid_j_iv_alm_u_emcp_u_ess_norel = [20, 20, 200, 200], p_f_bv_reltio_sitedetails = [386, 60, 200, 200]);

CREATE OR REPLACE VIEW api3_finalview FOLDER = '/3 - integration/api3/v 1.0' AS SELECT p_p_iv_ess_emcp_alm_assetlist_subloc.siteid AS siteid, f_bv_reltio_sitename.name AS sitename, p_p_iv_ess_emcp_alm_assetlist_subloc.sublocations AS sublocations, p_p_iv_ess_emcp_alm_assetlist_subloc.assets AS assets FROM p_p_iv_ess_emcp_alm_assetlist_subloc AS p_p_iv_ess_emcp_alm_assetlist_subloc NESTED LEFT OUTER JOIN f_bv_reltio_sitename AS f_bv_reltio_sitename ON p_p_iv_ess_emcp_alm_assetlist_subloc.siteid = f_bv_reltio_sitename.siteid ;

ALTER VIEW api3_finalview
 LAYOUT (p_p_iv_ess_emcp_alm_assetlist_subloc = [20, 20, 200, 200], f_bv_reltio_sitename = [406, 27, 200, 200]);

CREATE OR REPLACE VIEW api3_finalview_postgres FOLDER = '/3 - integration/api3/postgres' AS SELECT p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.siteid AS siteid, f_bv_reltio_sitename.name AS sitename, p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.sublocations AS sublocations, p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.assets AS assets FROM p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid AS p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid LEFT OUTER JOIN f_bv_reltio_sitename AS f_bv_reltio_sitename ON p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid.siteid = f_bv_reltio_sitename.siteid ;

ALTER VIEW api3_finalview_postgres
 LAYOUT (p_p_iv_ess_emcp_alm_new_j_bv_product_attributes_j_p_f_f_bv_emcp_assetlist_emcp_token_subloc_siteid = [20, 20, 200, 200], f_bv_reltio_sitename = [465, 21, 200, 200]);

CREATE OR REPLACE VIEW assets_v3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT p_union_master_assetid_alm_ess_emcp_v3_final.id AS id, p_union_master_assetid_alm_ess_emcp_v3_final.assetname AS name, p_union_master_assetid_alm_ess_emcp_v3_final.description AS description, p_union_master_assetid_alm_ess_emcp_v3_final.emcpid AS emcpid, p_union_master_assetid_alm_ess_emcp_v3_final.almid AS almid, p_union_master_assetid_alm_ess_emcp_v3_final.essid AS essid, p_union_master_assetid_alm_ess_emcp_v3_final.commref AS commref, p_union_master_assetid_alm_ess_emcp_v3_final.reltiogoldenid AS reltiogoldenid, p_union_master_assetid_alm_ess_emcp_v3_final.sourcereferences AS sourcereferences, p_union_master_assetid_alm_ess_emcp_v3_final.attributes_array AS attributes_array, p_bv_emcp_alarm.alarms AS alarms, p_f_f_p_bv_emcp_timeseries_new.timeseriesdata AS timeseriesdata, p_p_p_bv_almsit_api_product_data_all.productdetails AS productdetails, p_bv_dynamodb_almsit_hierarchy_new.hierarchy AS hierarchy, p_iv_emcp_asset_site_details.registration AS registration, p_starttime, p_endtime FROM ((((p_union_master_assetid_alm_ess_emcp_v2_final AS p_union_master_assetid_alm_ess_emcp_v3_final LEFT OUTER JOIN p_bv_emcp_alarm AS p_bv_emcp_alarm ON p_union_master_assetid_alm_ess_emcp_v3_final.emcpid = p_bv_emcp_alarm.assetid ) LEFT OUTER JOIN p_f_f_p_bv_emcp_timeseries_new AS p_f_f_p_bv_emcp_timeseries_new ON p_union_master_assetid_alm_ess_emcp_v3_final.emcpid = p_f_f_p_bv_emcp_timeseries_new.assetid ) LEFT OUTER JOIN p_p_p_bv_almsit_api_product_data_all AS p_p_p_bv_almsit_api_product_data_all ON p_union_master_assetid_alm_ess_emcp_v3_final.commref = p_p_p_bv_almsit_api_product_data_all.commref ) NESTED LEFT OUTER JOIN p_bv_dynamodb_almsit_hierarchy_new AS p_bv_dynamodb_almsit_hierarchy_new ON p_union_master_assetid_alm_ess_emcp_v3_final.almid = p_bv_dynamodb_almsit_hierarchy_new.uniqueid ) LEFT OUTER JOIN p_iv_emcp_asset_site_details AS p_iv_emcp_asset_site_details ON p_union_master_assetid_alm_ess_emcp_v3_final.reltiogoldenid = p_iv_emcp_asset_site_details.id  WHERE (p_bv_emcp_alarm.starttime = p_starttime AND p_bv_emcp_alarm.endtime = p_endtime AND p_f_f_p_bv_emcp_timeseries_new.starttime = p_bv_emcp_alarm.starttime AND p_f_f_p_bv_emcp_timeseries_new.endtime = p_bv_emcp_alarm.endtime) USING PARAMETERS ( p_starttime : text '', p_endtime : text '');

ALTER VIEW assets_v3
 LAYOUT (p_union_master_assetid_alm_ess_emcp_v2_final = [84, 73, 200, 200], p_bv_emcp_alarm = [419, 10, 200, 200], p_f_f_p_bv_emcp_timeseries_new = [422, 92, 200, 200], p_p_p_bv_almsit_api_product_data_all = [425, 174, 200, 200], p_bv_dynamodb_almsit_hierarchy_new = [423, 244, 200, 200], p_iv_emcp_asset_site_details = [426, 315, 200, 200]);

CREATE OR REPLACE VIEW f_p_reltio_alm_ess_emcp_sitedetails_new FOLDER = '/3 - integration/api2/archive' AS SELECT id AS id, name AS name, address AS address, createdby AS createdby, marketsegment AS marketsegment, customerclassfiicationlevel1 AS customerclassfiicationlevel1, sourcereferences AS sourcereferences, description AS description, sublocationid AS sublocationid, parentid AS parentid, locationtype AS locationtype, sublocationname AS sublocationname, source_2 AS source_2 FROM FLATTEN p_reltio_alm_ess_emcp_sitedetails_new AS v ( v.hierarchy) ( v.hierarchy.hierarchy);

ALTER VIEW f_p_reltio_alm_ess_emcp_sitedetails_new
 LAYOUT (p_reltio_alm_ess_emcp_sitedetails_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_alm_u_emcp_u_ess_sites_j_reltio_sitedetails FOLDER = '/3 - integration/api6/v2.0' AS SELECT iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.userid AS userid, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.customerid AS customerid, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.mastersiteid AS mastersiteid, p_f_bv_reltio_sitedetails.name AS name, p_f_bv_reltio_sitedetails.address AS address, p_f_bv_reltio_sitedetails.businesstype AS businesstype, p_f_bv_reltio_sitedetails.phone AS phone, p_f_bv_reltio_sitedetails.website AS website, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.createdby AS createdby, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.description AS description, p_f_bv_reltio_sitedetails.seprimarycontact AS seprimarycontact, p_f_bv_reltio_sitedetails.marketsegment AS marketsegment, p_f_bv_reltio_sitedetails.marketsubsegment AS marketsubsegment, p_f_bv_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, p_f_bv_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.sourcereference AS sourcereference, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.hierarchy AS hierarchy, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.accounts AS accounts, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.metrics AS metrics, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.usage AS usage, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.starttime AS starttime, iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.endtime AS endtime FROM iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel AS iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel LEFT OUTER JOIN p_f_bv_reltio_sitedetails AS p_f_bv_reltio_sitedetails ON iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel.reltiogoldenid = p_f_bv_reltio_sitedetails.id ;

ALTER VIEW iv_alm_u_emcp_u_ess_sites_j_reltio_sitedetails
 LAYOUT (iv_userid_to_customerid_siteid_mapping_j_alm_u_emcp_u_ess_norel = [20, 20, 200, 200], p_f_bv_reltio_sitedetails = [320, 38, 200, 200]);

CREATE OR REPLACE VIEW iv_master_siteid_assets_sublocation_j_assets FOLDER = '/3 - integration/api6' AS SELECT iv_master_siteid_assets_sublocation.id AS id, iv_master_siteid_assets_sublocation.reltiogoldenid AS reltiogoldenid, assets.assetid AS assetid, iv_master_siteid_assets_sublocation.serialnumber AS serialnumber, iv_master_siteid_assets_sublocation.source AS source, iv_master_siteid_assets_sublocation.label AS label, iv_master_siteid_assets_sublocation.localsiteid AS localsiteid, iv_master_siteid_assets_sublocation.parentid AS parentid, iv_master_siteid_assets_sublocation.sublocations AS sublocations, assets.name AS name, assets.description AS description, assets.attributes AS attributes, assets.productdetails AS productdetails, assets.hierarchy AS hierarchy, assets.registration AS registration, assets.alarms AS alarms, assets.timeseriesdata AS timeseriesdata, assets.sourcereferences AS sourcereferences, assets.almid AS almid, assets.essid AS essid, assets.emcpid AS emcpid, assets.commref AS commref, assets.createdby AS createdby, assets.p_starttime AS p_starttime, assets.p_endtime AS p_endtime, iv_master_siteid_assets_sublocation.sourceid AS sourceid FROM iv_master_siteid_assets_sublocation AS iv_master_siteid_assets_sublocation NESTED PARALLEL LEFT OUTER JOIN 20 assets AS assets ON iv_master_siteid_assets_sublocation.asset_id = assets.assetid ;

ALTER VIEW iv_master_siteid_assets_sublocation_j_assets
 LAYOUT (iv_master_siteid_assets_sublocation = [20, 20, 200, 200], assets = [343, 37, 200, 200]);

CREATE OR REPLACE VIEW api3 FOLDER = '/4 - business views/api3' AS SELECT bv_dynamodb_dfdev_master_siteid_3.id AS siteid, api3_finalview.sitename AS sitename, api3_finalview.sublocations AS hierarchy, api3_finalview.assets AS assets FROM bv_dynamodb_dfdev_master_siteid_3 AS bv_dynamodb_dfdev_master_siteid_3 NESTED ORDERED LEFT OUTER JOIN api3_finalview AS api3_finalview ON bv_dynamodb_dfdev_master_siteid_3.reltiogoldenid = api3_finalview.siteid ;

ALTER VIEW api3
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3 = [20, 20, 200, 200], api3_finalview = [421, 35, 200, 200]);

CREATE OR REPLACE VIEW api3_finalview_flatten FOLDER = '/3 - integration/api3/archive' AS SELECT siteid AS siteid, sitename AS sitename, sublocations AS sublocations, parentid AS parentid, source AS source, id AS id, source AS source_2, sourceid AS sourceid FROM FLATTEN api3_finalview AS v ( v.assets);

ALTER VIEW api3_finalview_flatten
 LAYOUT (api3_finalview = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW api3_finalview_masterid_copy FOLDER = '/5 - data services/rest/api7' AS SELECT bv_dynamodb_dfdev_master_siteid_3.id AS siteid, api3_finalview.sitename AS sitename, api3_finalview.sublocations AS sublocations, api3_finalview.assets AS assets FROM bv_dynamodb_dfdev_master_siteid_3 AS bv_dynamodb_dfdev_master_siteid_3 NESTED ORDERED LEFT OUTER JOIN api3_finalview AS api3_finalview ON bv_dynamodb_dfdev_master_siteid_3.reltiogoldenid = api3_finalview.siteid ;

ALTER VIEW api3_finalview_masterid_copy
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3 = [20, 20, 200, 200], api3_finalview = [421, 35, 200, 200]);

CREATE OR REPLACE VIEW api3_finalview_postgres_masterid FOLDER = '/3 - integration/api3/postgres' AS SELECT bv_dynamodb_dfdev_master_siteid_3.id AS siteid, api3_finalview_postgres.sitename AS sitename, api3_finalview_postgres.sublocations AS sublocations, api3_finalview_postgres.assets AS assets FROM bv_dynamodb_dfdev_master_siteid_3 AS bv_dynamodb_dfdev_master_siteid_3 NESTED ORDERED LEFT OUTER JOIN api3_finalview_postgres AS api3_finalview_postgres ON bv_dynamodb_dfdev_master_siteid_3.reltiogoldenid = api3_finalview_postgres.siteid ;

ALTER VIEW api3_finalview_postgres_masterid
 LAYOUT (bv_dynamodb_dfdev_master_siteid_3 = [38, 15, 200, 200], api3_finalview_postgres = [511, 16, 200, 200]);

CREATE OR REPLACE VIEW f_assets_v3 FOLDER = '/3 - integration/api4/v 2.0' AS SELECT id AS id, name AS name, description AS description, emcpid AS emcpid, almid AS almid, essid AS essid, commref AS commref, reltiogoldenid AS reltiogoldenid, sourcereferences AS sourcereferences, alarms AS alarms, timeseriesdata AS timeseriesdata, productdetails AS productdetails, hierarchy AS hierarchy, registration AS registration, p_starttime AS p_starttime, p_endtime AS p_endtime, attributes_array_attributes_name AS attributes_array_attributes_name, value AS value FROM FLATTEN assets_v3 AS v ( v.attributes_array.attributes);

ALTER VIEW f_assets_v3
 LAYOUT (assets_v3 = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_customer_sites_assets FOLDER = '/3 - integration/api6' AS SELECT iv_master_sites_j_reltio_sitedetails.customerid AS customerid, iv_master_sites_j_reltio_sitedetails.siteid AS siteid, iv_master_sites_j_reltio_sitedetails.name AS name, iv_master_sites_j_reltio_sitedetails.address AS address, iv_master_sites_j_reltio_sitedetails.businesstype AS businesstype, iv_master_sites_j_reltio_sitedetails.phone AS phone, iv_master_sites_j_reltio_sitedetails.website AS website, iv_master_sites_j_reltio_sitedetails.seprimarycontact AS seprimarycontact, iv_master_sites_j_reltio_sitedetails.marketsegment AS marketsegment, iv_master_sites_j_reltio_sitedetails.marketsubsegment AS marketsubsegment, iv_master_sites_j_reltio_sitedetails.customerclassificationlevel1 AS customerclassificationlevel1, iv_master_sites_j_reltio_sitedetails.customerclassificationlevel2 AS customerclassificationlevel2, iv_master_siteid_assets_sublocation_j_assets.sublocations AS sublocations, nest(iv_master_siteid_assets_sublocation_j_assets.assetid, iv_master_siteid_assets_sublocation_j_assets.name, iv_master_siteid_assets_sublocation_j_assets.label, iv_master_siteid_assets_sublocation_j_assets.description, iv_master_siteid_assets_sublocation_j_assets.hierarchy, iv_master_siteid_assets_sublocation_j_assets.timeseriesdata, iv_master_siteid_assets_sublocation_j_assets.attributes, iv_master_siteid_assets_sublocation_j_assets.alarms, iv_master_siteid_assets_sublocation_j_assets.registration, iv_master_siteid_assets_sublocation_j_assets.sourcereferences) AS data, iv_master_siteid_assets_sublocation_j_assets.sourceid AS sourceid FROM iv_master_sites_j_reltio_sitedetails AS iv_master_sites_j_reltio_sitedetails NESTED PARALLEL LEFT OUTER JOIN 20 iv_master_siteid_assets_sublocation_j_assets AS iv_master_siteid_assets_sublocation_j_assets ON iv_master_sites_j_reltio_sitedetails.siteid = iv_master_siteid_assets_sublocation_j_assets.id  GROUP BY iv_master_siteid_assets_sublocation_j_assets.sublocations, iv_master_sites_j_reltio_sitedetails.userid, iv_master_sites_j_reltio_sitedetails.customerid, iv_master_sites_j_reltio_sitedetails.siteid, iv_master_sites_j_reltio_sitedetails.name, iv_master_sites_j_reltio_sitedetails.address, iv_master_sites_j_reltio_sitedetails.businesstype, iv_master_sites_j_reltio_sitedetails.phone, iv_master_sites_j_reltio_sitedetails.website, iv_master_sites_j_reltio_sitedetails.seprimarycontact, iv_master_sites_j_reltio_sitedetails.marketsegment, iv_master_sites_j_reltio_sitedetails.marketsubsegment, iv_master_sites_j_reltio_sitedetails.customerclassificationlevel1, iv_master_sites_j_reltio_sitedetails.customerclassificationlevel2, iv_master_siteid_assets_sublocation_j_assets.sourceid;

ALTER VIEW iv_customer_sites_assets
 LAYOUT (iv_master_sites_j_reltio_sitedetails = [26, 22, 200, 200], iv_master_siteid_assets_sublocation_j_assets = [292, 37, 200, 200]);

CREATE OR REPLACE VIEW p_f_p_reltio_alm_ess_emcp_sitedetails_new FOLDER = '/3 - integration/api2/archive' AS SELECT f_p_reltio_alm_ess_emcp_sitedetails_new.id AS id, f_p_reltio_alm_ess_emcp_sitedetails_new.name AS name, f_p_reltio_alm_ess_emcp_sitedetails_new.address AS address, f_p_reltio_alm_ess_emcp_sitedetails_new.createdby AS createdby, f_p_reltio_alm_ess_emcp_sitedetails_new.marketsegment AS marketsegment, f_p_reltio_alm_ess_emcp_sitedetails_new.customerclassfiicationlevel1 AS customerclassfiicationlevel1, f_p_reltio_alm_ess_emcp_sitedetails_new.sourcereferences AS sourcereferences, f_p_reltio_alm_ess_emcp_sitedetails_new.description AS description, nest(f_p_reltio_alm_ess_emcp_sitedetails_new.sublocationid, f_p_reltio_alm_ess_emcp_sitedetails_new.parentid, f_p_reltio_alm_ess_emcp_sitedetails_new.locationtype, f_p_reltio_alm_ess_emcp_sitedetails_new.sublocationname) AS hierarchy, f_p_reltio_alm_ess_emcp_sitedetails_new.source_2 AS source_2 FROM f_p_reltio_alm_ess_emcp_sitedetails_new WHERE (sublocationid <> '' AND parentid <> '' AND sublocationname <> '' AND locationtype <> '') GROUP BY f_p_reltio_alm_ess_emcp_sitedetails_new.id, f_p_reltio_alm_ess_emcp_sitedetails_new.name, f_p_reltio_alm_ess_emcp_sitedetails_new.address, f_p_reltio_alm_ess_emcp_sitedetails_new.createdby, f_p_reltio_alm_ess_emcp_sitedetails_new.marketsegment, f_p_reltio_alm_ess_emcp_sitedetails_new.customerclassfiicationlevel1, f_p_reltio_alm_ess_emcp_sitedetails_new.sourcereferences, f_p_reltio_alm_ess_emcp_sitedetails_new.description, f_p_reltio_alm_ess_emcp_sitedetails_new.source_2;

ALTER VIEW p_f_p_reltio_alm_ess_emcp_sitedetails_new
 LAYOUT (f_p_reltio_alm_ess_emcp_sitedetails_new = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW assets_new FOLDER = '/4 - business views/api4' AS SELECT id AS assetid, name AS name, description AS description, nest(attributes_array_attributes_name, value) AS attributes, productdetails AS productdetails, hierarchy AS hierarchy, registration AS registration, alarms AS alarms, timeseriesdata AS timeseriesdata, sourcereferences AS sourcereferences, p_starttime AS p_starttime, p_endtime AS p_endtime FROM f_assets_v3 GROUP BY id, name, description, emcpid, almid, essid, commref, reltiogoldenid, sourcereferences, alarms, timeseriesdata, productdetails, hierarchy, registration, p_starttime, p_endtime;

ALTER VIEW assets_new
 LAYOUT (f_assets_v3 = [20, 20, 200, 200]);

CREATE OR REPLACE VIEW iv_usr_j_iv_customer_sites_assets FOLDER = '/3 - integration/api6' AS SELECT iv_master_customer_reltio_details.userid AS userid, iv_master_customer_reltio_details.customerid AS customerid, iv_master_customer_reltio_details.name AS name, iv_master_customer_reltio_details.address AS address, iv_master_customer_reltio_details.businesstype AS businesstype, iv_master_customer_reltio_details.phone AS phone, iv_master_customer_reltio_details.website AS website, iv_master_customer_reltio_details.seprimarycontact AS seprimarycontact, iv_master_customer_reltio_details.marketsegment AS marketsegment, iv_master_customer_reltio_details.marketsubsegment AS marketsubsegment, iv_master_customer_reltio_details.customerclassificationlevel1 AS customerclassificationlevel1, iv_master_customer_reltio_details.customerclassificationlevel2 AS customerclassificationlevel2, nest(iv_customer_sites_assets.siteid, iv_customer_sites_assets.name, iv_customer_sites_assets.address, iv_customer_sites_assets.businesstype, iv_customer_sites_assets.phone, iv_customer_sites_assets.website, iv_customer_sites_assets.seprimarycontact, iv_customer_sites_assets.marketsegment, iv_customer_sites_assets.marketsubsegment, iv_customer_sites_assets.customerclassificationlevel1, iv_customer_sites_assets.customerclassificationlevel2, iv_customer_sites_assets.sublocations) AS sitedetails, nest(iv_customer_sites_assets.data) AS assets, id FROM iv_master_customer_reltio_details AS iv_master_customer_reltio_details NESTED PARALLEL LEFT OUTER JOIN 5 iv_customer_sites_assets AS iv_customer_sites_assets ON iv_master_customer_reltio_details.customerid = iv_customer_sites_assets.customerid  WHERE iv_master_customer_reltio_details.userid = id GROUP BY iv_master_customer_reltio_details.name, iv_master_customer_reltio_details.address, iv_master_customer_reltio_details.businesstype, iv_master_customer_reltio_details.phone, iv_master_customer_reltio_details.website, iv_master_customer_reltio_details.seprimarycontact, iv_master_customer_reltio_details.marketsegment, iv_master_customer_reltio_details.marketsubsegment, iv_master_customer_reltio_details.customerclassificationlevel1, iv_master_customer_reltio_details.customerclassificationlevel2, iv_master_customer_reltio_details.customerid, iv_master_customer_reltio_details.userid USING PARAMETERS ( id : text);

ALTER VIEW iv_usr_j_iv_customer_sites_assets
 LAYOUT (iv_master_customer_reltio_details = [20, 20, 200, 200], iv_customer_sites_assets = [343, 31, 200, 200]);

CREATE OR REPLACE VIEW all_data FOLDER = '/4 - business views/api6' AS SELECT id AS userid, nest(customerid, name, address, businesstype, phone, website, seprimarycontact, marketsegment, marketsubsegment, customerclassificationlevel1, customerclassificationlevel2, sitedetails, assets) AS customer FROM iv_usr_j_iv_customer_sites_assets GROUP BY id, userid;

ALTER VIEW all_data
 LAYOUT (iv_usr_j_iv_customer_sites_assets = [20, 20, 200, 200]);

# #######################################
# ASSOCIATIONS
# #######################################
CREATE OR REPLACE ASSOCIATION bv_csv_ess_siteid_meterid_datafederation_bv_dynamodb_dfdev_master_siteid_3 REFERENTIAL CONSTRAINT 
FOLDER = '/6 - associations'
    ENDPOINT bv_dynamodb_dfdev_master_siteid_3 bv_csv_ess_siteid_meterid PRINCIPAL (1)
    ENDPOINT bv_csv_ess_siteid_meterid bv_dynamodb_dfdev_master_siteid_3 (1)
    ADD MAPPING siteid=essid;

ALTER ASSOCIATION bv_csv_ess_siteid_meterid_datafederation_bv_dynamodb_dfdev_master_siteid_3
 LAYOUT (bv_csv_ess_siteid_meterid = [333, 102, 200, 200], bv_dynamodb_dfdev_master_siteid_3 = [322, 47, 200, 200]);

CREATE OR REPLACE ASSOCIATION bv_csv_ess_siteid_meterid_datafederation_ds_dynamodb_dfe_dev_assetid REFERENTIAL CONSTRAINT 
FOLDER = '/6 - associations'
    ENDPOINT ds_dynamodb_dfe_dev_assetid bv_csv_ess_siteid_meterid PRINCIPAL (1)
    ENDPOINT bv_csv_ess_siteid_meterid bv_dynamodb_dfe_dev_assetid (1)
    ADD MAPPING meterid=essid;

ALTER ASSOCIATION bv_csv_ess_siteid_meterid_datafederation_ds_dynamodb_dfe_dev_assetid
 LAYOUT (bv_csv_ess_siteid_meterid = [5, 31, 200, 200], bv_dynamodb_dfe_dev_assetid = [452, 32, 200, 200]);

CREATE OR REPLACE ASSOCIATION bv_csv_sitelist_datafederation_bv_csv_ess_siteid_meterid REFERENTIAL CONSTRAINT 
FOLDER = '/6 - associations'
    ENDPOINT bv_csv_ess_siteid_meterid bv_csv_sitelist PRINCIPAL (0,1)
    ENDPOINT bv_csv_sitelist bv_csv_ess_siteid_meterid (0,*)
    ADD MAPPING siteid_0=siteid
    ADD MAPPING reltioid=reltioid
    ADD MAPPING client=client
    ADD MAPPING clientid_0=clientid_0
    ADD MAPPING clienttype_0=clienttype_0;

ALTER ASSOCIATION bv_csv_sitelist_datafederation_bv_csv_ess_siteid_meterid
 LAYOUT (bv_csv_sitelist = [120, 109, 200, 200], bv_csv_ess_siteid_meterid = [443, 50, 200, 200]);

# #######################################
# WEBSERVICES
# #######################################
CREATE OR REPLACE REST WEBSERVICE all_data
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW all_data FIELDS (
            userid : 'text'('/userid'='userId') INPUT_ONLY OBL, 
            customer : '_array_register_customerid_name_address_businesstype_phone_website_sepcac76bdd-581d-4149-bc86-95844d'(
                    '/customer/address/addressline1'='street',
                    '/customer/address/addresstype'='type',
                    '/customer/address/postalcode'='postalCode',
                    '/customer/assets/data/alarms/alarminstance/alarmconcept'='alarmConcept',
                    '/customer/assets/data/alarms/alarminstance/alarmconceptid'='alarmConceptId',
                    '/customer/assets/data/alarms/alarminstance/alarmcontrol'='alarmControl',
                    '/customer/assets/data/alarms/alarminstance/alarmfamily'='alarmFamily',
                    '/customer/assets/data/alarms/alarminstance/alarmmodel'='alarmModel',
                    '/customer/assets/data/alarms/alarminstance/alarmpriority'='alarmPriority',
                    '/customer/assets/data/alarms/alarminstance/alarmstate'='alarmState',
                    '/customer/assets/data/alarms/alarminstance/thingid'='thingId',
                    '/customer/assets/data/alarms/alarmoccurrencepvalues'='alarmOccurrencePvalues',
                    '/customer/assets/data/alarms/alarmstate'='alarmState',
                    '/customer/assets/data/alarms/endtime'='endTime',
                    '/customer/assets/data/alarms/possiblecause'='possibleCause',
                    '/customer/assets/data/alarms/possibleproblem'='possibleProblem',
                    '/customer/assets/data/alarms/possiblerecommendation'='possibleRecommendation',
                    '/customer/assets/data/alarms/possiblerisk'='possibleRisk',
                    '/customer/assets/data/alarms/starttime'='startTime',
                    '/customer/assets/data/assetid'='id',
                    '/customer/assets/data/hierarchy/parent/serialnumber'='serialNumber',
                    '/customer/assets/data/registration/address/postalcode'='postalCode',
                    '/customer/assets/data/registration/createdby'='createdBy',
                    '/customer/assets/data/registration/creationdate'='creationDate',
                    '/customer/assets/data/registration/lastmodifiedby'='lastModifiedBy',
                    '/customer/assets/data/registration/lastmodifieddate'='lastModifiedDate',
                    '/customer/assets/data/sourcereferences'='sourceReferences',
                    '/customer/assets/data/timeseriesdata'='timeSeriesData',
                    '/customer/assets/data/timeseriesdata/value/timestamp'='timeStamp',
                    '/customer/businesstype'='businessType',
                    '/customer/customerclassificationlevel1'='customerClassificationLevel1',
                    '/customer/customerclassificationlevel2'='customerClassificationLevel2',
                    '/customer/customerid'='id',
                    '/customer/marketsegment'='marketSegment',
                    '/customer/marketsubsegment'='marketSubSegment',
                    '/customer/seprimarycontact'='sePrimaryContact',
                    '/customer/sitedetails'='siteDetails',
                    '/customer/sitedetails/address/addressline1'='street',
                    '/customer/sitedetails/address/addresstype'='type',
                    '/customer/sitedetails/address/postalcode'='postalCode',
                    '/customer/sitedetails/businesstype'='businessType',
                    '/customer/sitedetails/customerclassificationlevel1'='customerClassificationLevel1',
                    '/customer/sitedetails/customerclassificationlevel2'='customerClassificationLevel2',
                    '/customer/sitedetails/marketsegment'='marketSegment',
                    '/customer/sitedetails/marketsubsegment'='marketSubSegment',
                    '/customer/sitedetails/seprimarycontact'='sePrimaryContact',
                    '/customer/sitedetails/siteid'='id',
                    '/customer/sitedetails/sublocations'='hierarchy',
                    '/customer/sitedetails/sublocations/label'='name',
                    '/customer/sitedetails/sublocations/locationtype'='locationType',
                    '/customer/sitedetails/sublocations/parentid'='parentId') OUTPUT_ONLY
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api6';

CREATE OR REPLACE REST WEBSERVICE api3
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW api3 FIELDS (
            siteid : 'text'('/siteid'='siteId'), 
            sitename : 'text'('/sitename'='siteName') OUTPUT_ONLY, 
            hierarchy : '_array_register_id_locationtype_label_parentid'(
                    '/hierarchy/locationtype'='locationType',
                    '/hierarchy/parentid'='parentId',
                    '/sublocations'='subLocations',
                    '/sublocations/locationtype'='locationType',
                    '/sublocations/parentid'='parentId') OUTPUT_ONLY, 
            assets : '_array_register_id_name_description_productdetails_serialnumber_label_parentid_source_sourceid'(
                    '/assets/parentid'='parentId',
                    '/assets/productdetails'='productDetails',
                    '/assets/productdetails/imageurl'='imageUrl',
                    '/assets/serialnumber'='serialNumber',
                    '/assets/sourceid'='sourceId') OUTPUT_ONLY
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api3';

CREATE OR REPLACE REST WEBSERVICE api3_old
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW api3 FIELDS (
            sitename : 'text'('/sitename'='siteName') OUTPUT_ONLY, 
            hierarchy : '_array_register_id_locationtype_label_parentid'(
                    '/sublocations'='subLocations',
                    '/sublocations/locationtype'='locationType',
                    '/sublocations/parentid'='parentId') OUTPUT_ONLY, 
            assets : '_array_register_id_name_description_productdetails_serialnumber_label_parentid_source_sourceid'(
                    '/assets/parentid'='parentId',
                    '/assets/productdetails'='productDetails',
                    '/assets/productdetails/imageurl'='imageUrl',
                    '/assets/serialnumber'='serialNumber') OUTPUT_ONLY
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api3';

CREATE OR REPLACE REST WEBSERVICE api3_postgres
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW api3_finalview_postgres_masterid FIELDS (
            siteid : 'text'('/siteid'='siteId') OBL, 
            sitename : 'text'('/sitename'='siteName') OUTPUT_ONLY, 
            sublocations : '_array_register_id_locationtype_label_parentid'(
                    '/sublocations'='subLocations',
                    '/sublocations/locationtype'='locationType',
                    '/sublocations/parentid'='parentId') OUTPUT_ONLY, 
            assets : '_array_register_id_name_description_productdetails_serialnumber_label_parentid_source'(
                    '/assets/parentid'='parentId',
                    '/assets/productdetails'='productDetails',
                    '/assets/productdetails/imageurl'='imageUrl',
                    '/assets/serialnumber'='serialNumber') OUTPUT_ONLY
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/3 - integration/api3/postgres';

CREATE OR REPLACE REST WEBSERVICE api5
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW api5 FIELDS (
            entityname : 'text' OBL, 
            countrycode : 'text' OBL, 
            items : 'bv_reltio_mdm_details_jsonarray', 
            organization_name : 'text', 
            developeremail_0 : 'text', 
            issued_at : 'text', 
            client_id : 'text', 
            application_name : 'text', 
            scope : 'text', 
            expires_in : 'text', 
            refresh_count : 'text', 
            status : 'text', 
            apigee_token : 'text', 
            jsonarray : 'bv_reltio_mdm_details_jsonarray', 
            refresh_token_expires_in : 'text', 
            api_product_list : 'text', 
            api_product_list_json : 'apigee_token_api_product_list_json', 
            token_type : 'text', 
            access_token : 'text'
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api5';

CREATE OR REPLACE REST WEBSERVICE assets
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW assets FIELDS (
            assetid : 'text'('/assetid'='assetId') OBL, 
            name : 'text', 
            description : 'text', 
            attributes : '_array_register_name_value', 
            productdetails : '_array_register_productattributes_productimage_productdocuments_productcharacteristics'(
                    '/productdetails'='productDetails',
                    '/productdetails/productattributes'='productAttributes',
                    '/productdetails/productcharacteristics'='productCharacteristics',
                    '/productdetails/productdocuments'='productDocuments',
                    '/productdetails/productimage'='productImage'), 
            hierarchy : 'ds_almsit_api_data_hierarchy_baa35fae-d166-4ee1-92b2-2aa8ee30fa2a', 
            registration : '_array_register_id_name_address_createdby_creationdate_lastmodifiedby_lastmodifieddate'(
                    '/registration/createdby'='createdBy',
                    '/registration/creationdate'='creationDate',
                    '/registration/lastmodifiedby'='lastModifiedBy',
                    '/registration/lastmodifieddate'='lastModifiedDate'), 
            alarms : 'ds_emcp_apis_alarmoccurrences_items'(
                    '/alarms/alarminstance'='alarmInstance',
                    '/alarms/alarmoccurrencepvalues'='alarmOccurrencePvalues',
                    '/alarms/alarmstate'='alarmState',
                    '/alarms/endtime'='endTime',
                    '/alarms/possiblecause'='possibleCause',
                    '/alarms/possibleproblem'='possibleProblem',
                    '/alarms/possiblerecommendation'='possibleRecommendation',
                    '/alarms/possiblerisk'='possibleRisk',
                    '/alarms/starttime'='startTime'), 
            timeseriesdata : '_array_register_name_label_unit_value'('/timeseriesdata'='timeSeriesData'), 
            sourcereferences : '_array_register_source_id'('/sourcereferences'='sourceReferences'), 
            almid : 'text' INPUT_ONLY, 
            essid : 'text' INPUT_ONLY, 
            emcpid : 'text' INPUT_ONLY, 
            commref : 'text' INPUT_ONLY, 
            createdby : 'text' INPUT_ONLY, 
            p_starttime : 'text' INPUT_ONLY, 
            p_endtime : 'text' INPUT_ONLY
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api4';

CREATE OR REPLACE REST WEBSERVICE assets_copy
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW assets FIELDS (
            assetid : 'text'('/assetid'='assetId') OBL, 
            name : 'text', 
            description : 'text', 
            attributes : '_array_register_name_value', 
            hierarchy : 'ds_almsit_api_data_hierarchy_baa35fae-d166-4ee1-92b2-2aa8ee30fa2a', 
            registration : '_array_register_id_name_address_createdby_creationdate_lastmodifiedby_lastmodifieddate', 
            productdetails : '_array_register_productattributes_productimage_productdocuments_productcharacteristics'('/productdetails'='productDetails'), 
            alarms : 'ds_emcp_apis_alarmoccurrences_items', 
            timeseriesdata : '_array_register_name_label_unit_value'('/timeseriesdata'='timeSeriesData'), 
            sourcereferences : '_array_register_source_id'('/sourcereferences'='sourceReferences'), 
            createdby : 'text' UNESCAPED, 
            lastmodifiedby : 'text' UNESCAPED, 
            creationdate : 'text' UNESCAPED, 
            createdby_2 : 'text' UNESCAPED, 
            id : 'text' UNESCAPED, 
            address : '_array_register_street_city_state_country_postalcode_latitude_longitude' UNESCAPED
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api4';

CREATE OR REPLACE REST WEBSERVICE assets_new
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW assets_new FIELDS (
            assetid : 'text'('/assetid'='assetId') OBL, 
            name : 'text' OUTPUT_ONLY, 
            description : 'text' OUTPUT_ONLY, 
            attributes : '_array_register_attributes_array_attributes_name_value'('/attributes/attributes_array_attributes_name'='name') OUTPUT_ONLY, 
            productdetails : '_array_register_productattributes_productimage_productdocuments_productcharacteristics'(
                    '/productdetails'='productDetails',
                    '/productdetails/productattributes'='productAttributes',
                    '/productdetails/productcharacteristics'='productCharacteristics',
                    '/productdetails/productdocuments'='productDocuments',
                    '/productdetails/productimage'='productImage') OUTPUT_ONLY, 
            hierarchy : '_register_almassetidentifier_parentassetid_nodepath' OUTPUT_ONLY, 
            registration : '_register_id_name_businesstype_phone_website_seprimarycontact_marketsegment_marketsubsegment_custome'(
                    '/registration/address/addressline1'='street',
                    '/registration/address/addresstype'='addressType',
                    '/registration/address/postalcode'='postalCode',
                    '/registration/businesstype'='businessType',
                    '/registration/customerclassificationlevel1'='customerClassificationLevel1',
                    '/registration/customerclassificationlevel2'='customerClassificationLevel2',
                    '/registration/marketsegment'='marketSegment',
                    '/registration/marketsubsegment'='marketSubSegment',
                    '/registration/seprimarycontact'='sePrimaryContact') OUTPUT_ONLY, 
            alarms : 'ds_emcp_apis_alarmoccurrences_items'(
                    '/alarms/__typename'='typename',
                    '/alarms/acknowledgementalarmstatetransition'='acknowledgementAlarmStateTransition',
                    '/alarms/alarminstance'='alarmInstance',
                    '/alarms/alarmoccurrencepvalues'='alarmOccurrencePValues',
                    '/alarms/alarmstate'='alarmState',
                    '/alarms/endtime'='endTime',
                    '/alarms/possiblecause'='possibleCause',
                    '/alarms/possibleproblem'='possibleProblem',
                    '/alarms/possiblerecommendation'='possibleRecommendation',
                    '/alarms/possiblerisk'='possibleRisk',
                    '/alarms/starttime'='startTime') OUTPUT_ONLY, 
            timeseriesdata : '_array_register_name_label_unit_value'('/timeseriesdata'='timeSeriesData') OUTPUT_ONLY, 
            sourcereferences : '_array_register_sourcename_sourceid'(
                    '/sourcereferences'='sourceReferences',
                    '/sourcereferences/sourceid'='id',
                    '/sourcereferences/sourcename'='name') OUTPUT_ONLY, 
            p_starttime : 'text'('/p_starttime'='startTime') INPUT_ONLY, 
            p_endtime : 'text'('/p_endtime'='endTime') INPUT_ONLY
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api4';

CREATE OR REPLACE REST WEBSERVICE bv_csv_sitelist_j_p_test_alm_ping
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)
    RESOURCES (
        VIEW bv_csv_sitelist_j_p_test_alm_ping FIELDS (
            client : 'text', 
            clientid_0 : 'text', 
            clienttype_0 : 'text', 
            division : 'text', 
            site : 'text', 
            siteid_0 : 'text', 
            siteaddress_0 : 'text', 
            reltioid : 'text', 
            userid : 'text', 
            hello : 'text'
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        MAX_ROWS_PER_PAGE = 5
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/3 - integration/api1/archive';

CREATE OR REPLACE REST WEBSERVICE iv_customer_sites_assets
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW iv_customer_sites_assets FIELDS (
            userid : 'text' INPUT_ONLY OBL, 
            customerid : 'text', 
            name : 'text', 
            address : '_register_addressline1_city_state_postalcode_country_addresstype', 
            businesstype : 'text', 
            phone : 'text', 
            website : 'text', 
            seprimarycontact : 'text', 
            marketsegment : 'text', 
            marketsubsegment : 'text', 
            customerclassificationlevel1 : 'text', 
            customerclassificationlevel2 : 'text', 
            customerid2 : 'text', 
            siteid : 'text', 
            name_s : 'text', 
            address_s : '_register_addressline1_city_state_postalcode_country_addresstype', 
            businesstype_s : 'text', 
            phone_s : 'text', 
            website_s : 'text', 
            seprimarycontact_s : 'text', 
            marketsegment_s : 'text', 
            marketsubsegment_s : 'text', 
            customerclassificationlevel1_s : 'text', 
            customerclassificationlevel2_s : 'text', 
            description_s : 'text', 
            createdby : 'text', 
            id : 'text', 
            reltiogoldenid : 'text', 
            asset_id : 'text', 
            productdetails : '_register_brand_range_reference_description_imageurl', 
            name_a : 'text', 
            serialnumber : 'text', 
            description : 'text', 
            source : 'text', 
            label : 'text', 
            localsiteid : 'text', 
            parentid : 'int', 
            sublocations : '_array_register_id_locationtype_label_parentid'
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/2 - logical model';

CREATE OR REPLACE REST WEBSERVICE iv_final_emcp_alm_ess_masterid_with_reltiosite
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)
    RESOURCES (
        VIEW iv_final_emcp_alm_ess_masterid_with_reltiosite FIELDS (
            id : 'text', 
            name : 'text', 
            address : '_register_street_city_postalcode_country_type'('/address/postalcode'='postalCode'), 
            description : 'text', 
            createdby : 'text'('/createdby'='createdBy'), 
            label : 'text', 
            customerclassfiicationlevel1 : 'text'('/customerclassfiicationlevel1'='customerClassfiicationLevel1'), 
            marketsegment : 'text'('/marketsegment'='marketSegment'), 
            sublocationid : 'text'('/sublocationid'='sublocationId'), 
            source : 'text', 
            source_2 : 'text', 
            source_3 : 'text', 
            userid : 'text'('/userid'='userId') OBL
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/3 - integration/api1/archive/v2.0';

CREATE OR REPLACE REST WEBSERVICE iv_final_emcp_alm_ess_masterid_without_reltiosite
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)
    RESOURCES (
        VIEW iv_final_emcp_alm_ess_masterid_without_reltiosite FIELDS (
            id : 'text', 
            name : 'text', 
            address : '_register_siteaddressline1_city_statename_zipcode_countryname'(
                    '/address/countryname'='countryName',
                    '/address/siteaddressline1'='siteAddressLine1',
                    '/address/statename'='stateName',
                    '/address/zipcode'='zipCode'), 
            createdby : 'text'('/createdby'='createdBy'), 
            siteid : 'text'('/siteid'='siteId'), 
            source : 'text', 
            description : 'text', 
            sublocationid : 'text'('/sublocationid'='subLocationId'), 
            publishercode : 'text'('/publishercode'='publisherCode'), 
            divisionname : 'text'('/divisionname'='divisionName'), 
            label : 'text', 
            source_2 : 'text', 
            source_3 : 'text', 
            userid : 'text'('/userid'='userId') OBL
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/3 - integration/api1/archive/v2.0';

CREATE OR REPLACE REST WEBSERVICE p_bv_almsit_api_product_data_all
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)
    RESOURCES (
        VIEW p_bv_almsit_api_product_data_all FIELDS (
            data : 'ds_almsit_api_data', 
            commref : 'text' OBL
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/1 - connectivity/2 - base views/new';

CREATE OR REPLACE REST WEBSERVICE p_p_p_bv_almsit_api_product_data_all
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)
    RESOURCES (
        VIEW p_p_p_bv_almsit_api_product_data_all FIELDS (
            commref : 'text' OBL, 
            productdetails : '_array_register_productattributes_productimage_productdocuments_productcharacteristics'
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/1 - connectivity/2 - base views/new';

CREATE OR REPLACE REST WEBSERVICE reltio_alm_ess_emcp_sitedetails
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 100000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW reltio_alm_ess_emcp_sitedetails FIELDS (
            id : 'text', 
            name : 'text' OUTPUT_ONLY, 
            customername : 'text'('/customername'='customerName') OUTPUT_ONLY, 
            address : '_register_street_city_postalcode_country_type'('/address/postalcode'='postalCode') OUTPUT_ONLY, 
            createdby : 'text'('/createdby'='createdBy') OUTPUT_ONLY, 
            marketsegment : 'text' OUTPUT_ONLY, 
            customerclassfiicationlevel1 : 'text'('/customerclassfiicationlevel1'='customerClassfiicationLevel1') OUTPUT_ONLY, 
            description : 'text' OUTPUT_ONLY, 
            label : 'text' OUTPUT_ONLY, 
            site : 'text' OUTPUT_ONLY, 
            sublocationid : 'text' OUTPUT_ONLY, 
            source : 'text' UNESCAPED
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api2';

CREATE OR REPLACE REST WEBSERVICE sites
    CONNECTION (
        CHUNKSIZE = 1000
        CHUNKTIMEOUT = 1000
        QUERYTIMEOUT = 900000
        POOLENABLED = true
        POOLINITSIZE = 0
        POOLMAXACTIVE = 30
    )
    DEFAULTREPRESENTATION = JSON
    SUPPORTEDREPRESENTATIONS (JSON)    AUTHENTICATION (OAUTH2 )

    RESOURCES (
        VIEW sites FIELDS (
            userid : 'text'('/userid'='userId') INPUT_ONLY OBL, 
            data : '_array_register_customerid_name_address_businesstype_phone_website_sepd912b712-9f7d-4a3f-9853-3294fa'(
                    '/data/address/addressline1'='street',
                    '/data/address/addresstype'='type',
                    '/data/address/postalcode'='postalCode',
                    '/data/businesstype'='businessType',
                    '/data/customerclassificationlevel1'='customerClassificationLevel1',
                    '/data/customerclassificationlevel2'='customerClassificationLevel2',
                    '/data/customerid'='customerId',
                    '/data/hierarchy/address/addressline1'='street',
                    '/data/hierarchy/address/addresstype'='type',
                    '/data/hierarchy/address/postalcode'='postalCode',
                    '/data/hierarchy/businesstype'='businessType',
                    '/data/hierarchy/customerclassificationlevel1'='customerClassificationLevel1',
                    '/data/hierarchy/customerclassificationlevel2'='customerClassificationLevel2',
                    '/data/hierarchy/marketsegment'='marketSegment',
                    '/data/hierarchy/marketsubsegment'='marketSubSegment',
                    '/data/hierarchy/seprimarycontact'='sePrimaryContact',
                    '/data/hierarchy/siteid'='id',
                    '/data/marketsegment'='marketSegment',
                    '/data/marketsubsegment'='marketSubSegment',
                    '/data/seprimarycontact'='sePrimaryContact') OUTPUT_ONLY
        )
    )
    OPTIONS ( NULLVALUESASEMPTYXMLELEMENTS = false
        ALLOW_CORS_ORIGINS (*) DISABLED
        PROCESS_FUNCTIONS_IN_SELECT_PARAMETER = true ) 
    OPENAPI2 ( API_VERSION = '1.0.0' ) 
    FOLDER = '/5 - data services/rest/api1';

# #######################################
# WIDGETS
# #######################################
# No widgets
# #######################################
# WEBCONTAINER WEB SERVICE DEPLOYMENTS
# #######################################
# The Web Service '37f94580-344a-431d-96a9-b5be41f63d03' was not found.
# #######################################
# WEBCONTAINER WIDGET DEPLOYMENTS
# #######################################
# No deployed widgets
# #######################################
# Closing connection with database datafederation
# #######################################
CLOSE;
